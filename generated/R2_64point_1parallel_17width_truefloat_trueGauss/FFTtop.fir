circuit FFTtop :
  module AddRawFN :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module AddRawFN_1 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_1 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_1 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_1 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_1 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_1 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_1 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_1 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexAdd :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatAdd @[Float.scala 25:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 27:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 71:15]
    inst io_res_im_inst of FloatAdd_1 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 72:15]

  module AddRawFN_2 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_2 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_2 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_2 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_2 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_2 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_2 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_2 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_3 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_3 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_3 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_3 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_3 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_3 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_3 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_3 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module ComplexSub :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatSub @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 90:15]
    inst io_res_im_inst of FloatSub_1 @[Float.scala 45:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 46:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 47:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 91:15]

  module AddRawFN_4 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_4 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_4 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_4 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_4 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_4 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_4 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_4 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_5 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_5 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_5 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_5 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_5 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_6 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_6 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_6 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_5 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_5 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_6 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_5 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module MulFullRawFN_1 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_1 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_1 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_7 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_7 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_7 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_1 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_1 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_7 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_1 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_6 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_8 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_8 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_8 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_6 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_6 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_8 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_6 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_2 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_2 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_2 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_9 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_9 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_9 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_2 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_2 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_9 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_2 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_7 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_10 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_10 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_10 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_7 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_7 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_10 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_7 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_8 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_11 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_11 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_11 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_8 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_8 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_11 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_8 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexMul :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst k1_inst of FloatAdd_2 @[Float.scala 25:22]
    k1_inst.clock <= clock
    k1_inst.reset <= reset
    k1_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    k1_inst.io.op2 <= io.op1.im @[Float.scala 27:17]
    inst k1_inst_1 of FloatMul @[Float.scala 64:22]
    k1_inst_1.clock <= clock
    k1_inst_1.reset <= reset
    k1_inst_1.io.op1 <= io.op2.re @[Float.scala 65:17]
    k1_inst_1.io.op2 <= k1_inst.io.res @[Float.scala 66:17]
    inst k2_inst of FloatSub_2 @[Float.scala 45:22]
    k2_inst.clock <= clock
    k2_inst.reset <= reset
    k2_inst.io.op1 <= io.op2.im @[Float.scala 46:17]
    k2_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    inst k2_inst_1 of FloatMul_1 @[Float.scala 64:22]
    k2_inst_1.clock <= clock
    k2_inst_1.reset <= reset
    k2_inst_1.io.op1 <= io.op1.re @[Float.scala 65:17]
    k2_inst_1.io.op2 <= k2_inst.io.res @[Float.scala 66:17]
    inst k3_inst of FloatAdd_3 @[Float.scala 25:22]
    k3_inst.clock <= clock
    k3_inst.reset <= reset
    k3_inst.io.op1 <= io.op2.re @[Float.scala 26:17]
    k3_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    inst k3_inst_1 of FloatMul_2 @[Float.scala 64:22]
    k3_inst_1.clock <= clock
    k3_inst_1.reset <= reset
    k3_inst_1.io.op1 <= io.op1.im @[Float.scala 65:17]
    k3_inst_1.io.op2 <= k3_inst.io.res @[Float.scala 66:17]
    inst io_res_re_inst of FloatSub_3 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= k3_inst_1.io.res @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 135:17]
    inst io_res_im_inst of FloatAdd_4 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= k2_inst_1.io.res @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 136:17]

  module ButterflyMul :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip wn : { re : UInt<17>, im : UInt<17>}[1]}

    wire _temp_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_1 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_1 <= _temp_T @[Modules.scala 224:50]
    node _temp_T_1 = bits(_temp_WIRE_1, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE.im <= _temp_T_1 @[Modules.scala 224:50]
    node _temp_T_2 = bits(_temp_WIRE_1, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE.re <= _temp_T_2 @[Modules.scala 224:50]
    wire _temp_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T_3 = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_3 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_3 <= _temp_T_3 @[Modules.scala 224:50]
    node _temp_T_4 = bits(_temp_WIRE_3, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE_2.im <= _temp_T_4 @[Modules.scala 224:50]
    node _temp_T_5 = bits(_temp_WIRE_3, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE_2.re <= _temp_T_5 @[Modules.scala 224:50]
    wire temp : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 224:21]
    temp[0] <= _temp_WIRE @[Modules.scala 224:21]
    temp[1] <= _temp_WIRE_2 @[Modules.scala 224:21]
    inst temp_0_inst of ComplexAdd @[Modules.scala 81:22]
    temp_0_inst.clock <= clock
    temp_0_inst.reset <= reset
    temp_0_inst.io.op1.im <= io.in[0].im @[Modules.scala 82:17]
    temp_0_inst.io.op1.re <= io.in[0].re @[Modules.scala 82:17]
    temp_0_inst.io.op2.im <= io.in[1].im @[Modules.scala 83:17]
    temp_0_inst.io.op2.re <= io.in[1].re @[Modules.scala 83:17]
    temp[0] <= temp_0_inst.io.res @[Modules.scala 226:13]
    inst temp_1_inst of ComplexSub @[Modules.scala 100:22]
    temp_1_inst.clock <= clock
    temp_1_inst.reset <= reset
    temp_1_inst.io.op1.im <= io.in[0].im @[Modules.scala 101:17]
    temp_1_inst.io.op1.re <= io.in[0].re @[Modules.scala 101:17]
    temp_1_inst.io.op2.im <= io.in[1].im @[Modules.scala 102:17]
    temp_1_inst.io.op2.re <= io.in[1].re @[Modules.scala 102:17]
    temp[1] <= temp_1_inst.io.res @[Modules.scala 227:13]
    io.out[0] <= temp[0] @[Modules.scala 266:15]
    inst io_out_1_inst of ComplexMul @[Modules.scala 158:22]
    io_out_1_inst.clock <= clock
    io_out_1_inst.reset <= reset
    io_out_1_inst.io.op1.im <= temp[1].im @[Modules.scala 159:17]
    io_out_1_inst.io.op1.re <= temp[1].re @[Modules.scala 159:17]
    io_out_1_inst.io.op2.im <= io.wn[0].im @[Modules.scala 160:17]
    io_out_1_inst.io.op2.re <= io.wn[0].re @[Modules.scala 160:17]
    io.out[1] <= io_out_1_inst.io.res @[Modules.scala 267:15]

  module AddRawFN_9 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_12 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_12 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_12 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_9 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_9 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_12 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_9 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module AddRawFN_10 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_13 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_13 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_13 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_10 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_10 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_13 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_10 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexAdd_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatAdd_5 @[Float.scala 25:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 27:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 71:15]
    inst io_res_im_inst of FloatAdd_6 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 72:15]

  module AddRawFN_11 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_14 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_14 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_14 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_11 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_11 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_14 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_11 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_12 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_15 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_15 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_15 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_12 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_12 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_15 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_12 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module ComplexSub_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatSub_4 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 90:15]
    inst io_res_im_inst of FloatSub_5 @[Float.scala 45:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 46:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 47:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 91:15]

  module AddRawFN_13 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_16 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_16 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_16 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_13 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_13 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_16 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_13 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_3 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_3 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_3 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_17 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_17 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_17 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_3 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_3 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_17 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_3 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_14 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_18 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_18 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_18 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_14 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_14 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_18 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_14 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module MulFullRawFN_4 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_4 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_4 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_19 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_19 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_19 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_4 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_4 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_19 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_4 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_15 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_20 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_20 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_20 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_15 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_15 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_20 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_15 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_5 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_5 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_5 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_21 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_21 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_21 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_5 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_5 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_21 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_5 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_16 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_22 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_22 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_22 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_16 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_16 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_22 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_16 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_17 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_23 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_23 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_23 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_17 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_17 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_23 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_17 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexMul_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst k1_inst of FloatAdd_7 @[Float.scala 25:22]
    k1_inst.clock <= clock
    k1_inst.reset <= reset
    k1_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    k1_inst.io.op2 <= io.op1.im @[Float.scala 27:17]
    inst k1_inst_1 of FloatMul_3 @[Float.scala 64:22]
    k1_inst_1.clock <= clock
    k1_inst_1.reset <= reset
    k1_inst_1.io.op1 <= io.op2.re @[Float.scala 65:17]
    k1_inst_1.io.op2 <= k1_inst.io.res @[Float.scala 66:17]
    inst k2_inst of FloatSub_6 @[Float.scala 45:22]
    k2_inst.clock <= clock
    k2_inst.reset <= reset
    k2_inst.io.op1 <= io.op2.im @[Float.scala 46:17]
    k2_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    inst k2_inst_1 of FloatMul_4 @[Float.scala 64:22]
    k2_inst_1.clock <= clock
    k2_inst_1.reset <= reset
    k2_inst_1.io.op1 <= io.op1.re @[Float.scala 65:17]
    k2_inst_1.io.op2 <= k2_inst.io.res @[Float.scala 66:17]
    inst k3_inst of FloatAdd_8 @[Float.scala 25:22]
    k3_inst.clock <= clock
    k3_inst.reset <= reset
    k3_inst.io.op1 <= io.op2.re @[Float.scala 26:17]
    k3_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    inst k3_inst_1 of FloatMul_5 @[Float.scala 64:22]
    k3_inst_1.clock <= clock
    k3_inst_1.reset <= reset
    k3_inst_1.io.op1 <= io.op1.im @[Float.scala 65:17]
    k3_inst_1.io.op2 <= k3_inst.io.res @[Float.scala 66:17]
    inst io_res_re_inst of FloatSub_7 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= k3_inst_1.io.res @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 135:17]
    inst io_res_im_inst of FloatAdd_9 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= k2_inst_1.io.res @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 136:17]

  module ButterflyMul_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip wn : { re : UInt<17>, im : UInt<17>}[1]}

    wire _temp_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_1 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_1 <= _temp_T @[Modules.scala 224:50]
    node _temp_T_1 = bits(_temp_WIRE_1, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE.im <= _temp_T_1 @[Modules.scala 224:50]
    node _temp_T_2 = bits(_temp_WIRE_1, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE.re <= _temp_T_2 @[Modules.scala 224:50]
    wire _temp_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T_3 = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_3 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_3 <= _temp_T_3 @[Modules.scala 224:50]
    node _temp_T_4 = bits(_temp_WIRE_3, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE_2.im <= _temp_T_4 @[Modules.scala 224:50]
    node _temp_T_5 = bits(_temp_WIRE_3, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE_2.re <= _temp_T_5 @[Modules.scala 224:50]
    wire temp : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 224:21]
    temp[0] <= _temp_WIRE @[Modules.scala 224:21]
    temp[1] <= _temp_WIRE_2 @[Modules.scala 224:21]
    inst temp_0_inst of ComplexAdd_1 @[Modules.scala 81:22]
    temp_0_inst.clock <= clock
    temp_0_inst.reset <= reset
    temp_0_inst.io.op1.im <= io.in[0].im @[Modules.scala 82:17]
    temp_0_inst.io.op1.re <= io.in[0].re @[Modules.scala 82:17]
    temp_0_inst.io.op2.im <= io.in[1].im @[Modules.scala 83:17]
    temp_0_inst.io.op2.re <= io.in[1].re @[Modules.scala 83:17]
    temp[0] <= temp_0_inst.io.res @[Modules.scala 226:13]
    inst temp_1_inst of ComplexSub_1 @[Modules.scala 100:22]
    temp_1_inst.clock <= clock
    temp_1_inst.reset <= reset
    temp_1_inst.io.op1.im <= io.in[0].im @[Modules.scala 101:17]
    temp_1_inst.io.op1.re <= io.in[0].re @[Modules.scala 101:17]
    temp_1_inst.io.op2.im <= io.in[1].im @[Modules.scala 102:17]
    temp_1_inst.io.op2.re <= io.in[1].re @[Modules.scala 102:17]
    temp[1] <= temp_1_inst.io.res @[Modules.scala 227:13]
    io.out[0] <= temp[0] @[Modules.scala 266:15]
    inst io_out_1_inst of ComplexMul_1 @[Modules.scala 158:22]
    io_out_1_inst.clock <= clock
    io_out_1_inst.reset <= reset
    io_out_1_inst.io.op1.im <= temp[1].im @[Modules.scala 159:17]
    io_out_1_inst.io.op1.re <= temp[1].re @[Modules.scala 159:17]
    io_out_1_inst.io.op2.im <= io.wn[0].im @[Modules.scala 160:17]
    io_out_1_inst.io.op2.re <= io.wn[0].re @[Modules.scala 160:17]
    io.out[1] <= io_out_1_inst.io.res @[Modules.scala 267:15]

  module AddRawFN_18 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_24 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_24 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_24 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_18 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_18 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_24 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_18 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module AddRawFN_19 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_25 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_25 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_25 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_19 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_19 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_25 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_19 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexAdd_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatAdd_10 @[Float.scala 25:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 27:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 71:15]
    inst io_res_im_inst of FloatAdd_11 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 72:15]

  module AddRawFN_20 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_26 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_26 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_26 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_20 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_20 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_26 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_20 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_21 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_27 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_27 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_27 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_21 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_21 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_27 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_21 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module ComplexSub_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatSub_8 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 90:15]
    inst io_res_im_inst of FloatSub_9 @[Float.scala 45:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 46:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 47:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 91:15]

  module AddRawFN_22 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_28 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_28 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_28 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_22 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_22 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_28 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_22 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_6 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_6 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_6 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_29 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_29 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_29 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_6 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_6 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_29 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_6 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_23 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_30 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_30 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_30 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_23 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_23 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_30 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_23 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module MulFullRawFN_7 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_7 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_7 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_31 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_31 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_31 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_7 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_7 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_31 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_7 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_24 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_32 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_32 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_32 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_24 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_24 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_32 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_24 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_8 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_8 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_8 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_33 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_33 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_33 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_8 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_8 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_33 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_8 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_25 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_34 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_34 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_34 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_25 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_25 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_34 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_25 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_26 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_35 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_35 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_35 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_26 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_26 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_35 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_26 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexMul_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst k1_inst of FloatAdd_12 @[Float.scala 25:22]
    k1_inst.clock <= clock
    k1_inst.reset <= reset
    k1_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    k1_inst.io.op2 <= io.op1.im @[Float.scala 27:17]
    inst k1_inst_1 of FloatMul_6 @[Float.scala 64:22]
    k1_inst_1.clock <= clock
    k1_inst_1.reset <= reset
    k1_inst_1.io.op1 <= io.op2.re @[Float.scala 65:17]
    k1_inst_1.io.op2 <= k1_inst.io.res @[Float.scala 66:17]
    inst k2_inst of FloatSub_10 @[Float.scala 45:22]
    k2_inst.clock <= clock
    k2_inst.reset <= reset
    k2_inst.io.op1 <= io.op2.im @[Float.scala 46:17]
    k2_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    inst k2_inst_1 of FloatMul_7 @[Float.scala 64:22]
    k2_inst_1.clock <= clock
    k2_inst_1.reset <= reset
    k2_inst_1.io.op1 <= io.op1.re @[Float.scala 65:17]
    k2_inst_1.io.op2 <= k2_inst.io.res @[Float.scala 66:17]
    inst k3_inst of FloatAdd_13 @[Float.scala 25:22]
    k3_inst.clock <= clock
    k3_inst.reset <= reset
    k3_inst.io.op1 <= io.op2.re @[Float.scala 26:17]
    k3_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    inst k3_inst_1 of FloatMul_8 @[Float.scala 64:22]
    k3_inst_1.clock <= clock
    k3_inst_1.reset <= reset
    k3_inst_1.io.op1 <= io.op1.im @[Float.scala 65:17]
    k3_inst_1.io.op2 <= k3_inst.io.res @[Float.scala 66:17]
    inst io_res_re_inst of FloatSub_11 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= k3_inst_1.io.res @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 135:17]
    inst io_res_im_inst of FloatAdd_14 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= k2_inst_1.io.res @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 136:17]

  module ButterflyMul_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip wn : { re : UInt<17>, im : UInt<17>}[1]}

    wire _temp_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_1 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_1 <= _temp_T @[Modules.scala 224:50]
    node _temp_T_1 = bits(_temp_WIRE_1, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE.im <= _temp_T_1 @[Modules.scala 224:50]
    node _temp_T_2 = bits(_temp_WIRE_1, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE.re <= _temp_T_2 @[Modules.scala 224:50]
    wire _temp_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T_3 = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_3 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_3 <= _temp_T_3 @[Modules.scala 224:50]
    node _temp_T_4 = bits(_temp_WIRE_3, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE_2.im <= _temp_T_4 @[Modules.scala 224:50]
    node _temp_T_5 = bits(_temp_WIRE_3, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE_2.re <= _temp_T_5 @[Modules.scala 224:50]
    wire temp : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 224:21]
    temp[0] <= _temp_WIRE @[Modules.scala 224:21]
    temp[1] <= _temp_WIRE_2 @[Modules.scala 224:21]
    inst temp_0_inst of ComplexAdd_2 @[Modules.scala 81:22]
    temp_0_inst.clock <= clock
    temp_0_inst.reset <= reset
    temp_0_inst.io.op1.im <= io.in[0].im @[Modules.scala 82:17]
    temp_0_inst.io.op1.re <= io.in[0].re @[Modules.scala 82:17]
    temp_0_inst.io.op2.im <= io.in[1].im @[Modules.scala 83:17]
    temp_0_inst.io.op2.re <= io.in[1].re @[Modules.scala 83:17]
    temp[0] <= temp_0_inst.io.res @[Modules.scala 226:13]
    inst temp_1_inst of ComplexSub_2 @[Modules.scala 100:22]
    temp_1_inst.clock <= clock
    temp_1_inst.reset <= reset
    temp_1_inst.io.op1.im <= io.in[0].im @[Modules.scala 101:17]
    temp_1_inst.io.op1.re <= io.in[0].re @[Modules.scala 101:17]
    temp_1_inst.io.op2.im <= io.in[1].im @[Modules.scala 102:17]
    temp_1_inst.io.op2.re <= io.in[1].re @[Modules.scala 102:17]
    temp[1] <= temp_1_inst.io.res @[Modules.scala 227:13]
    io.out[0] <= temp[0] @[Modules.scala 266:15]
    inst io_out_1_inst of ComplexMul_2 @[Modules.scala 158:22]
    io_out_1_inst.clock <= clock
    io_out_1_inst.reset <= reset
    io_out_1_inst.io.op1.im <= temp[1].im @[Modules.scala 159:17]
    io_out_1_inst.io.op1.re <= temp[1].re @[Modules.scala 159:17]
    io_out_1_inst.io.op2.im <= io.wn[0].im @[Modules.scala 160:17]
    io_out_1_inst.io.op2.re <= io.wn[0].re @[Modules.scala 160:17]
    io.out[1] <= io_out_1_inst.io.res @[Modules.scala 267:15]

  module AddRawFN_27 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_36 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_36 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_36 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_27 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_27 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_36 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_27 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module AddRawFN_28 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_37 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_37 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_37 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_28 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_28 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_37 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_28 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexAdd_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatAdd_15 @[Float.scala 25:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 27:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 71:15]
    inst io_res_im_inst of FloatAdd_16 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 72:15]

  module AddRawFN_29 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_38 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_38 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_38 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_29 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_29 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_38 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_29 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_30 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_39 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_39 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_39 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_30 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_30 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_39 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_30 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module ComplexSub_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatSub_12 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 90:15]
    inst io_res_im_inst of FloatSub_13 @[Float.scala 45:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 46:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 47:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 91:15]

  module AddRawFN_31 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_40 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_40 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_40 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_31 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_31 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_40 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_31 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_9 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_9 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_9 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_41 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_41 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_41 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_9 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_9 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_41 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_9 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_32 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_42 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_42 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_42 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_32 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_32 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_42 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_32 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module MulFullRawFN_10 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_10 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_10 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_43 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_43 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_43 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_10 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_10 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_43 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_10 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_33 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_44 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_44 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_44 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_33 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_33 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_44 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_33 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_11 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_11 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_11 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_45 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_45 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_45 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_11 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_11 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_45 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_11 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_34 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_46 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_46 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_46 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_34 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_34 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_46 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_34 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_35 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_47 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_47 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_47 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_35 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_35 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_47 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_35 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexMul_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst k1_inst of FloatAdd_17 @[Float.scala 25:22]
    k1_inst.clock <= clock
    k1_inst.reset <= reset
    k1_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    k1_inst.io.op2 <= io.op1.im @[Float.scala 27:17]
    inst k1_inst_1 of FloatMul_9 @[Float.scala 64:22]
    k1_inst_1.clock <= clock
    k1_inst_1.reset <= reset
    k1_inst_1.io.op1 <= io.op2.re @[Float.scala 65:17]
    k1_inst_1.io.op2 <= k1_inst.io.res @[Float.scala 66:17]
    inst k2_inst of FloatSub_14 @[Float.scala 45:22]
    k2_inst.clock <= clock
    k2_inst.reset <= reset
    k2_inst.io.op1 <= io.op2.im @[Float.scala 46:17]
    k2_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    inst k2_inst_1 of FloatMul_10 @[Float.scala 64:22]
    k2_inst_1.clock <= clock
    k2_inst_1.reset <= reset
    k2_inst_1.io.op1 <= io.op1.re @[Float.scala 65:17]
    k2_inst_1.io.op2 <= k2_inst.io.res @[Float.scala 66:17]
    inst k3_inst of FloatAdd_18 @[Float.scala 25:22]
    k3_inst.clock <= clock
    k3_inst.reset <= reset
    k3_inst.io.op1 <= io.op2.re @[Float.scala 26:17]
    k3_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    inst k3_inst_1 of FloatMul_11 @[Float.scala 64:22]
    k3_inst_1.clock <= clock
    k3_inst_1.reset <= reset
    k3_inst_1.io.op1 <= io.op1.im @[Float.scala 65:17]
    k3_inst_1.io.op2 <= k3_inst.io.res @[Float.scala 66:17]
    inst io_res_re_inst of FloatSub_15 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= k3_inst_1.io.res @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 135:17]
    inst io_res_im_inst of FloatAdd_19 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= k2_inst_1.io.res @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 136:17]

  module ButterflyMul_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip wn : { re : UInt<17>, im : UInt<17>}[1]}

    wire _temp_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_1 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_1 <= _temp_T @[Modules.scala 224:50]
    node _temp_T_1 = bits(_temp_WIRE_1, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE.im <= _temp_T_1 @[Modules.scala 224:50]
    node _temp_T_2 = bits(_temp_WIRE_1, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE.re <= _temp_T_2 @[Modules.scala 224:50]
    wire _temp_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T_3 = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_3 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_3 <= _temp_T_3 @[Modules.scala 224:50]
    node _temp_T_4 = bits(_temp_WIRE_3, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE_2.im <= _temp_T_4 @[Modules.scala 224:50]
    node _temp_T_5 = bits(_temp_WIRE_3, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE_2.re <= _temp_T_5 @[Modules.scala 224:50]
    wire temp : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 224:21]
    temp[0] <= _temp_WIRE @[Modules.scala 224:21]
    temp[1] <= _temp_WIRE_2 @[Modules.scala 224:21]
    inst temp_0_inst of ComplexAdd_3 @[Modules.scala 81:22]
    temp_0_inst.clock <= clock
    temp_0_inst.reset <= reset
    temp_0_inst.io.op1.im <= io.in[0].im @[Modules.scala 82:17]
    temp_0_inst.io.op1.re <= io.in[0].re @[Modules.scala 82:17]
    temp_0_inst.io.op2.im <= io.in[1].im @[Modules.scala 83:17]
    temp_0_inst.io.op2.re <= io.in[1].re @[Modules.scala 83:17]
    temp[0] <= temp_0_inst.io.res @[Modules.scala 226:13]
    inst temp_1_inst of ComplexSub_3 @[Modules.scala 100:22]
    temp_1_inst.clock <= clock
    temp_1_inst.reset <= reset
    temp_1_inst.io.op1.im <= io.in[0].im @[Modules.scala 101:17]
    temp_1_inst.io.op1.re <= io.in[0].re @[Modules.scala 101:17]
    temp_1_inst.io.op2.im <= io.in[1].im @[Modules.scala 102:17]
    temp_1_inst.io.op2.re <= io.in[1].re @[Modules.scala 102:17]
    temp[1] <= temp_1_inst.io.res @[Modules.scala 227:13]
    io.out[0] <= temp[0] @[Modules.scala 266:15]
    inst io_out_1_inst of ComplexMul_3 @[Modules.scala 158:22]
    io_out_1_inst.clock <= clock
    io_out_1_inst.reset <= reset
    io_out_1_inst.io.op1.im <= temp[1].im @[Modules.scala 159:17]
    io_out_1_inst.io.op1.re <= temp[1].re @[Modules.scala 159:17]
    io_out_1_inst.io.op2.im <= io.wn[0].im @[Modules.scala 160:17]
    io_out_1_inst.io.op2.re <= io.wn[0].re @[Modules.scala 160:17]
    io.out[1] <= io_out_1_inst.io.res @[Modules.scala 267:15]

  module AddRawFN_36 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_48 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_48 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_48 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_36 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_36 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_48 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_36 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module AddRawFN_37 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_49 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_49 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_49 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_37 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_37 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_49 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_37 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexAdd_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatAdd_20 @[Float.scala 25:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 27:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 71:15]
    inst io_res_im_inst of FloatAdd_21 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 72:15]

  module AddRawFN_38 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_50 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_50 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_50 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_38 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_38 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_50 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_38 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_39 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_51 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_51 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_51 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_39 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_39 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_51 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_39 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module ComplexSub_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatSub_16 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 90:15]
    inst io_res_im_inst of FloatSub_17 @[Float.scala 45:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 46:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 47:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 91:15]

  module AddRawFN_40 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_52 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_52 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_52 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_40 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_40 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_52 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_40 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_12 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_12 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_12 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_53 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_53 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_53 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_12 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_12 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_53 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_12 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_41 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_54 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_54 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_54 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_41 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_41 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_54 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_41 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module MulFullRawFN_13 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_13 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_13 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_55 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_55 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_55 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_13 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_13 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_55 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_13 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_42 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_56 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_56 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_56 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_42 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_42 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_56 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_42 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module MulFullRawFN_14 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<22>}}

    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isZero) @[MulRecFN.scala 58:44]
    node _notSigNaN_invalidExc_T_1 = and(io.a.isZero, io.b.isInf) @[MulRecFN.scala 58:76]
    node notSigNaN_invalidExc = or(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[MulRecFN.scala 58:60]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[MulRecFN.scala 59:38]
    node notNaN_isZeroOut = or(io.a.isZero, io.b.isZero) @[MulRecFN.scala 60:40]
    node notNaN_signOut = xor(io.a.sign, io.b.sign) @[MulRecFN.scala 61:36]
    node _common_sExpOut_T = add(io.a.sExp, io.b.sExp) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_1 = tail(_common_sExpOut_T, 1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_2 = asSInt(_common_sExpOut_T_1) @[MulRecFN.scala 62:36]
    node _common_sExpOut_T_3 = sub(_common_sExpOut_T_2, asSInt(UInt<7>("h20"))) @[MulRecFN.scala 62:48]
    node _common_sExpOut_T_4 = tail(_common_sExpOut_T_3, 1) @[MulRecFN.scala 62:48]
    node common_sExpOut = asSInt(_common_sExpOut_T_4) @[MulRecFN.scala 62:48]
    node _common_sigOut_T = mul(io.a.sig, io.b.sig) @[MulRecFN.scala 63:35]
    node common_sigOut = bits(_common_sigOut_T, 21, 0) @[MulRecFN.scala 63:46]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[MulRecFN.scala 66:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[MulRecFN.scala 66:71]
    io.invalidExc <= _io_invalidExc_T_7 @[MulRecFN.scala 66:19]
    io.rawOut.isInf <= notNaN_isInfOut @[MulRecFN.scala 67:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[MulRecFN.scala 68:22]
    io.rawOut.sExp <= common_sExpOut @[MulRecFN.scala 69:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[MulRecFN.scala 70:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[MulRecFN.scala 70:21]
    io.rawOut.sign <= notNaN_signOut @[MulRecFN.scala 71:20]
    io.rawOut.sig <= common_sigOut @[MulRecFN.scala 72:19]

  module MulRawFN_14 :
    output io : { flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    inst mulFullRaw of MulFullRawFN_14 @[MulRecFN.scala 84:28]
    mulFullRaw.io.a.sig <= io.a.sig @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sExp <= io.a.sExp @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.sign <= io.a.sign @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isZero <= io.a.isZero @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isInf <= io.a.isInf @[MulRecFN.scala 86:21]
    mulFullRaw.io.a.isNaN <= io.a.isNaN @[MulRecFN.scala 86:21]
    mulFullRaw.io.b.sig <= io.b.sig @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sExp <= io.b.sExp @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.sign <= io.b.sign @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isZero <= io.b.isZero @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isInf <= io.b.isInf @[MulRecFN.scala 87:21]
    mulFullRaw.io.b.isNaN <= io.b.isNaN @[MulRecFN.scala 87:21]
    io.invalidExc <= mulFullRaw.io.invalidExc @[MulRecFN.scala 89:19]
    io.rawOut <= mulFullRaw.io.rawOut @[MulRecFN.scala 90:15]
    node _io_rawOut_sig_T = shr(mulFullRaw.io.rawOut.sig, 9) @[MulRecFN.scala 93:15]
    node _io_rawOut_sig_T_1 = bits(mulFullRaw.io.rawOut.sig, 8, 0) @[MulRecFN.scala 93:37]
    node _io_rawOut_sig_T_2 = orr(_io_rawOut_sig_T_1) @[MulRecFN.scala 93:55]
    node _io_rawOut_sig_T_3 = cat(_io_rawOut_sig_T, _io_rawOut_sig_T_2) @[Cat.scala 33:92]
    io.rawOut.sig <= _io_rawOut_sig_T_3 @[MulRecFN.scala 91:19]

  module RoundAnyRawFNToRecFN_57 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_57 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_57 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module MulRecFN_14 :
    output io : { flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst mulRawFN of MulRawFN_14 @[MulRecFN.scala 113:26]
    node mulRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_a_isZero_T = bits(mulRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_a_isZero = eq(_mulRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_a_isSpecial_T = bits(mulRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_a_isSpecial = eq(_mulRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_a_out_isNaN_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_a_out_isNaN_T_1 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_a_out.isNaN <= _mulRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_a_out_isInf_T = bits(mulRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_a_out_isInf_T_1 = eq(_mulRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_a_out_isInf_T_2 = and(mulRawFN_io_a_isSpecial, _mulRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_a_out.isInf <= _mulRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_a_out.isZero <= mulRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_a_out.sign <= _mulRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_a_out_sExp_T = cvt(mulRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_a_out.sExp <= _mulRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_a_out_sig_T = eq(mulRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_a_out_sig_T_2 = cat(mulRawFN_io_a_out_sig_hi, _mulRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_a_out.sig <= _mulRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.a.sig <= mulRawFN_io_a_out.sig @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sExp <= mulRawFN_io_a_out.sExp @[MulRecFN.scala 115:19]
    mulRawFN.io.a.sign <= mulRawFN_io_a_out.sign @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isZero <= mulRawFN_io_a_out.isZero @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isInf <= mulRawFN_io_a_out.isInf @[MulRecFN.scala 115:19]
    mulRawFN.io.a.isNaN <= mulRawFN_io_a_out.isNaN @[MulRecFN.scala 115:19]
    node mulRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _mulRawFN_io_b_isZero_T = bits(mulRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node mulRawFN_io_b_isZero = eq(_mulRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _mulRawFN_io_b_isSpecial_T = bits(mulRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node mulRawFN_io_b_isSpecial = eq(_mulRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire mulRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    mulRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _mulRawFN_io_b_out_isNaN_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _mulRawFN_io_b_out_isNaN_T_1 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    mulRawFN_io_b_out.isNaN <= _mulRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _mulRawFN_io_b_out_isInf_T = bits(mulRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _mulRawFN_io_b_out_isInf_T_1 = eq(_mulRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _mulRawFN_io_b_out_isInf_T_2 = and(mulRawFN_io_b_isSpecial, _mulRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    mulRawFN_io_b_out.isInf <= _mulRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    mulRawFN_io_b_out.isZero <= mulRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _mulRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    mulRawFN_io_b_out.sign <= _mulRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _mulRawFN_io_b_out_sExp_T = cvt(mulRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    mulRawFN_io_b_out.sExp <= _mulRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _mulRawFN_io_b_out_sig_T = eq(mulRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _mulRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node mulRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _mulRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _mulRawFN_io_b_out_sig_T_2 = cat(mulRawFN_io_b_out_sig_hi, _mulRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    mulRawFN_io_b_out.sig <= _mulRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    mulRawFN.io.b.sig <= mulRawFN_io_b_out.sig @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sExp <= mulRawFN_io_b_out.sExp @[MulRecFN.scala 116:19]
    mulRawFN.io.b.sign <= mulRawFN_io_b_out.sign @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isZero <= mulRawFN_io_b_out.isZero @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isInf <= mulRawFN_io_b_out.isInf @[MulRecFN.scala 116:19]
    mulRawFN.io.b.isNaN <= mulRawFN_io_b_out.isNaN @[MulRecFN.scala 116:19]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_57 @[MulRecFN.scala 121:15]
    roundRawFNToRecFN.io.invalidExc <= mulRawFN.io.invalidExc @[MulRecFN.scala 122:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[MulRecFN.scala 123:39]
    roundRawFNToRecFN.io.in.sig <= mulRawFN.io.rawOut.sig @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sExp <= mulRawFN.io.rawOut.sExp @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.sign <= mulRawFN.io.rawOut.sign @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isZero <= mulRawFN.io.rawOut.isZero @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isInf <= mulRawFN.io.rawOut.isInf @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.in.isNaN <= mulRawFN.io.rawOut.isNaN @[MulRecFN.scala 124:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[MulRecFN.scala 125:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[MulRecFN.scala 126:41]
    io.out <= roundRawFNToRecFN.io.out @[MulRecFN.scala 127:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[MulRecFN.scala 128:23]

  module FloatMul_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of MulRecFN_14 @[Float.scala 54:27]
    float_adder.io.a <= io.op1 @[Float.scala 55:20]
    float_adder.io.b <= io.op2 @[Float.scala 56:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 57:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 58:33]
    io.res <= float_adder.io.out @[Float.scala 59:10]

  module AddRawFN_43 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_58 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_58 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_58 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_43 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_43 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_58 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_43 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_44 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_59 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_59 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_59 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_44 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_44 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_59 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_44 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexMul_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst k1_inst of FloatAdd_22 @[Float.scala 25:22]
    k1_inst.clock <= clock
    k1_inst.reset <= reset
    k1_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    k1_inst.io.op2 <= io.op1.im @[Float.scala 27:17]
    inst k1_inst_1 of FloatMul_12 @[Float.scala 64:22]
    k1_inst_1.clock <= clock
    k1_inst_1.reset <= reset
    k1_inst_1.io.op1 <= io.op2.re @[Float.scala 65:17]
    k1_inst_1.io.op2 <= k1_inst.io.res @[Float.scala 66:17]
    inst k2_inst of FloatSub_18 @[Float.scala 45:22]
    k2_inst.clock <= clock
    k2_inst.reset <= reset
    k2_inst.io.op1 <= io.op2.im @[Float.scala 46:17]
    k2_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    inst k2_inst_1 of FloatMul_13 @[Float.scala 64:22]
    k2_inst_1.clock <= clock
    k2_inst_1.reset <= reset
    k2_inst_1.io.op1 <= io.op1.re @[Float.scala 65:17]
    k2_inst_1.io.op2 <= k2_inst.io.res @[Float.scala 66:17]
    inst k3_inst of FloatAdd_23 @[Float.scala 25:22]
    k3_inst.clock <= clock
    k3_inst.reset <= reset
    k3_inst.io.op1 <= io.op2.re @[Float.scala 26:17]
    k3_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    inst k3_inst_1 of FloatMul_14 @[Float.scala 64:22]
    k3_inst_1.clock <= clock
    k3_inst_1.reset <= reset
    k3_inst_1.io.op1 <= io.op1.im @[Float.scala 65:17]
    k3_inst_1.io.op2 <= k3_inst.io.res @[Float.scala 66:17]
    inst io_res_re_inst of FloatSub_19 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= k3_inst_1.io.res @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 135:17]
    inst io_res_im_inst of FloatAdd_24 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= k1_inst_1.io.res @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= k2_inst_1.io.res @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 136:17]

  module ButterflyMul_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip wn : { re : UInt<17>, im : UInt<17>}[1]}

    wire _temp_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_1 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_1 <= _temp_T @[Modules.scala 224:50]
    node _temp_T_1 = bits(_temp_WIRE_1, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE.im <= _temp_T_1 @[Modules.scala 224:50]
    node _temp_T_2 = bits(_temp_WIRE_1, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE.re <= _temp_T_2 @[Modules.scala 224:50]
    wire _temp_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 224:50]
    node _temp_T_3 = asUInt(asSInt(UInt<1>("h0"))) @[Modules.scala 224:50]
    wire _temp_WIRE_3 : UInt<34> @[Modules.scala 224:50]
    _temp_WIRE_3 <= _temp_T_3 @[Modules.scala 224:50]
    node _temp_T_4 = bits(_temp_WIRE_3, 16, 0) @[Modules.scala 224:50]
    _temp_WIRE_2.im <= _temp_T_4 @[Modules.scala 224:50]
    node _temp_T_5 = bits(_temp_WIRE_3, 33, 17) @[Modules.scala 224:50]
    _temp_WIRE_2.re <= _temp_T_5 @[Modules.scala 224:50]
    wire temp : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 224:21]
    temp[0] <= _temp_WIRE @[Modules.scala 224:21]
    temp[1] <= _temp_WIRE_2 @[Modules.scala 224:21]
    inst temp_0_inst of ComplexAdd_4 @[Modules.scala 81:22]
    temp_0_inst.clock <= clock
    temp_0_inst.reset <= reset
    temp_0_inst.io.op1.im <= io.in[0].im @[Modules.scala 82:17]
    temp_0_inst.io.op1.re <= io.in[0].re @[Modules.scala 82:17]
    temp_0_inst.io.op2.im <= io.in[1].im @[Modules.scala 83:17]
    temp_0_inst.io.op2.re <= io.in[1].re @[Modules.scala 83:17]
    temp[0] <= temp_0_inst.io.res @[Modules.scala 226:13]
    inst temp_1_inst of ComplexSub_4 @[Modules.scala 100:22]
    temp_1_inst.clock <= clock
    temp_1_inst.reset <= reset
    temp_1_inst.io.op1.im <= io.in[0].im @[Modules.scala 101:17]
    temp_1_inst.io.op1.re <= io.in[0].re @[Modules.scala 101:17]
    temp_1_inst.io.op2.im <= io.in[1].im @[Modules.scala 102:17]
    temp_1_inst.io.op2.re <= io.in[1].re @[Modules.scala 102:17]
    temp[1] <= temp_1_inst.io.res @[Modules.scala 227:13]
    io.out[0] <= temp[0] @[Modules.scala 266:15]
    inst io_out_1_inst of ComplexMul_4 @[Modules.scala 158:22]
    io_out_1_inst.clock <= clock
    io_out_1_inst.reset <= reset
    io_out_1_inst.io.op1.im <= temp[1].im @[Modules.scala 159:17]
    io_out_1_inst.io.op1.re <= temp[1].re @[Modules.scala 159:17]
    io_out_1_inst.io.op2.im <= io.wn[0].im @[Modules.scala 160:17]
    io_out_1_inst.io.op2.re <= io.wn[0].re @[Modules.scala 160:17]
    io.out[1] <= io_out_1_inst.io.res @[Modules.scala 267:15]

  module AddRawFN_45 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_60 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_60 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_60 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_45 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_45 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_60 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_45 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module AddRawFN_46 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_61 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_61 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_61 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_46 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_46 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_61 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatAdd_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_46 @[Float.scala 14:27]
    float_adder.io.subOp <= UInt<1>("h0") @[Float.scala 15:24]
    float_adder.io.a <= io.op1 @[Float.scala 16:20]
    float_adder.io.b <= io.op2 @[Float.scala 17:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 18:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 19:33]
    io.res <= float_adder.io.out @[Float.scala 20:10]

  module ComplexAdd_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatAdd_25 @[Float.scala 25:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 26:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 27:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 71:15]
    inst io_res_im_inst of FloatAdd_26 @[Float.scala 25:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 26:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 27:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 72:15]

  module AddRawFN_47 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_62 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_62 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_62 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_47 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_47 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_62 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_47 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module AddRawFN_48 :
    output io : { flip subOp : UInt<1>, flip a : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip b : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>}, flip roundingMode : UInt<3>, invalidExc : UInt<1>, rawOut : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}}

    node effSignB = xor(io.b.sign, io.subOp) @[AddRecFN.scala 60:30]
    node eqSigns = eq(io.a.sign, effSignB) @[AddRecFN.scala 61:29]
    node notEqSigns_signZero = eq(io.roundingMode, UInt<3>("h2")) @[AddRecFN.scala 62:47]
    node _sDiffExps_T = sub(io.a.sExp, io.b.sExp) @[AddRecFN.scala 63:31]
    node _sDiffExps_T_1 = tail(_sDiffExps_T, 1) @[AddRecFN.scala 63:31]
    node sDiffExps = asSInt(_sDiffExps_T_1) @[AddRecFN.scala 63:31]
    node _modNatAlignDist_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 64:41]
    node _modNatAlignDist_T_1 = sub(io.b.sExp, io.a.sExp) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_2 = tail(_modNatAlignDist_T_1, 1) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_3 = asSInt(_modNatAlignDist_T_2) @[AddRecFN.scala 64:58]
    node _modNatAlignDist_T_4 = mux(_modNatAlignDist_T, _modNatAlignDist_T_3, sDiffExps) @[AddRecFN.scala 64:30]
    node modNatAlignDist = bits(_modNatAlignDist_T_4, 3, 0) @[AddRecFN.scala 64:81]
    node _isMaxAlign_T = shr(sDiffExps, 4) @[AddRecFN.scala 66:19]
    node _isMaxAlign_T_1 = neq(_isMaxAlign_T, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 66:37]
    node _isMaxAlign_T_2 = shr(sDiffExps, 4) @[AddRecFN.scala 67:24]
    node _isMaxAlign_T_3 = neq(_isMaxAlign_T_2, asSInt(UInt<1>("h1"))) @[AddRecFN.scala 67:42]
    node _isMaxAlign_T_4 = bits(sDiffExps, 3, 0) @[AddRecFN.scala 67:63]
    node _isMaxAlign_T_5 = eq(_isMaxAlign_T_4, UInt<1>("h0")) @[AddRecFN.scala 67:87]
    node _isMaxAlign_T_6 = or(_isMaxAlign_T_3, _isMaxAlign_T_5) @[AddRecFN.scala 67:51]
    node isMaxAlign = and(_isMaxAlign_T_1, _isMaxAlign_T_6) @[AddRecFN.scala 66:45]
    node alignDist = mux(isMaxAlign, UInt<4>("hf"), modNatAlignDist) @[AddRecFN.scala 68:24]
    node _closeSubMags_T = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 69:24]
    node _closeSubMags_T_1 = eq(isMaxAlign, UInt<1>("h0")) @[AddRecFN.scala 69:36]
    node _closeSubMags_T_2 = and(_closeSubMags_T, _closeSubMags_T_1) @[AddRecFN.scala 69:33]
    node _closeSubMags_T_3 = leq(modNatAlignDist, UInt<1>("h1")) @[AddRecFN.scala 69:68]
    node closeSubMags = and(_closeSubMags_T_2, _closeSubMags_T_3) @[AddRecFN.scala 69:48]
    node _close_alignedSigA_T = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 73:18]
    node _close_alignedSigA_T_1 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 73:45]
    node _close_alignedSigA_T_2 = and(_close_alignedSigA_T, _close_alignedSigA_T_1) @[AddRecFN.scala 73:32]
    node _close_alignedSigA_T_3 = shl(io.a.sig, 2) @[AddRecFN.scala 73:58]
    node _close_alignedSigA_T_4 = mux(_close_alignedSigA_T_2, _close_alignedSigA_T_3, UInt<1>("h0")) @[AddRecFN.scala 73:12]
    node _close_alignedSigA_T_5 = leq(asSInt(UInt<1>("h0")), sDiffExps) @[AddRecFN.scala 74:18]
    node _close_alignedSigA_T_6 = bits(sDiffExps, 0, 0) @[AddRecFN.scala 74:45]
    node _close_alignedSigA_T_7 = eq(_close_alignedSigA_T_6, UInt<1>("h0")) @[AddRecFN.scala 74:35]
    node _close_alignedSigA_T_8 = and(_close_alignedSigA_T_5, _close_alignedSigA_T_7) @[AddRecFN.scala 74:32]
    node _close_alignedSigA_T_9 = shl(io.a.sig, 1) @[AddRecFN.scala 74:58]
    node _close_alignedSigA_T_10 = mux(_close_alignedSigA_T_8, _close_alignedSigA_T_9, UInt<1>("h0")) @[AddRecFN.scala 74:12]
    node _close_alignedSigA_T_11 = or(_close_alignedSigA_T_4, _close_alignedSigA_T_10) @[AddRecFN.scala 73:68]
    node _close_alignedSigA_T_12 = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 75:24]
    node _close_alignedSigA_T_13 = mux(_close_alignedSigA_T_12, io.a.sig, UInt<1>("h0")) @[AddRecFN.scala 75:12]
    node close_alignedSigA = or(_close_alignedSigA_T_11, _close_alignedSigA_T_13) @[AddRecFN.scala 74:68]
    node _close_sSigSum_T = asSInt(close_alignedSigA) @[AddRecFN.scala 76:43]
    node _close_sSigSum_T_1 = shl(io.b.sig, 1) @[AddRecFN.scala 76:61]
    node _close_sSigSum_T_2 = asSInt(_close_sSigSum_T_1) @[AddRecFN.scala 76:66]
    node _close_sSigSum_T_3 = sub(_close_sSigSum_T, _close_sSigSum_T_2) @[AddRecFN.scala 76:50]
    node _close_sSigSum_T_4 = tail(_close_sSigSum_T_3, 1) @[AddRecFN.scala 76:50]
    node close_sSigSum = asSInt(_close_sSigSum_T_4) @[AddRecFN.scala 76:50]
    node _close_sigSum_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 77:42]
    node _close_sigSum_T_1 = sub(asSInt(UInt<1>("h0")), close_sSigSum) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_2 = tail(_close_sigSum_T_1, 1) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_3 = asSInt(_close_sigSum_T_2) @[AddRecFN.scala 77:49]
    node _close_sigSum_T_4 = mux(_close_sigSum_T, _close_sigSum_T_3, close_sSigSum) @[AddRecFN.scala 77:27]
    node close_sigSum = bits(_close_sigSum_T_4, 12, 0) @[AddRecFN.scala 77:79]
    node close_adjustedSigSum = shl(close_sigSum, 1) @[AddRecFN.scala 78:44]
    wire close_reduced2SigSum_reducedVec : UInt<1>[7] @[primitives.scala 102:30]
    close_reduced2SigSum_reducedVec is invalid @[primitives.scala 102:30]
    node _close_reduced2SigSum_reducedVec_0_T = bits(close_adjustedSigSum, 1, 0) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_0_T_1 = orr(_close_reduced2SigSum_reducedVec_0_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[0] <= _close_reduced2SigSum_reducedVec_0_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_1_T = bits(close_adjustedSigSum, 3, 2) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_1_T_1 = orr(_close_reduced2SigSum_reducedVec_1_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[1] <= _close_reduced2SigSum_reducedVec_1_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_2_T = bits(close_adjustedSigSum, 5, 4) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_2_T_1 = orr(_close_reduced2SigSum_reducedVec_2_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[2] <= _close_reduced2SigSum_reducedVec_2_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_3_T = bits(close_adjustedSigSum, 7, 6) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_3_T_1 = orr(_close_reduced2SigSum_reducedVec_3_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[3] <= _close_reduced2SigSum_reducedVec_3_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_4_T = bits(close_adjustedSigSum, 9, 8) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_4_T_1 = orr(_close_reduced2SigSum_reducedVec_4_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[4] <= _close_reduced2SigSum_reducedVec_4_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_5_T = bits(close_adjustedSigSum, 11, 10) @[primitives.scala 104:33]
    node _close_reduced2SigSum_reducedVec_5_T_1 = orr(_close_reduced2SigSum_reducedVec_5_T) @[primitives.scala 104:54]
    close_reduced2SigSum_reducedVec[5] <= _close_reduced2SigSum_reducedVec_5_T_1 @[primitives.scala 104:28]
    node _close_reduced2SigSum_reducedVec_6_T = bits(close_adjustedSigSum, 13, 12) @[primitives.scala 107:15]
    node _close_reduced2SigSum_reducedVec_6_T_1 = orr(_close_reduced2SigSum_reducedVec_6_T) @[primitives.scala 107:57]
    close_reduced2SigSum_reducedVec[6] <= _close_reduced2SigSum_reducedVec_6_T_1 @[primitives.scala 106:38]
    node close_reduced2SigSum_lo_hi = cat(close_reduced2SigSum_reducedVec[2], close_reduced2SigSum_reducedVec[1]) @[primitives.scala 108:20]
    node close_reduced2SigSum_lo = cat(close_reduced2SigSum_lo_hi, close_reduced2SigSum_reducedVec[0]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_lo = cat(close_reduced2SigSum_reducedVec[4], close_reduced2SigSum_reducedVec[3]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi_hi = cat(close_reduced2SigSum_reducedVec[6], close_reduced2SigSum_reducedVec[5]) @[primitives.scala 108:20]
    node close_reduced2SigSum_hi = cat(close_reduced2SigSum_hi_hi, close_reduced2SigSum_hi_lo) @[primitives.scala 108:20]
    node close_reduced2SigSum = cat(close_reduced2SigSum_hi, close_reduced2SigSum_lo) @[primitives.scala 108:20]
    node _close_normDistReduced2_T = bits(close_reduced2SigSum, 0, 0) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_1 = bits(close_reduced2SigSum, 1, 1) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_2 = bits(close_reduced2SigSum, 2, 2) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_3 = bits(close_reduced2SigSum, 3, 3) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_4 = bits(close_reduced2SigSum, 4, 4) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_5 = bits(close_reduced2SigSum, 5, 5) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_6 = bits(close_reduced2SigSum, 6, 6) @[primitives.scala 92:52]
    node _close_normDistReduced2_T_7 = mux(_close_normDistReduced2_T_1, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_8 = mux(_close_normDistReduced2_T_2, UInt<3>("h4"), _close_normDistReduced2_T_7) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_9 = mux(_close_normDistReduced2_T_3, UInt<2>("h3"), _close_normDistReduced2_T_8) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_10 = mux(_close_normDistReduced2_T_4, UInt<2>("h2"), _close_normDistReduced2_T_9) @[Mux.scala 47:70]
    node _close_normDistReduced2_T_11 = mux(_close_normDistReduced2_T_5, UInt<1>("h1"), _close_normDistReduced2_T_10) @[Mux.scala 47:70]
    node close_normDistReduced2 = mux(_close_normDistReduced2_T_6, UInt<1>("h0"), _close_normDistReduced2_T_11) @[Mux.scala 47:70]
    node _close_nearNormDist_T = shl(close_normDistReduced2, 1) @[AddRecFN.scala 81:53]
    node close_nearNormDist = bits(_close_nearNormDist_T, 3, 0) @[AddRecFN.scala 81:57]
    node _close_sigOut_T = dshl(close_sigSum, close_nearNormDist) @[AddRecFN.scala 82:38]
    node _close_sigOut_T_1 = shl(_close_sigOut_T, 1) @[AddRecFN.scala 82:59]
    node close_sigOut = bits(_close_sigOut_T_1, 13, 0) @[AddRecFN.scala 82:63]
    node _close_totalCancellation_T = bits(close_sigOut, 13, 12) @[AddRecFN.scala 83:49]
    node _close_totalCancellation_T_1 = orr(_close_totalCancellation_T) @[AddRecFN.scala 83:82]
    node close_totalCancellation = eq(_close_totalCancellation_T_1, UInt<1>("h0")) @[AddRecFN.scala 83:35]
    node _close_notTotalCancellation_signOut_T = lt(close_sSigSum, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 84:73]
    node close_notTotalCancellation_signOut = xor(io.a.sign, _close_notTotalCancellation_signOut_T) @[AddRecFN.scala 84:56]
    node _far_signOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 87:37]
    node far_signOut = mux(_far_signOut_T, effSignB, io.a.sign) @[AddRecFN.scala 87:26]
    node _far_sigLarger_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 88:40]
    node _far_sigLarger_T_1 = mux(_far_sigLarger_T, io.b.sig, io.a.sig) @[AddRecFN.scala 88:29]
    node far_sigLarger = bits(_far_sigLarger_T_1, 10, 0) @[AddRecFN.scala 88:66]
    node _far_sigSmaller_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 89:40]
    node _far_sigSmaller_T_1 = mux(_far_sigSmaller_T, io.a.sig, io.b.sig) @[AddRecFN.scala 89:29]
    node far_sigSmaller = bits(_far_sigSmaller_T_1, 10, 0) @[AddRecFN.scala 89:66]
    node _far_mainAlignedSigSmaller_T = shl(far_sigSmaller, 5) @[AddRecFN.scala 90:52]
    node far_mainAlignedSigSmaller = dshr(_far_mainAlignedSigSmaller_T, alignDist) @[AddRecFN.scala 90:56]
    node _far_reduced4SigSmaller_T = shl(far_sigSmaller, 2) @[AddRecFN.scala 91:60]
    wire far_reduced4SigSmaller_reducedVec : UInt<1>[4] @[primitives.scala 119:30]
    far_reduced4SigSmaller_reducedVec is invalid @[primitives.scala 119:30]
    node _far_reduced4SigSmaller_reducedVec_0_T = bits(_far_reduced4SigSmaller_T, 3, 0) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_0_T_1 = orr(_far_reduced4SigSmaller_reducedVec_0_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[0] <= _far_reduced4SigSmaller_reducedVec_0_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_1_T = bits(_far_reduced4SigSmaller_T, 7, 4) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_1_T_1 = orr(_far_reduced4SigSmaller_reducedVec_1_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[1] <= _far_reduced4SigSmaller_reducedVec_1_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_2_T = bits(_far_reduced4SigSmaller_T, 11, 8) @[primitives.scala 121:33]
    node _far_reduced4SigSmaller_reducedVec_2_T_1 = orr(_far_reduced4SigSmaller_reducedVec_2_T) @[primitives.scala 121:54]
    far_reduced4SigSmaller_reducedVec[2] <= _far_reduced4SigSmaller_reducedVec_2_T_1 @[primitives.scala 121:28]
    node _far_reduced4SigSmaller_reducedVec_3_T = bits(_far_reduced4SigSmaller_T, 12, 12) @[primitives.scala 124:15]
    node _far_reduced4SigSmaller_reducedVec_3_T_1 = orr(_far_reduced4SigSmaller_reducedVec_3_T) @[primitives.scala 124:57]
    far_reduced4SigSmaller_reducedVec[3] <= _far_reduced4SigSmaller_reducedVec_3_T_1 @[primitives.scala 123:38]
    node far_reduced4SigSmaller_lo = cat(far_reduced4SigSmaller_reducedVec[1], far_reduced4SigSmaller_reducedVec[0]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller_hi = cat(far_reduced4SigSmaller_reducedVec[3], far_reduced4SigSmaller_reducedVec[2]) @[primitives.scala 125:20]
    node far_reduced4SigSmaller = cat(far_reduced4SigSmaller_hi, far_reduced4SigSmaller_lo) @[primitives.scala 125:20]
    node _far_roundExtraMask_T = bits(alignDist, 3, 2) @[AddRecFN.scala 92:47]
    node far_roundExtraMask_shift = dshr(asSInt(UInt<5>("h10")), _far_roundExtraMask_T) @[primitives.scala 77:58]
    node _far_roundExtraMask_T_1 = bits(far_roundExtraMask_shift, 3, 0) @[primitives.scala 79:22]
    node _far_roundExtraMask_T_2 = bits(_far_roundExtraMask_T_1, 1, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_3 = bits(_far_roundExtraMask_T_2, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_4 = bits(_far_roundExtraMask_T_2, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_5 = cat(_far_roundExtraMask_T_3, _far_roundExtraMask_T_4) @[Cat.scala 33:92]
    node _far_roundExtraMask_T_6 = bits(_far_roundExtraMask_T_1, 3, 2) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_7 = bits(_far_roundExtraMask_T_6, 0, 0) @[Bitwise.scala 114:18]
    node _far_roundExtraMask_T_8 = bits(_far_roundExtraMask_T_6, 1, 1) @[Bitwise.scala 114:47]
    node _far_roundExtraMask_T_9 = cat(_far_roundExtraMask_T_7, _far_roundExtraMask_T_8) @[Cat.scala 33:92]
    node far_roundExtraMask = cat(_far_roundExtraMask_T_5, _far_roundExtraMask_T_9) @[Cat.scala 33:92]
    node _far_alignedSigSmaller_T = shr(far_mainAlignedSigSmaller, 3) @[AddRecFN.scala 94:38]
    node _far_alignedSigSmaller_T_1 = bits(far_mainAlignedSigSmaller, 2, 0) @[AddRecFN.scala 95:38]
    node _far_alignedSigSmaller_T_2 = orr(_far_alignedSigSmaller_T_1) @[AddRecFN.scala 95:45]
    node _far_alignedSigSmaller_T_3 = and(far_reduced4SigSmaller, far_roundExtraMask) @[AddRecFN.scala 95:76]
    node _far_alignedSigSmaller_T_4 = orr(_far_alignedSigSmaller_T_3) @[AddRecFN.scala 95:98]
    node _far_alignedSigSmaller_T_5 = or(_far_alignedSigSmaller_T_2, _far_alignedSigSmaller_T_4) @[AddRecFN.scala 95:49]
    node far_alignedSigSmaller = cat(_far_alignedSigSmaller_T, _far_alignedSigSmaller_T_5) @[Cat.scala 33:92]
    node far_subMags = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 96:23]
    node _far_negAlignedSigSmaller_T = not(far_alignedSigSmaller) @[AddRecFN.scala 97:62]
    node _far_negAlignedSigSmaller_T_1 = cat(UInt<1>("h1"), _far_negAlignedSigSmaller_T) @[Cat.scala 33:92]
    node far_negAlignedSigSmaller = mux(far_subMags, _far_negAlignedSigSmaller_T_1, far_alignedSigSmaller) @[AddRecFN.scala 97:39]
    node _far_sigSum_T = shl(far_sigLarger, 3) @[AddRecFN.scala 98:36]
    node _far_sigSum_T_1 = add(_far_sigSum_T, far_negAlignedSigSmaller) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_2 = tail(_far_sigSum_T_1, 1) @[AddRecFN.scala 98:41]
    node _far_sigSum_T_3 = add(_far_sigSum_T_2, far_subMags) @[AddRecFN.scala 98:68]
    node far_sigSum = tail(_far_sigSum_T_3, 1) @[AddRecFN.scala 98:68]
    node _far_sigOut_T = shr(far_sigSum, 1) @[AddRecFN.scala 99:62]
    node _far_sigOut_T_1 = bits(far_sigSum, 0, 0) @[AddRecFN.scala 99:79]
    node _far_sigOut_T_2 = or(_far_sigOut_T, _far_sigOut_T_1) @[AddRecFN.scala 99:67]
    node _far_sigOut_T_3 = mux(far_subMags, far_sigSum, _far_sigOut_T_2) @[AddRecFN.scala 99:25]
    node far_sigOut = bits(_far_sigOut_T_3, 13, 0) @[AddRecFN.scala 99:83]
    node _notSigNaN_invalidExc_T = and(io.a.isInf, io.b.isInf) @[AddRecFN.scala 102:43]
    node _notSigNaN_invalidExc_T_1 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 102:60]
    node notSigNaN_invalidExc = and(_notSigNaN_invalidExc_T, _notSigNaN_invalidExc_T_1) @[AddRecFN.scala 102:57]
    node notNaN_isInfOut = or(io.a.isInf, io.b.isInf) @[AddRecFN.scala 103:38]
    node addZeros = and(io.a.isZero, io.b.isZero) @[AddRecFN.scala 104:32]
    node notNaN_specialCase = or(notNaN_isInfOut, addZeros) @[AddRecFN.scala 105:46]
    node _notNaN_isZeroOut_T = eq(notNaN_isInfOut, UInt<1>("h0")) @[AddRecFN.scala 106:41]
    node _notNaN_isZeroOut_T_1 = and(_notNaN_isZeroOut_T, closeSubMags) @[AddRecFN.scala 106:58]
    node _notNaN_isZeroOut_T_2 = and(_notNaN_isZeroOut_T_1, close_totalCancellation) @[AddRecFN.scala 106:74]
    node notNaN_isZeroOut = or(addZeros, _notNaN_isZeroOut_T_2) @[AddRecFN.scala 106:37]
    node _notNaN_signOut_T = and(eqSigns, io.a.sign) @[AddRecFN.scala 108:39]
    node _notNaN_signOut_T_1 = and(io.a.isInf, io.a.sign) @[AddRecFN.scala 109:39]
    node _notNaN_signOut_T_2 = or(_notNaN_signOut_T, _notNaN_signOut_T_1) @[AddRecFN.scala 108:63]
    node _notNaN_signOut_T_3 = and(io.b.isInf, effSignB) @[AddRecFN.scala 110:39]
    node _notNaN_signOut_T_4 = or(_notNaN_signOut_T_2, _notNaN_signOut_T_3) @[AddRecFN.scala 109:63]
    node _notNaN_signOut_T_5 = eq(eqSigns, UInt<1>("h0")) @[AddRecFN.scala 111:30]
    node _notNaN_signOut_T_6 = and(notNaN_isZeroOut, _notNaN_signOut_T_5) @[AddRecFN.scala 111:27]
    node _notNaN_signOut_T_7 = and(_notNaN_signOut_T_6, notEqSigns_signZero) @[AddRecFN.scala 111:39]
    node _notNaN_signOut_T_8 = or(_notNaN_signOut_T_4, _notNaN_signOut_T_7) @[AddRecFN.scala 110:63]
    node _notNaN_signOut_T_9 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 112:10]
    node _notNaN_signOut_T_10 = and(_notNaN_signOut_T_9, closeSubMags) @[AddRecFN.scala 112:30]
    node _notNaN_signOut_T_11 = eq(close_totalCancellation, UInt<1>("h0")) @[AddRecFN.scala 112:49]
    node _notNaN_signOut_T_12 = and(_notNaN_signOut_T_10, _notNaN_signOut_T_11) @[AddRecFN.scala 112:46]
    node _notNaN_signOut_T_13 = and(_notNaN_signOut_T_12, close_notTotalCancellation_signOut) @[AddRecFN.scala 113:38]
    node _notNaN_signOut_T_14 = or(_notNaN_signOut_T_8, _notNaN_signOut_T_13) @[AddRecFN.scala 111:63]
    node _notNaN_signOut_T_15 = eq(notNaN_specialCase, UInt<1>("h0")) @[AddRecFN.scala 114:10]
    node _notNaN_signOut_T_16 = eq(closeSubMags, UInt<1>("h0")) @[AddRecFN.scala 114:33]
    node _notNaN_signOut_T_17 = and(_notNaN_signOut_T_15, _notNaN_signOut_T_16) @[AddRecFN.scala 114:30]
    node _notNaN_signOut_T_18 = and(_notNaN_signOut_T_17, far_signOut) @[AddRecFN.scala 114:47]
    node notNaN_signOut = or(_notNaN_signOut_T_14, _notNaN_signOut_T_18) @[AddRecFN.scala 113:77]
    node _common_sExpOut_T = lt(sDiffExps, asSInt(UInt<1>("h0"))) @[AddRecFN.scala 116:41]
    node _common_sExpOut_T_1 = or(closeSubMags, _common_sExpOut_T) @[AddRecFN.scala 116:27]
    node _common_sExpOut_T_2 = mux(_common_sExpOut_T_1, io.b.sExp, io.a.sExp) @[AddRecFN.scala 116:13]
    node _common_sExpOut_T_3 = mux(closeSubMags, close_nearNormDist, far_subMags) @[AddRecFN.scala 117:18]
    node _common_sExpOut_T_4 = cvt(_common_sExpOut_T_3) @[AddRecFN.scala 117:66]
    node _common_sExpOut_T_5 = sub(_common_sExpOut_T_2, _common_sExpOut_T_4) @[AddRecFN.scala 117:13]
    node _common_sExpOut_T_6 = tail(_common_sExpOut_T_5, 1) @[AddRecFN.scala 117:13]
    node common_sExpOut = asSInt(_common_sExpOut_T_6) @[AddRecFN.scala 117:13]
    node common_sigOut = mux(closeSubMags, close_sigOut, far_sigOut) @[AddRecFN.scala 118:28]
    node _io_invalidExc_T = bits(io.a.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_1 = eq(_io_invalidExc_T, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_2 = and(io.a.isNaN, _io_invalidExc_T_1) @[common.scala 82:46]
    node _io_invalidExc_T_3 = bits(io.b.sig, 9, 9) @[common.scala 82:56]
    node _io_invalidExc_T_4 = eq(_io_invalidExc_T_3, UInt<1>("h0")) @[common.scala 82:49]
    node _io_invalidExc_T_5 = and(io.b.isNaN, _io_invalidExc_T_4) @[common.scala 82:46]
    node _io_invalidExc_T_6 = or(_io_invalidExc_T_2, _io_invalidExc_T_5) @[AddRecFN.scala 121:45]
    node _io_invalidExc_T_7 = or(_io_invalidExc_T_6, notSigNaN_invalidExc) @[AddRecFN.scala 121:71]
    io.invalidExc <= _io_invalidExc_T_7 @[AddRecFN.scala 121:19]
    io.rawOut.isInf <= notNaN_isInfOut @[AddRecFN.scala 122:21]
    io.rawOut.isZero <= notNaN_isZeroOut @[AddRecFN.scala 123:22]
    io.rawOut.sExp <= common_sExpOut @[AddRecFN.scala 124:20]
    node _io_rawOut_isNaN_T = or(io.a.isNaN, io.b.isNaN) @[AddRecFN.scala 125:35]
    io.rawOut.isNaN <= _io_rawOut_isNaN_T @[AddRecFN.scala 125:21]
    io.rawOut.sign <= notNaN_signOut @[AddRecFN.scala 126:20]
    io.rawOut.sig <= common_sigOut @[AddRecFN.scala 127:19]

  module RoundAnyRawFNToRecFN_63 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    node roundingMode_near_even = eq(io.roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    node roundingMode_minMag = eq(io.roundingMode, UInt<3>("h1")) @[RoundAnyRawFNToRecFN.scala 89:53]
    node roundingMode_min = eq(io.roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io.roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io.roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io.roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io.in.sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = eq(io.in.sign, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node adjustedSig = shl(io.in.sig, 0) @[RoundAnyRawFNToRecFN.scala 112:22]
    node doShiftSigDown1 = bits(adjustedSig, 13, 13) @[RoundAnyRawFNToRecFN.scala 118:61]
    wire common_expOut : UInt<6> @[RoundAnyRawFNToRecFN.scala 120:31]
    common_expOut is invalid @[RoundAnyRawFNToRecFN.scala 120:31]
    wire common_fractOut : UInt<10> @[RoundAnyRawFNToRecFN.scala 121:31]
    common_fractOut is invalid @[RoundAnyRawFNToRecFN.scala 121:31]
    wire common_overflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 122:37]
    common_overflow is invalid @[RoundAnyRawFNToRecFN.scala 122:37]
    wire common_totalUnderflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 123:37]
    common_totalUnderflow is invalid @[RoundAnyRawFNToRecFN.scala 123:37]
    wire common_underflow : UInt<1> @[RoundAnyRawFNToRecFN.scala 124:37]
    common_underflow is invalid @[RoundAnyRawFNToRecFN.scala 124:37]
    wire common_inexact : UInt<1> @[RoundAnyRawFNToRecFN.scala 125:37]
    common_inexact is invalid @[RoundAnyRawFNToRecFN.scala 125:37]
    node _roundMask_T = bits(io.in.sExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_shift = dshr(asSInt(UInt<65>("h10000000000000000")), _roundMask_T_1) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 18, 7) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 7, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_4 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _roundMask_T_5 = xor(UInt<8>("hff"), _roundMask_T_4) @[Bitwise.scala 107:21]
    node _roundMask_T_6 = shr(_roundMask_T_3, 4) @[Bitwise.scala 108:21]
    node _roundMask_T_7 = and(_roundMask_T_6, _roundMask_T_5) @[Bitwise.scala 108:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 3, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 4) @[Bitwise.scala 108:70]
    node _roundMask_T_10 = not(_roundMask_T_5) @[Bitwise.scala 108:82]
    node _roundMask_T_11 = and(_roundMask_T_9, _roundMask_T_10) @[Bitwise.scala 108:80]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 108:39]
    node _roundMask_T_13 = bits(_roundMask_T_5, 5, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_14 = shl(_roundMask_T_13, 2) @[Bitwise.scala 107:52]
    node _roundMask_T_15 = xor(_roundMask_T_5, _roundMask_T_14) @[Bitwise.scala 107:21]
    node _roundMask_T_16 = shr(_roundMask_T_12, 2) @[Bitwise.scala 108:21]
    node _roundMask_T_17 = and(_roundMask_T_16, _roundMask_T_15) @[Bitwise.scala 108:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 5, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 2) @[Bitwise.scala 108:70]
    node _roundMask_T_20 = not(_roundMask_T_15) @[Bitwise.scala 108:82]
    node _roundMask_T_21 = and(_roundMask_T_19, _roundMask_T_20) @[Bitwise.scala 108:80]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 108:39]
    node _roundMask_T_23 = bits(_roundMask_T_15, 6, 0) @[Bitwise.scala 107:28]
    node _roundMask_T_24 = shl(_roundMask_T_23, 1) @[Bitwise.scala 107:52]
    node _roundMask_T_25 = xor(_roundMask_T_15, _roundMask_T_24) @[Bitwise.scala 107:21]
    node _roundMask_T_26 = shr(_roundMask_T_22, 1) @[Bitwise.scala 108:21]
    node _roundMask_T_27 = and(_roundMask_T_26, _roundMask_T_25) @[Bitwise.scala 108:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 6, 0) @[Bitwise.scala 108:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 1) @[Bitwise.scala 108:70]
    node _roundMask_T_30 = not(_roundMask_T_25) @[Bitwise.scala 108:82]
    node _roundMask_T_31 = and(_roundMask_T_29, _roundMask_T_30) @[Bitwise.scala 108:80]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 108:39]
    node _roundMask_T_33 = bits(_roundMask_T_2, 11, 8) @[Bitwise.scala 114:47]
    node _roundMask_T_34 = bits(_roundMask_T_33, 1, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_35 = bits(_roundMask_T_34, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_36 = bits(_roundMask_T_34, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_37 = cat(_roundMask_T_35, _roundMask_T_36) @[Cat.scala 33:92]
    node _roundMask_T_38 = bits(_roundMask_T_33, 3, 2) @[Bitwise.scala 114:47]
    node _roundMask_T_39 = bits(_roundMask_T_38, 0, 0) @[Bitwise.scala 114:18]
    node _roundMask_T_40 = bits(_roundMask_T_38, 1, 1) @[Bitwise.scala 114:47]
    node _roundMask_T_41 = cat(_roundMask_T_39, _roundMask_T_40) @[Cat.scala 33:92]
    node _roundMask_T_42 = cat(_roundMask_T_37, _roundMask_T_41) @[Cat.scala 33:92]
    node _roundMask_T_43 = cat(_roundMask_T_32, _roundMask_T_42) @[Cat.scala 33:92]
    node _roundMask_T_44 = or(_roundMask_T_43, doShiftSigDown1) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(_roundMask_T_44, UInt<2>("h3")) @[Cat.scala 33:92]
    node _shiftedRoundMask_T = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), _shiftedRoundMask_T) @[Cat.scala 33:92]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = eq(anyRoundExtra, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    node _roundedSig_T_6 = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 175:35]
    node _roundedSig_T_7 = mux(_roundedSig_T_5, _roundedSig_T_6, UInt<13>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _roundedSig_T_16 = or(_roundedSig_T_12, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 11) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node sRoundedExp = add(io.in.sExp, _sRoundedExp_T_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node _common_expOut_T = bits(sRoundedExp, 5, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    common_expOut <= _common_expOut_T @[RoundAnyRawFNToRecFN.scala 185:23]
    node _common_fractOut_T = bits(roundedSig, 10, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 9, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node _common_fractOut_T_2 = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    common_fractOut <= _common_fractOut_T_2 @[RoundAnyRawFNToRecFN.scala 186:25]
    node _common_overflow_T = shr(sRoundedExp, 4) @[RoundAnyRawFNToRecFN.scala 194:30]
    node _common_overflow_T_1 = geq(_common_overflow_T, asSInt(UInt<3>("h3"))) @[RoundAnyRawFNToRecFN.scala 194:50]
    common_overflow <= _common_overflow_T_1 @[RoundAnyRawFNToRecFN.scala 191:25]
    node _common_totalUnderflow_T = lt(sRoundedExp, asSInt(UInt<5>("h8"))) @[RoundAnyRawFNToRecFN.scala 198:31]
    common_totalUnderflow <= _common_totalUnderflow_T @[RoundAnyRawFNToRecFN.scala 195:31]
    node _unboundedRange_roundPosBit_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    node _unboundedRange_anyRound_T = bits(adjustedSig, 2, 2) @[RoundAnyRawFNToRecFN.scala 203:44]
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_anyRound_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    node _unboundedRange_roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 205:38]
    node _unboundedRange_roundIncr_T_1 = and(_unboundedRange_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 12, 12) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 11, 11) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io.in.sExp, 5) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, asSInt(UInt<1>("h0"))) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    node _common_underflow_T_7 = eq(io.detectTininess, UInt<1>("h1")) @[RoundAnyRawFNToRecFN.scala 220:49]
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    node _common_underflow_T_9 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 223:49]
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_9) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = eq(_common_underflow_T_10, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 221:34]
    node _common_underflow_T_12 = and(_common_underflow_T_7, _common_underflow_T_11) @[RoundAnyRawFNToRecFN.scala 220:77]
    node _common_underflow_T_13 = and(_common_underflow_T_12, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = eq(_common_underflow_T_15, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    node _common_underflow_T_18 = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    common_underflow <= _common_underflow_T_18 @[RoundAnyRawFNToRecFN.scala 213:26]
    node _common_inexact_T = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    common_inexact <= _common_inexact_T @[RoundAnyRawFNToRecFN.scala 228:24]
    node isNaNOut = or(io.invalidExc, io.in.isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io.infiniteExc, io.in.isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = eq(isNaNOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = eq(notNaN_isSpecialInfOut, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = eq(io.in.isZero, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    node _overflow_roundMagUp_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 241:32]
    node overflow_roundMagUp = or(_overflow_roundMagUp_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = eq(overflow_roundMagUp, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io.in.sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io.in.isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    node _expOut_T_4 = not(UInt<6>("h8")) @[RoundAnyRawFNToRecFN.scala 256:19]
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, _expOut_T_4, UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<6>("h10"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<6>("h8"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<6>("h2f"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<6>("h30"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<6>("h38"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io.in.isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<10>("h200"), UInt<1>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    node _fractOut_T_4 = bits(pegMaxFiniteMagOut, 0, 0) @[Bitwise.scala 77:15]
    node _fractOut_T_5 = mux(_fractOut_T_4, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 77:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 33:92]
    node _io_out_T = cat(io_out_hi, fractOut) @[Cat.scala 33:92]
    io.out <= _io_out_T @[RoundAnyRawFNToRecFN.scala 284:12]
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 33:92]
    node io_exceptionFlags_hi_hi = cat(io.invalidExc, io.infiniteExc) @[Cat.scala 33:92]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 33:92]
    node _io_exceptionFlags_T = cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 33:92]
    io.exceptionFlags <= _io_exceptionFlags_T @[RoundAnyRawFNToRecFN.scala 285:23]

  module RoundRawFNToRecFN_63 :
    output io : { flip invalidExc : UInt<1>, flip infiniteExc : UInt<1>, flip in : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<14>}, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    io is invalid
    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_63 @[RoundAnyRawFNToRecFN.scala 307:15]
    roundAnyRawFNToRecFN.io is invalid
    roundAnyRawFNToRecFN.io.invalidExc <= io.invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io.infiniteExc <= io.infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io.in <- io.in @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io.roundingMode <= io.roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    roundAnyRawFNToRecFN.io.detectTininess <= io.detectTininess @[RoundAnyRawFNToRecFN.scala 314:44]
    io.out <= roundAnyRawFNToRecFN.io.out @[RoundAnyRawFNToRecFN.scala 315:23]
    io.exceptionFlags <= roundAnyRawFNToRecFN.io.exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]

  module AddRecFN_48 :
    output io : { flip subOp : UInt<1>, flip a : UInt<17>, flip b : UInt<17>, flip roundingMode : UInt<3>, flip detectTininess : UInt<1>, out : UInt<17>, exceptionFlags : UInt<5>}

    inst addRawFN of AddRawFN_48 @[AddRecFN.scala 147:26]
    addRawFN.io.subOp <= io.subOp @[AddRecFN.scala 149:30]
    node addRawFN_io_a_exp = bits(io.a, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_a_isZero_T = bits(addRawFN_io_a_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_a_isZero = eq(_addRawFN_io_a_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_a_isSpecial_T = bits(addRawFN_io_a_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_a_isSpecial = eq(_addRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_a_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_a_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_a_out_isNaN_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_a_out_isNaN_T_1 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_a_out.isNaN <= _addRawFN_io_a_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_a_out_isInf_T = bits(addRawFN_io_a_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_a_out_isInf_T_1 = eq(_addRawFN_io_a_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_a_out_isInf_T_2 = and(addRawFN_io_a_isSpecial, _addRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_a_out.isInf <= _addRawFN_io_a_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_a_out.isZero <= addRawFN_io_a_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_a_out_sign_T = bits(io.a, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_a_out.sign <= _addRawFN_io_a_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_a_out_sExp_T = cvt(addRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_a_out.sExp <= _addRawFN_io_a_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_a_out_sig_T = eq(addRawFN_io_a_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_a_out_sig_T_1 = bits(io.a, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_a_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_a_out_sig_T_2 = cat(addRawFN_io_a_out_sig_hi, _addRawFN_io_a_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_a_out.sig <= _addRawFN_io_a_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.a.sig <= addRawFN_io_a_out.sig @[AddRecFN.scala 150:30]
    addRawFN.io.a.sExp <= addRawFN_io_a_out.sExp @[AddRecFN.scala 150:30]
    addRawFN.io.a.sign <= addRawFN_io_a_out.sign @[AddRecFN.scala 150:30]
    addRawFN.io.a.isZero <= addRawFN_io_a_out.isZero @[AddRecFN.scala 150:30]
    addRawFN.io.a.isInf <= addRawFN_io_a_out.isInf @[AddRecFN.scala 150:30]
    addRawFN.io.a.isNaN <= addRawFN_io_a_out.isNaN @[AddRecFN.scala 150:30]
    node addRawFN_io_b_exp = bits(io.b, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _addRawFN_io_b_isZero_T = bits(addRawFN_io_b_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node addRawFN_io_b_isZero = eq(_addRawFN_io_b_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _addRawFN_io_b_isSpecial_T = bits(addRawFN_io_b_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node addRawFN_io_b_isSpecial = eq(_addRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire addRawFN_io_b_out : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    addRawFN_io_b_out is invalid @[rawFloatFromRecFN.scala 54:23]
    node _addRawFN_io_b_out_isNaN_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _addRawFN_io_b_out_isNaN_T_1 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    addRawFN_io_b_out.isNaN <= _addRawFN_io_b_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _addRawFN_io_b_out_isInf_T = bits(addRawFN_io_b_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _addRawFN_io_b_out_isInf_T_1 = eq(_addRawFN_io_b_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _addRawFN_io_b_out_isInf_T_2 = and(addRawFN_io_b_isSpecial, _addRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    addRawFN_io_b_out.isInf <= _addRawFN_io_b_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    addRawFN_io_b_out.isZero <= addRawFN_io_b_isZero @[rawFloatFromRecFN.scala 57:20]
    node _addRawFN_io_b_out_sign_T = bits(io.b, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    addRawFN_io_b_out.sign <= _addRawFN_io_b_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _addRawFN_io_b_out_sExp_T = cvt(addRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    addRawFN_io_b_out.sExp <= _addRawFN_io_b_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _addRawFN_io_b_out_sig_T = eq(addRawFN_io_b_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _addRawFN_io_b_out_sig_T_1 = bits(io.b, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node addRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), _addRawFN_io_b_out_sig_T) @[Cat.scala 33:92]
    node _addRawFN_io_b_out_sig_T_2 = cat(addRawFN_io_b_out_sig_hi, _addRawFN_io_b_out_sig_T_1) @[Cat.scala 33:92]
    addRawFN_io_b_out.sig <= _addRawFN_io_b_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    addRawFN.io.b.sig <= addRawFN_io_b_out.sig @[AddRecFN.scala 151:30]
    addRawFN.io.b.sExp <= addRawFN_io_b_out.sExp @[AddRecFN.scala 151:30]
    addRawFN.io.b.sign <= addRawFN_io_b_out.sign @[AddRecFN.scala 151:30]
    addRawFN.io.b.isZero <= addRawFN_io_b_out.isZero @[AddRecFN.scala 151:30]
    addRawFN.io.b.isInf <= addRawFN_io_b_out.isInf @[AddRecFN.scala 151:30]
    addRawFN.io.b.isNaN <= addRawFN_io_b_out.isNaN @[AddRecFN.scala 151:30]
    addRawFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 152:30]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_63 @[AddRecFN.scala 157:15]
    roundRawFNToRecFN.io.invalidExc <= addRawFN.io.invalidExc @[AddRecFN.scala 158:39]
    roundRawFNToRecFN.io.infiniteExc <= UInt<1>("h0") @[AddRecFN.scala 159:39]
    roundRawFNToRecFN.io.in.sig <= addRawFN.io.rawOut.sig @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sExp <= addRawFN.io.rawOut.sExp @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.sign <= addRawFN.io.rawOut.sign @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isZero <= addRawFN.io.rawOut.isZero @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isInf <= addRawFN.io.rawOut.isInf @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.in.isNaN <= addRawFN.io.rawOut.isNaN @[AddRecFN.scala 160:39]
    roundRawFNToRecFN.io.roundingMode <= io.roundingMode @[AddRecFN.scala 161:39]
    roundRawFNToRecFN.io.detectTininess <= io.detectTininess @[AddRecFN.scala 162:41]
    io.out <= roundRawFNToRecFN.io.out @[AddRecFN.scala 163:23]
    io.exceptionFlags <= roundRawFNToRecFN.io.exceptionFlags @[AddRecFN.scala 164:23]

  module FloatSub_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : UInt<17>, flip op2 : UInt<17>, res : UInt<17>}

    inst float_adder of AddRecFN_48 @[Float.scala 34:27]
    float_adder.io.subOp <= UInt<1>("h1") @[Float.scala 35:24]
    float_adder.io.a <= io.op1 @[Float.scala 36:20]
    float_adder.io.b <= io.op2 @[Float.scala 37:20]
    float_adder.io.roundingMode <= UInt<1>("h0") @[Float.scala 38:31]
    float_adder.io.detectTininess <= UInt<1>("h0") @[Float.scala 39:33]
    io.res <= float_adder.io.out @[Float.scala 40:10]

  module ComplexSub_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip op1 : { re : UInt<17>, im : UInt<17>}, flip op2 : { re : UInt<17>, im : UInt<17>}, res : { re : UInt<17>, im : UInt<17>}}

    inst io_res_re_inst of FloatSub_20 @[Float.scala 45:22]
    io_res_re_inst.clock <= clock
    io_res_re_inst.reset <= reset
    io_res_re_inst.io.op1 <= io.op1.re @[Float.scala 46:17]
    io_res_re_inst.io.op2 <= io.op2.re @[Float.scala 47:17]
    io.res.re <= io_res_re_inst.io.res @[Modules.scala 90:15]
    inst io_res_im_inst of FloatSub_21 @[Float.scala 45:22]
    io_res_im_inst.clock <= clock
    io_res_im_inst.reset <= reset
    io_res_im_inst.io.op1 <= io.op1.im @[Float.scala 46:17]
    io_res_im_inst.io.op2 <= io.op2.im @[Float.scala 47:17]
    io.res.im <= io_res_im_inst.io.res @[Modules.scala 91:15]

  module ButterflyAdd :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2]}

    inst io_out_0_inst of ComplexAdd_5 @[Modules.scala 81:22]
    io_out_0_inst.clock <= clock
    io_out_0_inst.reset <= reset
    io_out_0_inst.io.op1.im <= io.in[0].im @[Modules.scala 82:17]
    io_out_0_inst.io.op1.re <= io.in[0].re @[Modules.scala 82:17]
    io_out_0_inst.io.op2.im <= io.in[1].im @[Modules.scala 83:17]
    io_out_0_inst.io.op2.re <= io.in[1].re @[Modules.scala 83:17]
    io.out[0] <= io_out_0_inst.io.res @[Modules.scala 170:15]
    inst io_out_1_inst of ComplexSub_5 @[Modules.scala 100:22]
    io_out_1_inst.clock <= clock
    io_out_1_inst.reset <= reset
    io_out_1_inst.io.op1.im <= io.in[0].im @[Modules.scala 101:17]
    io_out_1_inst.io.op1.re <= io.in[0].re @[Modules.scala 101:17]
    io_out_1_inst.io.op2.im <= io.in[1].im @[Modules.scala 102:17]
    io_out_1_inst.io.op2.re <= io.in[1].re @[Modules.scala 102:17]
    io.out[1] <= io_out_1_inst.io.res @[Modules.scala 171:15]

  module Switch :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip sel : UInt<1>}

    wire _swdata_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_1 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_1 <= _swdata_T @[Modules.scala 304:71]
    node _swdata_T_1 = bits(_swdata_WIRE_1, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE.im <= _swdata_T_1 @[Modules.scala 304:71]
    node _swdata_T_2 = bits(_swdata_WIRE_1, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE.re <= _swdata_T_2 @[Modules.scala 304:71]
    wire _swdata_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_3 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_3 <= _swdata_T_3 @[Modules.scala 304:71]
    node _swdata_T_4 = bits(_swdata_WIRE_3, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE_2.im <= _swdata_T_4 @[Modules.scala 304:71]
    node _swdata_T_5 = bits(_swdata_WIRE_3, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE_2.re <= _swdata_T_5 @[Modules.scala 304:71]
    wire swdata : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 304:23]
    swdata[0] <= _swdata_WIRE @[Modules.scala 304:23]
    swdata[1] <= _swdata_WIRE_2 @[Modules.scala 304:23]
    swdata[0] <= io.in[0] @[Modules.scala 305:38]
    reg swdata_1_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r <= io.in[1] @[Reg.scala 20:22]
    reg swdata_1_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_1 <= swdata_1_r @[Reg.scala 20:22]
    reg swdata_1_r_2 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_2) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_2 <= swdata_1_r_1 @[Reg.scala 20:22]
    reg swdata_1_r_3 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_3) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_3 <= swdata_1_r_2 @[Reg.scala 20:22]
    reg swdata_1_r_4 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_4) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_4 <= swdata_1_r_3 @[Reg.scala 20:22]
    reg swdata_1_r_5 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_5) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_5 <= swdata_1_r_4 @[Reg.scala 20:22]
    reg swdata_1_r_6 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_6) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_6 <= swdata_1_r_5 @[Reg.scala 20:22]
    reg swdata_1_r_7 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_7) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_7 <= swdata_1_r_6 @[Reg.scala 20:22]
    reg swdata_1_r_8 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_8) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_8 <= swdata_1_r_7 @[Reg.scala 20:22]
    reg swdata_1_r_9 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_9) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_9 <= swdata_1_r_8 @[Reg.scala 20:22]
    reg swdata_1_r_10 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_10) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_10 <= swdata_1_r_9 @[Reg.scala 20:22]
    reg swdata_1_r_11 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_11) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_11 <= swdata_1_r_10 @[Reg.scala 20:22]
    reg swdata_1_r_12 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_12) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_12 <= swdata_1_r_11 @[Reg.scala 20:22]
    reg swdata_1_r_13 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_13) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_13 <= swdata_1_r_12 @[Reg.scala 20:22]
    reg swdata_1_r_14 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_14) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_14 <= swdata_1_r_13 @[Reg.scala 20:22]
    reg swdata_1_r_15 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_15) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_15 <= swdata_1_r_14 @[Reg.scala 20:22]
    swdata[1] <= swdata_1_r_15 @[Modules.scala 305:38]
    wire _io_out_0_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_0_WIRE[0] <= swdata[0] @[Modules.scala 302:12]
    _io_out_0_WIRE[1] <= swdata[1] @[Modules.scala 302:12]
    reg io_out_0_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r <= _io_out_0_WIRE[io.sel] @[Reg.scala 20:22]
    reg io_out_0_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_1 <= io_out_0_r @[Reg.scala 20:22]
    reg io_out_0_r_2 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_2) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_2 <= io_out_0_r_1 @[Reg.scala 20:22]
    reg io_out_0_r_3 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_3) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_3 <= io_out_0_r_2 @[Reg.scala 20:22]
    reg io_out_0_r_4 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_4) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_4 <= io_out_0_r_3 @[Reg.scala 20:22]
    reg io_out_0_r_5 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_5) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_5 <= io_out_0_r_4 @[Reg.scala 20:22]
    reg io_out_0_r_6 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_6) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_6 <= io_out_0_r_5 @[Reg.scala 20:22]
    reg io_out_0_r_7 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_7) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_7 <= io_out_0_r_6 @[Reg.scala 20:22]
    reg io_out_0_r_8 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_8) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_8 <= io_out_0_r_7 @[Reg.scala 20:22]
    reg io_out_0_r_9 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_9) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_9 <= io_out_0_r_8 @[Reg.scala 20:22]
    reg io_out_0_r_10 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_10) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_10 <= io_out_0_r_9 @[Reg.scala 20:22]
    reg io_out_0_r_11 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_11) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_11 <= io_out_0_r_10 @[Reg.scala 20:22]
    reg io_out_0_r_12 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_12) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_12 <= io_out_0_r_11 @[Reg.scala 20:22]
    reg io_out_0_r_13 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_13) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_13 <= io_out_0_r_12 @[Reg.scala 20:22]
    reg io_out_0_r_14 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_14) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_14 <= io_out_0_r_13 @[Reg.scala 20:22]
    reg io_out_0_r_15 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_15) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_15 <= io_out_0_r_14 @[Reg.scala 20:22]
    io.out[0] <= io_out_0_r_15 @[Modules.scala 306:38]
    wire _io_out_1_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_1_WIRE[0] <= swdata[1] @[Modules.scala 302:12]
    _io_out_1_WIRE[1] <= swdata[0] @[Modules.scala 302:12]
    io.out[1] <= _io_out_1_WIRE[io.sel] @[Modules.scala 306:38]

  module Switch_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip sel : UInt<1>}

    wire _swdata_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_1 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_1 <= _swdata_T @[Modules.scala 304:71]
    node _swdata_T_1 = bits(_swdata_WIRE_1, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE.im <= _swdata_T_1 @[Modules.scala 304:71]
    node _swdata_T_2 = bits(_swdata_WIRE_1, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE.re <= _swdata_T_2 @[Modules.scala 304:71]
    wire _swdata_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_3 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_3 <= _swdata_T_3 @[Modules.scala 304:71]
    node _swdata_T_4 = bits(_swdata_WIRE_3, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE_2.im <= _swdata_T_4 @[Modules.scala 304:71]
    node _swdata_T_5 = bits(_swdata_WIRE_3, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE_2.re <= _swdata_T_5 @[Modules.scala 304:71]
    wire swdata : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 304:23]
    swdata[0] <= _swdata_WIRE @[Modules.scala 304:23]
    swdata[1] <= _swdata_WIRE_2 @[Modules.scala 304:23]
    swdata[0] <= io.in[0] @[Modules.scala 305:38]
    reg swdata_1_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r <= io.in[1] @[Reg.scala 20:22]
    reg swdata_1_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_1 <= swdata_1_r @[Reg.scala 20:22]
    reg swdata_1_r_2 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_2) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_2 <= swdata_1_r_1 @[Reg.scala 20:22]
    reg swdata_1_r_3 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_3) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_3 <= swdata_1_r_2 @[Reg.scala 20:22]
    reg swdata_1_r_4 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_4) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_4 <= swdata_1_r_3 @[Reg.scala 20:22]
    reg swdata_1_r_5 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_5) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_5 <= swdata_1_r_4 @[Reg.scala 20:22]
    reg swdata_1_r_6 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_6) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_6 <= swdata_1_r_5 @[Reg.scala 20:22]
    reg swdata_1_r_7 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_7) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_7 <= swdata_1_r_6 @[Reg.scala 20:22]
    swdata[1] <= swdata_1_r_7 @[Modules.scala 305:38]
    wire _io_out_0_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_0_WIRE[0] <= swdata[0] @[Modules.scala 302:12]
    _io_out_0_WIRE[1] <= swdata[1] @[Modules.scala 302:12]
    reg io_out_0_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r <= _io_out_0_WIRE[io.sel] @[Reg.scala 20:22]
    reg io_out_0_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_1 <= io_out_0_r @[Reg.scala 20:22]
    reg io_out_0_r_2 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_2) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_2 <= io_out_0_r_1 @[Reg.scala 20:22]
    reg io_out_0_r_3 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_3) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_3 <= io_out_0_r_2 @[Reg.scala 20:22]
    reg io_out_0_r_4 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_4) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_4 <= io_out_0_r_3 @[Reg.scala 20:22]
    reg io_out_0_r_5 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_5) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_5 <= io_out_0_r_4 @[Reg.scala 20:22]
    reg io_out_0_r_6 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_6) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_6 <= io_out_0_r_5 @[Reg.scala 20:22]
    reg io_out_0_r_7 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_7) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_7 <= io_out_0_r_6 @[Reg.scala 20:22]
    io.out[0] <= io_out_0_r_7 @[Modules.scala 306:38]
    wire _io_out_1_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_1_WIRE[0] <= swdata[1] @[Modules.scala 302:12]
    _io_out_1_WIRE[1] <= swdata[0] @[Modules.scala 302:12]
    io.out[1] <= _io_out_1_WIRE[io.sel] @[Modules.scala 306:38]

  module Switch_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip sel : UInt<1>}

    wire _swdata_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_1 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_1 <= _swdata_T @[Modules.scala 304:71]
    node _swdata_T_1 = bits(_swdata_WIRE_1, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE.im <= _swdata_T_1 @[Modules.scala 304:71]
    node _swdata_T_2 = bits(_swdata_WIRE_1, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE.re <= _swdata_T_2 @[Modules.scala 304:71]
    wire _swdata_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_3 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_3 <= _swdata_T_3 @[Modules.scala 304:71]
    node _swdata_T_4 = bits(_swdata_WIRE_3, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE_2.im <= _swdata_T_4 @[Modules.scala 304:71]
    node _swdata_T_5 = bits(_swdata_WIRE_3, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE_2.re <= _swdata_T_5 @[Modules.scala 304:71]
    wire swdata : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 304:23]
    swdata[0] <= _swdata_WIRE @[Modules.scala 304:23]
    swdata[1] <= _swdata_WIRE_2 @[Modules.scala 304:23]
    swdata[0] <= io.in[0] @[Modules.scala 305:38]
    reg swdata_1_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r <= io.in[1] @[Reg.scala 20:22]
    reg swdata_1_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_1 <= swdata_1_r @[Reg.scala 20:22]
    reg swdata_1_r_2 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_2) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_2 <= swdata_1_r_1 @[Reg.scala 20:22]
    reg swdata_1_r_3 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_3) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_3 <= swdata_1_r_2 @[Reg.scala 20:22]
    swdata[1] <= swdata_1_r_3 @[Modules.scala 305:38]
    wire _io_out_0_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_0_WIRE[0] <= swdata[0] @[Modules.scala 302:12]
    _io_out_0_WIRE[1] <= swdata[1] @[Modules.scala 302:12]
    reg io_out_0_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r <= _io_out_0_WIRE[io.sel] @[Reg.scala 20:22]
    reg io_out_0_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_1 <= io_out_0_r @[Reg.scala 20:22]
    reg io_out_0_r_2 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_2) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_2 <= io_out_0_r_1 @[Reg.scala 20:22]
    reg io_out_0_r_3 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_3) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_3 <= io_out_0_r_2 @[Reg.scala 20:22]
    io.out[0] <= io_out_0_r_3 @[Modules.scala 306:38]
    wire _io_out_1_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_1_WIRE[0] <= swdata[1] @[Modules.scala 302:12]
    _io_out_1_WIRE[1] <= swdata[0] @[Modules.scala 302:12]
    io.out[1] <= _io_out_1_WIRE[io.sel] @[Modules.scala 306:38]

  module Switch_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip sel : UInt<1>}

    wire _swdata_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_1 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_1 <= _swdata_T @[Modules.scala 304:71]
    node _swdata_T_1 = bits(_swdata_WIRE_1, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE.im <= _swdata_T_1 @[Modules.scala 304:71]
    node _swdata_T_2 = bits(_swdata_WIRE_1, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE.re <= _swdata_T_2 @[Modules.scala 304:71]
    wire _swdata_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_3 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_3 <= _swdata_T_3 @[Modules.scala 304:71]
    node _swdata_T_4 = bits(_swdata_WIRE_3, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE_2.im <= _swdata_T_4 @[Modules.scala 304:71]
    node _swdata_T_5 = bits(_swdata_WIRE_3, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE_2.re <= _swdata_T_5 @[Modules.scala 304:71]
    wire swdata : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 304:23]
    swdata[0] <= _swdata_WIRE @[Modules.scala 304:23]
    swdata[1] <= _swdata_WIRE_2 @[Modules.scala 304:23]
    swdata[0] <= io.in[0] @[Modules.scala 305:38]
    reg swdata_1_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r <= io.in[1] @[Reg.scala 20:22]
    reg swdata_1_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r_1 <= swdata_1_r @[Reg.scala 20:22]
    swdata[1] <= swdata_1_r_1 @[Modules.scala 305:38]
    wire _io_out_0_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_0_WIRE[0] <= swdata[0] @[Modules.scala 302:12]
    _io_out_0_WIRE[1] <= swdata[1] @[Modules.scala 302:12]
    reg io_out_0_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r <= _io_out_0_WIRE[io.sel] @[Reg.scala 20:22]
    reg io_out_0_r_1 : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r_1) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r_1 <= io_out_0_r @[Reg.scala 20:22]
    io.out[0] <= io_out_0_r_1 @[Modules.scala 306:38]
    wire _io_out_1_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_1_WIRE[0] <= swdata[1] @[Modules.scala 302:12]
    _io_out_1_WIRE[1] <= swdata[0] @[Modules.scala 302:12]
    io.out[1] <= _io_out_1_WIRE[io.sel] @[Modules.scala 306:38]

  module Switch_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}[2], out : { re : UInt<17>, im : UInt<17>}[2], flip sel : UInt<1>}

    wire _swdata_WIRE : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_1 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_1 <= _swdata_T @[Modules.scala 304:71]
    node _swdata_T_1 = bits(_swdata_WIRE_1, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE.im <= _swdata_T_1 @[Modules.scala 304:71]
    node _swdata_T_2 = bits(_swdata_WIRE_1, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE.re <= _swdata_T_2 @[Modules.scala 304:71]
    wire _swdata_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[Modules.scala 304:71]
    node _swdata_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[Modules.scala 304:71]
    wire _swdata_WIRE_3 : UInt<34> @[Modules.scala 304:71]
    _swdata_WIRE_3 <= _swdata_T_3 @[Modules.scala 304:71]
    node _swdata_T_4 = bits(_swdata_WIRE_3, 16, 0) @[Modules.scala 304:71]
    _swdata_WIRE_2.im <= _swdata_T_4 @[Modules.scala 304:71]
    node _swdata_T_5 = bits(_swdata_WIRE_3, 33, 17) @[Modules.scala 304:71]
    _swdata_WIRE_2.re <= _swdata_T_5 @[Modules.scala 304:71]
    wire swdata : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 304:23]
    swdata[0] <= _swdata_WIRE @[Modules.scala 304:23]
    swdata[1] <= _swdata_WIRE_2 @[Modules.scala 304:23]
    swdata[0] <= io.in[0] @[Modules.scala 305:38]
    reg swdata_1_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), swdata_1_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      swdata_1_r <= io.in[1] @[Reg.scala 20:22]
    swdata[1] <= swdata_1_r @[Modules.scala 305:38]
    wire _io_out_0_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_0_WIRE[0] <= swdata[0] @[Modules.scala 302:12]
    _io_out_0_WIRE[1] <= swdata[1] @[Modules.scala 302:12]
    reg io_out_0_r : { re : UInt<17>, im : UInt<17>}, clock with :
      reset => (UInt<1>("h0"), io_out_0_r) @[Reg.scala 19:16]
    when UInt<1>("h1") : @[Reg.scala 20:18]
      io_out_0_r <= _io_out_0_WIRE[io.sel] @[Reg.scala 20:22]
    io.out[0] <= io_out_0_r @[Modules.scala 306:38]
    wire _io_out_1_WIRE : { re : UInt<17>, im : UInt<17>}[2] @[Modules.scala 302:12]
    _io_out_1_WIRE[0] <= swdata[1] @[Modules.scala 302:12]
    _io_out_1_WIRE[1] <= swdata[0] @[Modules.scala 302:12]
    io.out[1] <= _io_out_1_WIRE[io.sel] @[Modules.scala 306:38]

  module ComplexRecode :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<16>, im : UInt<16>}, out : { re : UInt<17>, im : UInt<17>}}

    node io_out_re_rawIn_sign = bits(io.in.re, 15, 15) @[rawFloatFromFN.scala 46:22]
    node io_out_re_rawIn_expIn = bits(io.in.re, 14, 10) @[rawFloatFromFN.scala 47:23]
    node io_out_re_rawIn_fractIn = bits(io.in.re, 9, 0) @[rawFloatFromFN.scala 48:25]
    node io_out_re_rawIn_isZeroExpIn = eq(io_out_re_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node io_out_re_rawIn_isZeroFractIn = eq(io_out_re_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _io_out_re_rawIn_normDist_T = bits(io_out_re_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_1 = bits(io_out_re_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_2 = bits(io_out_re_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_3 = bits(io_out_re_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_4 = bits(io_out_re_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_5 = bits(io_out_re_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_6 = bits(io_out_re_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_7 = bits(io_out_re_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_8 = bits(io_out_re_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_9 = bits(io_out_re_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_10 = mux(_io_out_re_rawIn_normDist_T_1, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_11 = mux(_io_out_re_rawIn_normDist_T_2, UInt<3>("h7"), _io_out_re_rawIn_normDist_T_10) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_12 = mux(_io_out_re_rawIn_normDist_T_3, UInt<3>("h6"), _io_out_re_rawIn_normDist_T_11) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_13 = mux(_io_out_re_rawIn_normDist_T_4, UInt<3>("h5"), _io_out_re_rawIn_normDist_T_12) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_14 = mux(_io_out_re_rawIn_normDist_T_5, UInt<3>("h4"), _io_out_re_rawIn_normDist_T_13) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_15 = mux(_io_out_re_rawIn_normDist_T_6, UInt<2>("h3"), _io_out_re_rawIn_normDist_T_14) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_16 = mux(_io_out_re_rawIn_normDist_T_7, UInt<2>("h2"), _io_out_re_rawIn_normDist_T_15) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_17 = mux(_io_out_re_rawIn_normDist_T_8, UInt<1>("h1"), _io_out_re_rawIn_normDist_T_16) @[Mux.scala 47:70]
    node io_out_re_rawIn_normDist = mux(_io_out_re_rawIn_normDist_T_9, UInt<1>("h0"), _io_out_re_rawIn_normDist_T_17) @[Mux.scala 47:70]
    node _io_out_re_rawIn_subnormFract_T = dshl(io_out_re_rawIn_fractIn, io_out_re_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _io_out_re_rawIn_subnormFract_T_1 = bits(_io_out_re_rawIn_subnormFract_T, 8, 0) @[rawFloatFromFN.scala 54:47]
    node io_out_re_rawIn_subnormFract = shl(_io_out_re_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _io_out_re_rawIn_adjustedExp_T = xor(io_out_re_rawIn_normDist, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _io_out_re_rawIn_adjustedExp_T_1 = mux(io_out_re_rawIn_isZeroExpIn, _io_out_re_rawIn_adjustedExp_T, io_out_re_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _io_out_re_rawIn_adjustedExp_T_2 = mux(io_out_re_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _io_out_re_rawIn_adjustedExp_T_3 = or(UInt<5>("h10"), _io_out_re_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _io_out_re_rawIn_adjustedExp_T_4 = add(_io_out_re_rawIn_adjustedExp_T_1, _io_out_re_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node io_out_re_rawIn_adjustedExp = tail(_io_out_re_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node io_out_re_rawIn_isZero = and(io_out_re_rawIn_isZeroExpIn, io_out_re_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _io_out_re_rawIn_isSpecial_T = bits(io_out_re_rawIn_adjustedExp, 5, 4) @[rawFloatFromFN.scala 63:37]
    node io_out_re_rawIn_isSpecial = eq(_io_out_re_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire io_out_re_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    io_out_re_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _io_out_re_rawIn_out_isNaN_T = eq(io_out_re_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _io_out_re_rawIn_out_isNaN_T_1 = and(io_out_re_rawIn_isSpecial, _io_out_re_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    io_out_re_rawIn.isNaN <= _io_out_re_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _io_out_re_rawIn_out_isInf_T = and(io_out_re_rawIn_isSpecial, io_out_re_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    io_out_re_rawIn.isInf <= _io_out_re_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    io_out_re_rawIn.isZero <= io_out_re_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    io_out_re_rawIn.sign <= io_out_re_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _io_out_re_rawIn_out_sExp_T = bits(io_out_re_rawIn_adjustedExp, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _io_out_re_rawIn_out_sExp_T_1 = cvt(_io_out_re_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    io_out_re_rawIn.sExp <= _io_out_re_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node _io_out_re_rawIn_out_sig_T = eq(io_out_re_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _io_out_re_rawIn_out_sig_T_1 = mux(io_out_re_rawIn_isZeroExpIn, io_out_re_rawIn_subnormFract, io_out_re_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node io_out_re_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_re_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_re_rawIn_out_sig_T_2 = cat(io_out_re_rawIn_out_sig_hi, _io_out_re_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_re_rawIn.sig <= _io_out_re_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
    node _io_out_re_T = bits(io_out_re_rawIn.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _io_out_re_T_1 = mux(io_out_re_rawIn.isZero, UInt<3>("h0"), _io_out_re_T) @[recFNFromFN.scala 48:16]
    node _io_out_re_T_2 = mux(io_out_re_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _io_out_re_T_3 = or(_io_out_re_T_1, _io_out_re_T_2) @[recFNFromFN.scala 48:79]
    node _io_out_re_T_4 = bits(io_out_re_rawIn.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _io_out_re_T_5 = bits(io_out_re_rawIn.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node io_out_re_lo = cat(_io_out_re_T_4, _io_out_re_T_5) @[Cat.scala 33:92]
    node io_out_re_hi = cat(io_out_re_rawIn.sign, _io_out_re_T_3) @[Cat.scala 33:92]
    node _io_out_re_T_6 = cat(io_out_re_hi, io_out_re_lo) @[Cat.scala 33:92]
    io.out.re <= _io_out_re_T_6 @[Modules.scala 34:13]
    node io_out_im_rawIn_sign = bits(io.in.im, 15, 15) @[rawFloatFromFN.scala 46:22]
    node io_out_im_rawIn_expIn = bits(io.in.im, 14, 10) @[rawFloatFromFN.scala 47:23]
    node io_out_im_rawIn_fractIn = bits(io.in.im, 9, 0) @[rawFloatFromFN.scala 48:25]
    node io_out_im_rawIn_isZeroExpIn = eq(io_out_im_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node io_out_im_rawIn_isZeroFractIn = eq(io_out_im_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _io_out_im_rawIn_normDist_T = bits(io_out_im_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_1 = bits(io_out_im_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_2 = bits(io_out_im_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_3 = bits(io_out_im_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_4 = bits(io_out_im_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_5 = bits(io_out_im_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_6 = bits(io_out_im_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_7 = bits(io_out_im_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_8 = bits(io_out_im_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_9 = bits(io_out_im_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_10 = mux(_io_out_im_rawIn_normDist_T_1, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_11 = mux(_io_out_im_rawIn_normDist_T_2, UInt<3>("h7"), _io_out_im_rawIn_normDist_T_10) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_12 = mux(_io_out_im_rawIn_normDist_T_3, UInt<3>("h6"), _io_out_im_rawIn_normDist_T_11) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_13 = mux(_io_out_im_rawIn_normDist_T_4, UInt<3>("h5"), _io_out_im_rawIn_normDist_T_12) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_14 = mux(_io_out_im_rawIn_normDist_T_5, UInt<3>("h4"), _io_out_im_rawIn_normDist_T_13) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_15 = mux(_io_out_im_rawIn_normDist_T_6, UInt<2>("h3"), _io_out_im_rawIn_normDist_T_14) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_16 = mux(_io_out_im_rawIn_normDist_T_7, UInt<2>("h2"), _io_out_im_rawIn_normDist_T_15) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_17 = mux(_io_out_im_rawIn_normDist_T_8, UInt<1>("h1"), _io_out_im_rawIn_normDist_T_16) @[Mux.scala 47:70]
    node io_out_im_rawIn_normDist = mux(_io_out_im_rawIn_normDist_T_9, UInt<1>("h0"), _io_out_im_rawIn_normDist_T_17) @[Mux.scala 47:70]
    node _io_out_im_rawIn_subnormFract_T = dshl(io_out_im_rawIn_fractIn, io_out_im_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _io_out_im_rawIn_subnormFract_T_1 = bits(_io_out_im_rawIn_subnormFract_T, 8, 0) @[rawFloatFromFN.scala 54:47]
    node io_out_im_rawIn_subnormFract = shl(_io_out_im_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _io_out_im_rawIn_adjustedExp_T = xor(io_out_im_rawIn_normDist, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _io_out_im_rawIn_adjustedExp_T_1 = mux(io_out_im_rawIn_isZeroExpIn, _io_out_im_rawIn_adjustedExp_T, io_out_im_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _io_out_im_rawIn_adjustedExp_T_2 = mux(io_out_im_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _io_out_im_rawIn_adjustedExp_T_3 = or(UInt<5>("h10"), _io_out_im_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _io_out_im_rawIn_adjustedExp_T_4 = add(_io_out_im_rawIn_adjustedExp_T_1, _io_out_im_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node io_out_im_rawIn_adjustedExp = tail(_io_out_im_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node io_out_im_rawIn_isZero = and(io_out_im_rawIn_isZeroExpIn, io_out_im_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _io_out_im_rawIn_isSpecial_T = bits(io_out_im_rawIn_adjustedExp, 5, 4) @[rawFloatFromFN.scala 63:37]
    node io_out_im_rawIn_isSpecial = eq(_io_out_im_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire io_out_im_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    io_out_im_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _io_out_im_rawIn_out_isNaN_T = eq(io_out_im_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _io_out_im_rawIn_out_isNaN_T_1 = and(io_out_im_rawIn_isSpecial, _io_out_im_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    io_out_im_rawIn.isNaN <= _io_out_im_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _io_out_im_rawIn_out_isInf_T = and(io_out_im_rawIn_isSpecial, io_out_im_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    io_out_im_rawIn.isInf <= _io_out_im_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    io_out_im_rawIn.isZero <= io_out_im_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    io_out_im_rawIn.sign <= io_out_im_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _io_out_im_rawIn_out_sExp_T = bits(io_out_im_rawIn_adjustedExp, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _io_out_im_rawIn_out_sExp_T_1 = cvt(_io_out_im_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    io_out_im_rawIn.sExp <= _io_out_im_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node _io_out_im_rawIn_out_sig_T = eq(io_out_im_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _io_out_im_rawIn_out_sig_T_1 = mux(io_out_im_rawIn_isZeroExpIn, io_out_im_rawIn_subnormFract, io_out_im_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node io_out_im_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_im_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_im_rawIn_out_sig_T_2 = cat(io_out_im_rawIn_out_sig_hi, _io_out_im_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_im_rawIn.sig <= _io_out_im_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
    node _io_out_im_T = bits(io_out_im_rawIn.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _io_out_im_T_1 = mux(io_out_im_rawIn.isZero, UInt<3>("h0"), _io_out_im_T) @[recFNFromFN.scala 48:16]
    node _io_out_im_T_2 = mux(io_out_im_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _io_out_im_T_3 = or(_io_out_im_T_1, _io_out_im_T_2) @[recFNFromFN.scala 48:79]
    node _io_out_im_T_4 = bits(io_out_im_rawIn.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _io_out_im_T_5 = bits(io_out_im_rawIn.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node io_out_im_lo = cat(_io_out_im_T_4, _io_out_im_T_5) @[Cat.scala 33:92]
    node io_out_im_hi = cat(io_out_im_rawIn.sign, _io_out_im_T_3) @[Cat.scala 33:92]
    node _io_out_im_T_6 = cat(io_out_im_hi, io_out_im_lo) @[Cat.scala 33:92]
    io.out.im <= _io_out_im_T_6 @[Modules.scala 35:13]

  module ComplexRecode_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<16>, im : UInt<16>}, out : { re : UInt<17>, im : UInt<17>}}

    node io_out_re_rawIn_sign = bits(io.in.re, 15, 15) @[rawFloatFromFN.scala 46:22]
    node io_out_re_rawIn_expIn = bits(io.in.re, 14, 10) @[rawFloatFromFN.scala 47:23]
    node io_out_re_rawIn_fractIn = bits(io.in.re, 9, 0) @[rawFloatFromFN.scala 48:25]
    node io_out_re_rawIn_isZeroExpIn = eq(io_out_re_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node io_out_re_rawIn_isZeroFractIn = eq(io_out_re_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _io_out_re_rawIn_normDist_T = bits(io_out_re_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_1 = bits(io_out_re_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_2 = bits(io_out_re_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_3 = bits(io_out_re_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_4 = bits(io_out_re_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_5 = bits(io_out_re_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_6 = bits(io_out_re_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_7 = bits(io_out_re_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_8 = bits(io_out_re_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_9 = bits(io_out_re_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _io_out_re_rawIn_normDist_T_10 = mux(_io_out_re_rawIn_normDist_T_1, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_11 = mux(_io_out_re_rawIn_normDist_T_2, UInt<3>("h7"), _io_out_re_rawIn_normDist_T_10) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_12 = mux(_io_out_re_rawIn_normDist_T_3, UInt<3>("h6"), _io_out_re_rawIn_normDist_T_11) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_13 = mux(_io_out_re_rawIn_normDist_T_4, UInt<3>("h5"), _io_out_re_rawIn_normDist_T_12) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_14 = mux(_io_out_re_rawIn_normDist_T_5, UInt<3>("h4"), _io_out_re_rawIn_normDist_T_13) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_15 = mux(_io_out_re_rawIn_normDist_T_6, UInt<2>("h3"), _io_out_re_rawIn_normDist_T_14) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_16 = mux(_io_out_re_rawIn_normDist_T_7, UInt<2>("h2"), _io_out_re_rawIn_normDist_T_15) @[Mux.scala 47:70]
    node _io_out_re_rawIn_normDist_T_17 = mux(_io_out_re_rawIn_normDist_T_8, UInt<1>("h1"), _io_out_re_rawIn_normDist_T_16) @[Mux.scala 47:70]
    node io_out_re_rawIn_normDist = mux(_io_out_re_rawIn_normDist_T_9, UInt<1>("h0"), _io_out_re_rawIn_normDist_T_17) @[Mux.scala 47:70]
    node _io_out_re_rawIn_subnormFract_T = dshl(io_out_re_rawIn_fractIn, io_out_re_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _io_out_re_rawIn_subnormFract_T_1 = bits(_io_out_re_rawIn_subnormFract_T, 8, 0) @[rawFloatFromFN.scala 54:47]
    node io_out_re_rawIn_subnormFract = shl(_io_out_re_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _io_out_re_rawIn_adjustedExp_T = xor(io_out_re_rawIn_normDist, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _io_out_re_rawIn_adjustedExp_T_1 = mux(io_out_re_rawIn_isZeroExpIn, _io_out_re_rawIn_adjustedExp_T, io_out_re_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _io_out_re_rawIn_adjustedExp_T_2 = mux(io_out_re_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _io_out_re_rawIn_adjustedExp_T_3 = or(UInt<5>("h10"), _io_out_re_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _io_out_re_rawIn_adjustedExp_T_4 = add(_io_out_re_rawIn_adjustedExp_T_1, _io_out_re_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node io_out_re_rawIn_adjustedExp = tail(_io_out_re_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node io_out_re_rawIn_isZero = and(io_out_re_rawIn_isZeroExpIn, io_out_re_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _io_out_re_rawIn_isSpecial_T = bits(io_out_re_rawIn_adjustedExp, 5, 4) @[rawFloatFromFN.scala 63:37]
    node io_out_re_rawIn_isSpecial = eq(_io_out_re_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire io_out_re_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    io_out_re_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _io_out_re_rawIn_out_isNaN_T = eq(io_out_re_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _io_out_re_rawIn_out_isNaN_T_1 = and(io_out_re_rawIn_isSpecial, _io_out_re_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    io_out_re_rawIn.isNaN <= _io_out_re_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _io_out_re_rawIn_out_isInf_T = and(io_out_re_rawIn_isSpecial, io_out_re_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    io_out_re_rawIn.isInf <= _io_out_re_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    io_out_re_rawIn.isZero <= io_out_re_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    io_out_re_rawIn.sign <= io_out_re_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _io_out_re_rawIn_out_sExp_T = bits(io_out_re_rawIn_adjustedExp, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _io_out_re_rawIn_out_sExp_T_1 = cvt(_io_out_re_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    io_out_re_rawIn.sExp <= _io_out_re_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node _io_out_re_rawIn_out_sig_T = eq(io_out_re_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _io_out_re_rawIn_out_sig_T_1 = mux(io_out_re_rawIn_isZeroExpIn, io_out_re_rawIn_subnormFract, io_out_re_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node io_out_re_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_re_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_re_rawIn_out_sig_T_2 = cat(io_out_re_rawIn_out_sig_hi, _io_out_re_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_re_rawIn.sig <= _io_out_re_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
    node _io_out_re_T = bits(io_out_re_rawIn.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _io_out_re_T_1 = mux(io_out_re_rawIn.isZero, UInt<3>("h0"), _io_out_re_T) @[recFNFromFN.scala 48:16]
    node _io_out_re_T_2 = mux(io_out_re_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _io_out_re_T_3 = or(_io_out_re_T_1, _io_out_re_T_2) @[recFNFromFN.scala 48:79]
    node _io_out_re_T_4 = bits(io_out_re_rawIn.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _io_out_re_T_5 = bits(io_out_re_rawIn.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node io_out_re_lo = cat(_io_out_re_T_4, _io_out_re_T_5) @[Cat.scala 33:92]
    node io_out_re_hi = cat(io_out_re_rawIn.sign, _io_out_re_T_3) @[Cat.scala 33:92]
    node _io_out_re_T_6 = cat(io_out_re_hi, io_out_re_lo) @[Cat.scala 33:92]
    io.out.re <= _io_out_re_T_6 @[Modules.scala 34:13]
    node io_out_im_rawIn_sign = bits(io.in.im, 15, 15) @[rawFloatFromFN.scala 46:22]
    node io_out_im_rawIn_expIn = bits(io.in.im, 14, 10) @[rawFloatFromFN.scala 47:23]
    node io_out_im_rawIn_fractIn = bits(io.in.im, 9, 0) @[rawFloatFromFN.scala 48:25]
    node io_out_im_rawIn_isZeroExpIn = eq(io_out_im_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node io_out_im_rawIn_isZeroFractIn = eq(io_out_im_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _io_out_im_rawIn_normDist_T = bits(io_out_im_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_1 = bits(io_out_im_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_2 = bits(io_out_im_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_3 = bits(io_out_im_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_4 = bits(io_out_im_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_5 = bits(io_out_im_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_6 = bits(io_out_im_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_7 = bits(io_out_im_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_8 = bits(io_out_im_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_9 = bits(io_out_im_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _io_out_im_rawIn_normDist_T_10 = mux(_io_out_im_rawIn_normDist_T_1, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_11 = mux(_io_out_im_rawIn_normDist_T_2, UInt<3>("h7"), _io_out_im_rawIn_normDist_T_10) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_12 = mux(_io_out_im_rawIn_normDist_T_3, UInt<3>("h6"), _io_out_im_rawIn_normDist_T_11) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_13 = mux(_io_out_im_rawIn_normDist_T_4, UInt<3>("h5"), _io_out_im_rawIn_normDist_T_12) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_14 = mux(_io_out_im_rawIn_normDist_T_5, UInt<3>("h4"), _io_out_im_rawIn_normDist_T_13) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_15 = mux(_io_out_im_rawIn_normDist_T_6, UInt<2>("h3"), _io_out_im_rawIn_normDist_T_14) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_16 = mux(_io_out_im_rawIn_normDist_T_7, UInt<2>("h2"), _io_out_im_rawIn_normDist_T_15) @[Mux.scala 47:70]
    node _io_out_im_rawIn_normDist_T_17 = mux(_io_out_im_rawIn_normDist_T_8, UInt<1>("h1"), _io_out_im_rawIn_normDist_T_16) @[Mux.scala 47:70]
    node io_out_im_rawIn_normDist = mux(_io_out_im_rawIn_normDist_T_9, UInt<1>("h0"), _io_out_im_rawIn_normDist_T_17) @[Mux.scala 47:70]
    node _io_out_im_rawIn_subnormFract_T = dshl(io_out_im_rawIn_fractIn, io_out_im_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _io_out_im_rawIn_subnormFract_T_1 = bits(_io_out_im_rawIn_subnormFract_T, 8, 0) @[rawFloatFromFN.scala 54:47]
    node io_out_im_rawIn_subnormFract = shl(_io_out_im_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _io_out_im_rawIn_adjustedExp_T = xor(io_out_im_rawIn_normDist, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _io_out_im_rawIn_adjustedExp_T_1 = mux(io_out_im_rawIn_isZeroExpIn, _io_out_im_rawIn_adjustedExp_T, io_out_im_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _io_out_im_rawIn_adjustedExp_T_2 = mux(io_out_im_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _io_out_im_rawIn_adjustedExp_T_3 = or(UInt<5>("h10"), _io_out_im_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _io_out_im_rawIn_adjustedExp_T_4 = add(_io_out_im_rawIn_adjustedExp_T_1, _io_out_im_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node io_out_im_rawIn_adjustedExp = tail(_io_out_im_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node io_out_im_rawIn_isZero = and(io_out_im_rawIn_isZeroExpIn, io_out_im_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _io_out_im_rawIn_isSpecial_T = bits(io_out_im_rawIn_adjustedExp, 5, 4) @[rawFloatFromFN.scala 63:37]
    node io_out_im_rawIn_isSpecial = eq(_io_out_im_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire io_out_im_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    io_out_im_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _io_out_im_rawIn_out_isNaN_T = eq(io_out_im_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _io_out_im_rawIn_out_isNaN_T_1 = and(io_out_im_rawIn_isSpecial, _io_out_im_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    io_out_im_rawIn.isNaN <= _io_out_im_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _io_out_im_rawIn_out_isInf_T = and(io_out_im_rawIn_isSpecial, io_out_im_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    io_out_im_rawIn.isInf <= _io_out_im_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    io_out_im_rawIn.isZero <= io_out_im_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    io_out_im_rawIn.sign <= io_out_im_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _io_out_im_rawIn_out_sExp_T = bits(io_out_im_rawIn_adjustedExp, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _io_out_im_rawIn_out_sExp_T_1 = cvt(_io_out_im_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    io_out_im_rawIn.sExp <= _io_out_im_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node _io_out_im_rawIn_out_sig_T = eq(io_out_im_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _io_out_im_rawIn_out_sig_T_1 = mux(io_out_im_rawIn_isZeroExpIn, io_out_im_rawIn_subnormFract, io_out_im_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node io_out_im_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_im_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_im_rawIn_out_sig_T_2 = cat(io_out_im_rawIn_out_sig_hi, _io_out_im_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_im_rawIn.sig <= _io_out_im_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
    node _io_out_im_T = bits(io_out_im_rawIn.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _io_out_im_T_1 = mux(io_out_im_rawIn.isZero, UInt<3>("h0"), _io_out_im_T) @[recFNFromFN.scala 48:16]
    node _io_out_im_T_2 = mux(io_out_im_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _io_out_im_T_3 = or(_io_out_im_T_1, _io_out_im_T_2) @[recFNFromFN.scala 48:79]
    node _io_out_im_T_4 = bits(io_out_im_rawIn.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _io_out_im_T_5 = bits(io_out_im_rawIn.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node io_out_im_lo = cat(_io_out_im_T_4, _io_out_im_T_5) @[Cat.scala 33:92]
    node io_out_im_hi = cat(io_out_im_rawIn.sign, _io_out_im_T_3) @[Cat.scala 33:92]
    node _io_out_im_T_6 = cat(io_out_im_hi, io_out_im_lo) @[Cat.scala 33:92]
    io.out.im <= _io_out_im_T_6 @[Modules.scala 35:13]

  module ComplexDecode :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}, out : { re : UInt<16>, im : UInt<16>}}

    node io_out_re_rawIn_exp = bits(io.in.re, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _io_out_re_rawIn_isZero_T = bits(io_out_re_rawIn_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node io_out_re_rawIn_isZero = eq(_io_out_re_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _io_out_re_rawIn_isSpecial_T = bits(io_out_re_rawIn_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node io_out_re_rawIn_isSpecial = eq(_io_out_re_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire io_out_re_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    io_out_re_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _io_out_re_rawIn_out_isNaN_T = bits(io_out_re_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _io_out_re_rawIn_out_isNaN_T_1 = and(io_out_re_rawIn_isSpecial, _io_out_re_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    io_out_re_rawIn.isNaN <= _io_out_re_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _io_out_re_rawIn_out_isInf_T = bits(io_out_re_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _io_out_re_rawIn_out_isInf_T_1 = eq(_io_out_re_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _io_out_re_rawIn_out_isInf_T_2 = and(io_out_re_rawIn_isSpecial, _io_out_re_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_out_re_rawIn.isInf <= _io_out_re_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    io_out_re_rawIn.isZero <= io_out_re_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _io_out_re_rawIn_out_sign_T = bits(io.in.re, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    io_out_re_rawIn.sign <= _io_out_re_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _io_out_re_rawIn_out_sExp_T = cvt(io_out_re_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    io_out_re_rawIn.sExp <= _io_out_re_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _io_out_re_rawIn_out_sig_T = eq(io_out_re_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _io_out_re_rawIn_out_sig_T_1 = bits(io.in.re, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node io_out_re_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_re_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_re_rawIn_out_sig_T_2 = cat(io_out_re_rawIn_out_sig_hi, _io_out_re_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_re_rawIn.sig <= _io_out_re_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node io_out_re_isSubnormal = lt(io_out_re_rawIn.sExp, asSInt(UInt<6>("h12"))) @[fNFromRecFN.scala 50:39]
    node _io_out_re_denormShiftDist_T = bits(io_out_re_rawIn.sExp, 3, 0) @[fNFromRecFN.scala 51:51]
    node _io_out_re_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_re_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node io_out_re_denormShiftDist = tail(_io_out_re_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _io_out_re_denormFract_T = shr(io_out_re_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _io_out_re_denormFract_T_1 = dshr(_io_out_re_denormFract_T, io_out_re_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node io_out_re_denormFract = bits(_io_out_re_denormFract_T_1, 9, 0) @[fNFromRecFN.scala 52:60]
    node _io_out_re_expOut_T = bits(io_out_re_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 57:27]
    node _io_out_re_expOut_T_1 = sub(_io_out_re_expOut_T, UInt<5>("h11")) @[fNFromRecFN.scala 57:45]
    node _io_out_re_expOut_T_2 = tail(_io_out_re_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _io_out_re_expOut_T_3 = mux(io_out_re_isSubnormal, UInt<1>("h0"), _io_out_re_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _io_out_re_expOut_T_4 = or(io_out_re_rawIn.isNaN, io_out_re_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _io_out_re_expOut_T_5 = bits(_io_out_re_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _io_out_re_expOut_T_6 = mux(_io_out_re_expOut_T_5, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node io_out_re_expOut = or(_io_out_re_expOut_T_3, _io_out_re_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _io_out_re_fractOut_T = bits(io_out_re_rawIn.sig, 9, 0) @[fNFromRecFN.scala 63:52]
    node _io_out_re_fractOut_T_1 = mux(io_out_re_rawIn.isInf, UInt<1>("h0"), _io_out_re_fractOut_T) @[fNFromRecFN.scala 63:20]
    node io_out_re_fractOut = mux(io_out_re_isSubnormal, io_out_re_denormFract, _io_out_re_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node io_out_re_hi = cat(io_out_re_rawIn.sign, io_out_re_expOut) @[Cat.scala 33:92]
    node _io_out_re_T = cat(io_out_re_hi, io_out_re_fractOut) @[Cat.scala 33:92]
    io.out.re <= _io_out_re_T @[Modules.scala 51:13]
    node io_out_im_rawIn_exp = bits(io.in.im, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _io_out_im_rawIn_isZero_T = bits(io_out_im_rawIn_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node io_out_im_rawIn_isZero = eq(_io_out_im_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _io_out_im_rawIn_isSpecial_T = bits(io_out_im_rawIn_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node io_out_im_rawIn_isSpecial = eq(_io_out_im_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire io_out_im_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    io_out_im_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _io_out_im_rawIn_out_isNaN_T = bits(io_out_im_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _io_out_im_rawIn_out_isNaN_T_1 = and(io_out_im_rawIn_isSpecial, _io_out_im_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    io_out_im_rawIn.isNaN <= _io_out_im_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _io_out_im_rawIn_out_isInf_T = bits(io_out_im_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _io_out_im_rawIn_out_isInf_T_1 = eq(_io_out_im_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _io_out_im_rawIn_out_isInf_T_2 = and(io_out_im_rawIn_isSpecial, _io_out_im_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_out_im_rawIn.isInf <= _io_out_im_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    io_out_im_rawIn.isZero <= io_out_im_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _io_out_im_rawIn_out_sign_T = bits(io.in.im, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    io_out_im_rawIn.sign <= _io_out_im_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _io_out_im_rawIn_out_sExp_T = cvt(io_out_im_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    io_out_im_rawIn.sExp <= _io_out_im_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _io_out_im_rawIn_out_sig_T = eq(io_out_im_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _io_out_im_rawIn_out_sig_T_1 = bits(io.in.im, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node io_out_im_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_im_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_im_rawIn_out_sig_T_2 = cat(io_out_im_rawIn_out_sig_hi, _io_out_im_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_im_rawIn.sig <= _io_out_im_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node io_out_im_isSubnormal = lt(io_out_im_rawIn.sExp, asSInt(UInt<6>("h12"))) @[fNFromRecFN.scala 50:39]
    node _io_out_im_denormShiftDist_T = bits(io_out_im_rawIn.sExp, 3, 0) @[fNFromRecFN.scala 51:51]
    node _io_out_im_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_im_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node io_out_im_denormShiftDist = tail(_io_out_im_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _io_out_im_denormFract_T = shr(io_out_im_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _io_out_im_denormFract_T_1 = dshr(_io_out_im_denormFract_T, io_out_im_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node io_out_im_denormFract = bits(_io_out_im_denormFract_T_1, 9, 0) @[fNFromRecFN.scala 52:60]
    node _io_out_im_expOut_T = bits(io_out_im_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 57:27]
    node _io_out_im_expOut_T_1 = sub(_io_out_im_expOut_T, UInt<5>("h11")) @[fNFromRecFN.scala 57:45]
    node _io_out_im_expOut_T_2 = tail(_io_out_im_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _io_out_im_expOut_T_3 = mux(io_out_im_isSubnormal, UInt<1>("h0"), _io_out_im_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _io_out_im_expOut_T_4 = or(io_out_im_rawIn.isNaN, io_out_im_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _io_out_im_expOut_T_5 = bits(_io_out_im_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _io_out_im_expOut_T_6 = mux(_io_out_im_expOut_T_5, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node io_out_im_expOut = or(_io_out_im_expOut_T_3, _io_out_im_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _io_out_im_fractOut_T = bits(io_out_im_rawIn.sig, 9, 0) @[fNFromRecFN.scala 63:52]
    node _io_out_im_fractOut_T_1 = mux(io_out_im_rawIn.isInf, UInt<1>("h0"), _io_out_im_fractOut_T) @[fNFromRecFN.scala 63:20]
    node io_out_im_fractOut = mux(io_out_im_isSubnormal, io_out_im_denormFract, _io_out_im_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node io_out_im_hi = cat(io_out_im_rawIn.sign, io_out_im_expOut) @[Cat.scala 33:92]
    node _io_out_im_T = cat(io_out_im_hi, io_out_im_fractOut) @[Cat.scala 33:92]
    io.out.im <= _io_out_im_T @[Modules.scala 52:13]

  module ComplexDecode_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { re : UInt<17>, im : UInt<17>}, out : { re : UInt<16>, im : UInt<16>}}

    node io_out_re_rawIn_exp = bits(io.in.re, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _io_out_re_rawIn_isZero_T = bits(io_out_re_rawIn_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node io_out_re_rawIn_isZero = eq(_io_out_re_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _io_out_re_rawIn_isSpecial_T = bits(io_out_re_rawIn_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node io_out_re_rawIn_isSpecial = eq(_io_out_re_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire io_out_re_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    io_out_re_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _io_out_re_rawIn_out_isNaN_T = bits(io_out_re_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _io_out_re_rawIn_out_isNaN_T_1 = and(io_out_re_rawIn_isSpecial, _io_out_re_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    io_out_re_rawIn.isNaN <= _io_out_re_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _io_out_re_rawIn_out_isInf_T = bits(io_out_re_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _io_out_re_rawIn_out_isInf_T_1 = eq(_io_out_re_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _io_out_re_rawIn_out_isInf_T_2 = and(io_out_re_rawIn_isSpecial, _io_out_re_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_out_re_rawIn.isInf <= _io_out_re_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    io_out_re_rawIn.isZero <= io_out_re_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _io_out_re_rawIn_out_sign_T = bits(io.in.re, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    io_out_re_rawIn.sign <= _io_out_re_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _io_out_re_rawIn_out_sExp_T = cvt(io_out_re_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    io_out_re_rawIn.sExp <= _io_out_re_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _io_out_re_rawIn_out_sig_T = eq(io_out_re_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _io_out_re_rawIn_out_sig_T_1 = bits(io.in.re, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node io_out_re_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_re_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_re_rawIn_out_sig_T_2 = cat(io_out_re_rawIn_out_sig_hi, _io_out_re_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_re_rawIn.sig <= _io_out_re_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node io_out_re_isSubnormal = lt(io_out_re_rawIn.sExp, asSInt(UInt<6>("h12"))) @[fNFromRecFN.scala 50:39]
    node _io_out_re_denormShiftDist_T = bits(io_out_re_rawIn.sExp, 3, 0) @[fNFromRecFN.scala 51:51]
    node _io_out_re_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_re_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node io_out_re_denormShiftDist = tail(_io_out_re_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _io_out_re_denormFract_T = shr(io_out_re_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _io_out_re_denormFract_T_1 = dshr(_io_out_re_denormFract_T, io_out_re_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node io_out_re_denormFract = bits(_io_out_re_denormFract_T_1, 9, 0) @[fNFromRecFN.scala 52:60]
    node _io_out_re_expOut_T = bits(io_out_re_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 57:27]
    node _io_out_re_expOut_T_1 = sub(_io_out_re_expOut_T, UInt<5>("h11")) @[fNFromRecFN.scala 57:45]
    node _io_out_re_expOut_T_2 = tail(_io_out_re_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _io_out_re_expOut_T_3 = mux(io_out_re_isSubnormal, UInt<1>("h0"), _io_out_re_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _io_out_re_expOut_T_4 = or(io_out_re_rawIn.isNaN, io_out_re_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _io_out_re_expOut_T_5 = bits(_io_out_re_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _io_out_re_expOut_T_6 = mux(_io_out_re_expOut_T_5, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node io_out_re_expOut = or(_io_out_re_expOut_T_3, _io_out_re_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _io_out_re_fractOut_T = bits(io_out_re_rawIn.sig, 9, 0) @[fNFromRecFN.scala 63:52]
    node _io_out_re_fractOut_T_1 = mux(io_out_re_rawIn.isInf, UInt<1>("h0"), _io_out_re_fractOut_T) @[fNFromRecFN.scala 63:20]
    node io_out_re_fractOut = mux(io_out_re_isSubnormal, io_out_re_denormFract, _io_out_re_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node io_out_re_hi = cat(io_out_re_rawIn.sign, io_out_re_expOut) @[Cat.scala 33:92]
    node _io_out_re_T = cat(io_out_re_hi, io_out_re_fractOut) @[Cat.scala 33:92]
    io.out.re <= _io_out_re_T @[Modules.scala 51:13]
    node io_out_im_rawIn_exp = bits(io.in.im, 15, 10) @[rawFloatFromRecFN.scala 50:21]
    node _io_out_im_rawIn_isZero_T = bits(io_out_im_rawIn_exp, 5, 3) @[rawFloatFromRecFN.scala 51:29]
    node io_out_im_rawIn_isZero = eq(_io_out_im_rawIn_isZero_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _io_out_im_rawIn_isSpecial_T = bits(io_out_im_rawIn_exp, 5, 4) @[rawFloatFromRecFN.scala 52:29]
    node io_out_im_rawIn_isSpecial = eq(_io_out_im_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    wire io_out_im_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromRecFN.scala 54:23]
    io_out_im_rawIn is invalid @[rawFloatFromRecFN.scala 54:23]
    node _io_out_im_rawIn_out_isNaN_T = bits(io_out_im_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 55:41]
    node _io_out_im_rawIn_out_isNaN_T_1 = and(io_out_im_rawIn_isSpecial, _io_out_im_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    io_out_im_rawIn.isNaN <= _io_out_im_rawIn_out_isNaN_T_1 @[rawFloatFromRecFN.scala 55:20]
    node _io_out_im_rawIn_out_isInf_T = bits(io_out_im_rawIn_exp, 3, 3) @[rawFloatFromRecFN.scala 56:41]
    node _io_out_im_rawIn_out_isInf_T_1 = eq(_io_out_im_rawIn_out_isInf_T, UInt<1>("h0")) @[rawFloatFromRecFN.scala 56:36]
    node _io_out_im_rawIn_out_isInf_T_2 = and(io_out_im_rawIn_isSpecial, _io_out_im_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_out_im_rawIn.isInf <= _io_out_im_rawIn_out_isInf_T_2 @[rawFloatFromRecFN.scala 56:20]
    io_out_im_rawIn.isZero <= io_out_im_rawIn_isZero @[rawFloatFromRecFN.scala 57:20]
    node _io_out_im_rawIn_out_sign_T = bits(io.in.im, 16, 16) @[rawFloatFromRecFN.scala 58:25]
    io_out_im_rawIn.sign <= _io_out_im_rawIn_out_sign_T @[rawFloatFromRecFN.scala 58:20]
    node _io_out_im_rawIn_out_sExp_T = cvt(io_out_im_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    io_out_im_rawIn.sExp <= _io_out_im_rawIn_out_sExp_T @[rawFloatFromRecFN.scala 59:20]
    node _io_out_im_rawIn_out_sig_T = eq(io_out_im_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromRecFN.scala 60:39]
    node _io_out_im_rawIn_out_sig_T_1 = bits(io.in.im, 9, 0) @[rawFloatFromRecFN.scala 60:51]
    node io_out_im_rawIn_out_sig_hi = cat(UInt<1>("h0"), _io_out_im_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _io_out_im_rawIn_out_sig_T_2 = cat(io_out_im_rawIn_out_sig_hi, _io_out_im_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    io_out_im_rawIn.sig <= _io_out_im_rawIn_out_sig_T_2 @[rawFloatFromRecFN.scala 60:20]
    node io_out_im_isSubnormal = lt(io_out_im_rawIn.sExp, asSInt(UInt<6>("h12"))) @[fNFromRecFN.scala 50:39]
    node _io_out_im_denormShiftDist_T = bits(io_out_im_rawIn.sExp, 3, 0) @[fNFromRecFN.scala 51:51]
    node _io_out_im_denormShiftDist_T_1 = sub(UInt<1>("h1"), _io_out_im_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node io_out_im_denormShiftDist = tail(_io_out_im_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    node _io_out_im_denormFract_T = shr(io_out_im_rawIn.sig, 1) @[fNFromRecFN.scala 52:38]
    node _io_out_im_denormFract_T_1 = dshr(_io_out_im_denormFract_T, io_out_im_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node io_out_im_denormFract = bits(_io_out_im_denormFract_T_1, 9, 0) @[fNFromRecFN.scala 52:60]
    node _io_out_im_expOut_T = bits(io_out_im_rawIn.sExp, 4, 0) @[fNFromRecFN.scala 57:27]
    node _io_out_im_expOut_T_1 = sub(_io_out_im_expOut_T, UInt<5>("h11")) @[fNFromRecFN.scala 57:45]
    node _io_out_im_expOut_T_2 = tail(_io_out_im_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _io_out_im_expOut_T_3 = mux(io_out_im_isSubnormal, UInt<1>("h0"), _io_out_im_expOut_T_2) @[fNFromRecFN.scala 55:16]
    node _io_out_im_expOut_T_4 = or(io_out_im_rawIn.isNaN, io_out_im_rawIn.isInf) @[fNFromRecFN.scala 59:44]
    node _io_out_im_expOut_T_5 = bits(_io_out_im_expOut_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _io_out_im_expOut_T_6 = mux(_io_out_im_expOut_T_5, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node io_out_im_expOut = or(_io_out_im_expOut_T_3, _io_out_im_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _io_out_im_fractOut_T = bits(io_out_im_rawIn.sig, 9, 0) @[fNFromRecFN.scala 63:52]
    node _io_out_im_fractOut_T_1 = mux(io_out_im_rawIn.isInf, UInt<1>("h0"), _io_out_im_fractOut_T) @[fNFromRecFN.scala 63:20]
    node io_out_im_fractOut = mux(io_out_im_isSubnormal, io_out_im_denormFract, _io_out_im_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    node io_out_im_hi = cat(io_out_im_rawIn.sign, io_out_im_expOut) @[Cat.scala 33:92]
    node _io_out_im_T = cat(io_out_im_hi, io_out_im_fractOut) @[Cat.scala 33:92]
    io.out.im <= _io_out_im_T @[Modules.scala 52:13]

  module FFT :
    input clock : Clock
    input reset : Reset
    output io : { flip dIn : { re : UInt<16>, im : UInt<16>}[2], dOut : { re : UInt<16>, im : UInt<16>}[2], flip din_valid : UInt<1>, dout_valid : UInt<1>, busy : UInt<1>}

    reg cnt_0 : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[FFT.scala 110:46]
    node busy = neq(cnt_0, UInt<1>("h0")) @[FFT.scala 114:21]
    node _T = or(io.din_valid, busy) @[FFT.scala 115:21]
    when _T : @[FFT.scala 115:30]
      node _cnt_0_T = eq(cnt_0, UInt<6>("h3f")) @[FFT.scala 116:26]
      node _cnt_0_T_1 = add(cnt_0, UInt<1>("h1")) @[FFT.scala 116:87]
      node _cnt_0_T_2 = tail(_cnt_0_T_1, 1) @[FFT.scala 116:87]
      node _cnt_0_T_3 = mux(_cnt_0_T, UInt<1>("h0"), _cnt_0_T_2) @[FFT.scala 116:18]
      cnt_0 <= _cnt_0_T_3 @[FFT.scala 116:12]
    wire _data1_WIRE : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_1 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_1 <= _data1_T @[FFT.scala 122:113]
    node _data1_T_1 = bits(_data1_WIRE_1, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE.im <= _data1_T_1 @[FFT.scala 122:113]
    node _data1_T_2 = bits(_data1_WIRE_1, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE.re <= _data1_T_2 @[FFT.scala 122:113]
    wire _data1_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_3 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_3 <= _data1_T_3 @[FFT.scala 122:113]
    node _data1_T_4 = bits(_data1_WIRE_3, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_2.im <= _data1_T_4 @[FFT.scala 122:113]
    node _data1_T_5 = bits(_data1_WIRE_3, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_2.re <= _data1_T_5 @[FFT.scala 122:113]
    wire data1_0_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 122:65]
    data1_0_0[0] <= _data1_WIRE @[FFT.scala 122:65]
    data1_0_0[1] <= _data1_WIRE_2 @[FFT.scala 122:65]
    wire _data1_WIRE_4 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_6 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_5 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_5 <= _data1_T_6 @[FFT.scala 122:113]
    node _data1_T_7 = bits(_data1_WIRE_5, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_4.im <= _data1_T_7 @[FFT.scala 122:113]
    node _data1_T_8 = bits(_data1_WIRE_5, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_4.re <= _data1_T_8 @[FFT.scala 122:113]
    wire _data1_WIRE_6 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_9 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_7 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_7 <= _data1_T_9 @[FFT.scala 122:113]
    node _data1_T_10 = bits(_data1_WIRE_7, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_6.im <= _data1_T_10 @[FFT.scala 122:113]
    node _data1_T_11 = bits(_data1_WIRE_7, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_6.re <= _data1_T_11 @[FFT.scala 122:113]
    wire data1_1_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 122:65]
    data1_1_0[0] <= _data1_WIRE_4 @[FFT.scala 122:65]
    data1_1_0[1] <= _data1_WIRE_6 @[FFT.scala 122:65]
    wire _data1_WIRE_8 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_12 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_9 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_9 <= _data1_T_12 @[FFT.scala 122:113]
    node _data1_T_13 = bits(_data1_WIRE_9, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_8.im <= _data1_T_13 @[FFT.scala 122:113]
    node _data1_T_14 = bits(_data1_WIRE_9, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_8.re <= _data1_T_14 @[FFT.scala 122:113]
    wire _data1_WIRE_10 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_15 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_11 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_11 <= _data1_T_15 @[FFT.scala 122:113]
    node _data1_T_16 = bits(_data1_WIRE_11, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_10.im <= _data1_T_16 @[FFT.scala 122:113]
    node _data1_T_17 = bits(_data1_WIRE_11, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_10.re <= _data1_T_17 @[FFT.scala 122:113]
    wire data1_2_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 122:65]
    data1_2_0[0] <= _data1_WIRE_8 @[FFT.scala 122:65]
    data1_2_0[1] <= _data1_WIRE_10 @[FFT.scala 122:65]
    wire _data1_WIRE_12 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_18 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_13 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_13 <= _data1_T_18 @[FFT.scala 122:113]
    node _data1_T_19 = bits(_data1_WIRE_13, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_12.im <= _data1_T_19 @[FFT.scala 122:113]
    node _data1_T_20 = bits(_data1_WIRE_13, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_12.re <= _data1_T_20 @[FFT.scala 122:113]
    wire _data1_WIRE_14 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_21 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_15 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_15 <= _data1_T_21 @[FFT.scala 122:113]
    node _data1_T_22 = bits(_data1_WIRE_15, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_14.im <= _data1_T_22 @[FFT.scala 122:113]
    node _data1_T_23 = bits(_data1_WIRE_15, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_14.re <= _data1_T_23 @[FFT.scala 122:113]
    wire data1_3_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 122:65]
    data1_3_0[0] <= _data1_WIRE_12 @[FFT.scala 122:65]
    data1_3_0[1] <= _data1_WIRE_14 @[FFT.scala 122:65]
    wire _data1_WIRE_16 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_24 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_17 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_17 <= _data1_T_24 @[FFT.scala 122:113]
    node _data1_T_25 = bits(_data1_WIRE_17, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_16.im <= _data1_T_25 @[FFT.scala 122:113]
    node _data1_T_26 = bits(_data1_WIRE_17, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_16.re <= _data1_T_26 @[FFT.scala 122:113]
    wire _data1_WIRE_18 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_27 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_19 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_19 <= _data1_T_27 @[FFT.scala 122:113]
    node _data1_T_28 = bits(_data1_WIRE_19, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_18.im <= _data1_T_28 @[FFT.scala 122:113]
    node _data1_T_29 = bits(_data1_WIRE_19, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_18.re <= _data1_T_29 @[FFT.scala 122:113]
    wire data1_4_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 122:65]
    data1_4_0[0] <= _data1_WIRE_16 @[FFT.scala 122:65]
    data1_4_0[1] <= _data1_WIRE_18 @[FFT.scala 122:65]
    wire _data1_WIRE_20 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_30 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_21 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_21 <= _data1_T_30 @[FFT.scala 122:113]
    node _data1_T_31 = bits(_data1_WIRE_21, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_20.im <= _data1_T_31 @[FFT.scala 122:113]
    node _data1_T_32 = bits(_data1_WIRE_21, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_20.re <= _data1_T_32 @[FFT.scala 122:113]
    wire _data1_WIRE_22 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 122:113]
    node _data1_T_33 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 122:113]
    wire _data1_WIRE_23 : UInt<34> @[FFT.scala 122:113]
    _data1_WIRE_23 <= _data1_T_33 @[FFT.scala 122:113]
    node _data1_T_34 = bits(_data1_WIRE_23, 16, 0) @[FFT.scala 122:113]
    _data1_WIRE_22.im <= _data1_T_34 @[FFT.scala 122:113]
    node _data1_T_35 = bits(_data1_WIRE_23, 33, 17) @[FFT.scala 122:113]
    _data1_WIRE_22.re <= _data1_T_35 @[FFT.scala 122:113]
    wire data1_5_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 122:65]
    data1_5_0[0] <= _data1_WIRE_20 @[FFT.scala 122:65]
    data1_5_0[1] <= _data1_WIRE_22 @[FFT.scala 122:65]
    wire _data2_WIRE : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_1 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_1 <= _data2_T @[FFT.scala 123:117]
    node _data2_T_1 = bits(_data2_WIRE_1, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE.im <= _data2_T_1 @[FFT.scala 123:117]
    node _data2_T_2 = bits(_data2_WIRE_1, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE.re <= _data2_T_2 @[FFT.scala 123:117]
    wire _data2_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_3 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_3 <= _data2_T_3 @[FFT.scala 123:117]
    node _data2_T_4 = bits(_data2_WIRE_3, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_2.im <= _data2_T_4 @[FFT.scala 123:117]
    node _data2_T_5 = bits(_data2_WIRE_3, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_2.re <= _data2_T_5 @[FFT.scala 123:117]
    wire data2_0_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 123:69]
    data2_0_0[0] <= _data2_WIRE @[FFT.scala 123:69]
    data2_0_0[1] <= _data2_WIRE_2 @[FFT.scala 123:69]
    wire _data2_WIRE_4 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_6 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_5 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_5 <= _data2_T_6 @[FFT.scala 123:117]
    node _data2_T_7 = bits(_data2_WIRE_5, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_4.im <= _data2_T_7 @[FFT.scala 123:117]
    node _data2_T_8 = bits(_data2_WIRE_5, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_4.re <= _data2_T_8 @[FFT.scala 123:117]
    wire _data2_WIRE_6 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_9 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_7 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_7 <= _data2_T_9 @[FFT.scala 123:117]
    node _data2_T_10 = bits(_data2_WIRE_7, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_6.im <= _data2_T_10 @[FFT.scala 123:117]
    node _data2_T_11 = bits(_data2_WIRE_7, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_6.re <= _data2_T_11 @[FFT.scala 123:117]
    wire data2_1_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 123:69]
    data2_1_0[0] <= _data2_WIRE_4 @[FFT.scala 123:69]
    data2_1_0[1] <= _data2_WIRE_6 @[FFT.scala 123:69]
    wire _data2_WIRE_8 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_12 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_9 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_9 <= _data2_T_12 @[FFT.scala 123:117]
    node _data2_T_13 = bits(_data2_WIRE_9, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_8.im <= _data2_T_13 @[FFT.scala 123:117]
    node _data2_T_14 = bits(_data2_WIRE_9, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_8.re <= _data2_T_14 @[FFT.scala 123:117]
    wire _data2_WIRE_10 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_15 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_11 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_11 <= _data2_T_15 @[FFT.scala 123:117]
    node _data2_T_16 = bits(_data2_WIRE_11, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_10.im <= _data2_T_16 @[FFT.scala 123:117]
    node _data2_T_17 = bits(_data2_WIRE_11, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_10.re <= _data2_T_17 @[FFT.scala 123:117]
    wire data2_2_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 123:69]
    data2_2_0[0] <= _data2_WIRE_8 @[FFT.scala 123:69]
    data2_2_0[1] <= _data2_WIRE_10 @[FFT.scala 123:69]
    wire _data2_WIRE_12 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_18 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_13 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_13 <= _data2_T_18 @[FFT.scala 123:117]
    node _data2_T_19 = bits(_data2_WIRE_13, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_12.im <= _data2_T_19 @[FFT.scala 123:117]
    node _data2_T_20 = bits(_data2_WIRE_13, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_12.re <= _data2_T_20 @[FFT.scala 123:117]
    wire _data2_WIRE_14 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_21 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_15 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_15 <= _data2_T_21 @[FFT.scala 123:117]
    node _data2_T_22 = bits(_data2_WIRE_15, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_14.im <= _data2_T_22 @[FFT.scala 123:117]
    node _data2_T_23 = bits(_data2_WIRE_15, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_14.re <= _data2_T_23 @[FFT.scala 123:117]
    wire data2_3_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 123:69]
    data2_3_0[0] <= _data2_WIRE_12 @[FFT.scala 123:69]
    data2_3_0[1] <= _data2_WIRE_14 @[FFT.scala 123:69]
    wire _data2_WIRE_16 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_24 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_17 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_17 <= _data2_T_24 @[FFT.scala 123:117]
    node _data2_T_25 = bits(_data2_WIRE_17, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_16.im <= _data2_T_25 @[FFT.scala 123:117]
    node _data2_T_26 = bits(_data2_WIRE_17, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_16.re <= _data2_T_26 @[FFT.scala 123:117]
    wire _data2_WIRE_18 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 123:117]
    node _data2_T_27 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 123:117]
    wire _data2_WIRE_19 : UInt<34> @[FFT.scala 123:117]
    _data2_WIRE_19 <= _data2_T_27 @[FFT.scala 123:117]
    node _data2_T_28 = bits(_data2_WIRE_19, 16, 0) @[FFT.scala 123:117]
    _data2_WIRE_18.im <= _data2_T_28 @[FFT.scala 123:117]
    node _data2_T_29 = bits(_data2_WIRE_19, 33, 17) @[FFT.scala 123:117]
    _data2_WIRE_18.re <= _data2_T_29 @[FFT.scala 123:117]
    wire data2_4_0 : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 123:69]
    data2_4_0[0] <= _data2_WIRE_16 @[FFT.scala 123:69]
    data2_4_0[1] <= _data2_WIRE_18 @[FFT.scala 123:69]
    wire _datao_WIRE : { re : UInt<17>, im : UInt<17>} @[FFT.scala 124:86]
    node _datao_T = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 124:86]
    wire _datao_WIRE_1 : UInt<34> @[FFT.scala 124:86]
    _datao_WIRE_1 <= _datao_T @[FFT.scala 124:86]
    node _datao_T_1 = bits(_datao_WIRE_1, 16, 0) @[FFT.scala 124:86]
    _datao_WIRE.im <= _datao_T_1 @[FFT.scala 124:86]
    node _datao_T_2 = bits(_datao_WIRE_1, 33, 17) @[FFT.scala 124:86]
    _datao_WIRE.re <= _datao_T_2 @[FFT.scala 124:86]
    wire _datao_WIRE_2 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 124:86]
    node _datao_T_3 = asUInt(asSInt(UInt<34>("h0"))) @[FFT.scala 124:86]
    wire _datao_WIRE_3 : UInt<34> @[FFT.scala 124:86]
    _datao_WIRE_3 <= _datao_T_3 @[FFT.scala 124:86]
    node _datao_T_4 = bits(_datao_WIRE_3, 16, 0) @[FFT.scala 124:86]
    _datao_WIRE_2.im <= _datao_T_4 @[FFT.scala 124:86]
    node _datao_T_5 = bits(_datao_WIRE_3, 33, 17) @[FFT.scala 124:86]
    _datao_WIRE_2.re <= _datao_T_5 @[FFT.scala 124:86]
    wire datao : { re : UInt<17>, im : UInt<17>}[2] @[FFT.scala 124:22]
    datao[0] <= _datao_WIRE @[FFT.scala 124:22]
    datao[1] <= _datao_WIRE_2 @[FFT.scala 124:22]
    node wnCtrl = bits(cnt_0, 4, 0) @[FFT.scala 131:23]
    node _wnList_T = add(UInt<1>("h0"), wnCtrl) @[FFT.scala 135:96]
    node _wnList_T_1 = tail(_wnList_T, 1) @[FFT.scala 135:96]
    wire wnList_0 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 103:19]
    node _wnList_res_re_T = asUInt(asSInt(UInt<16>("h3c00"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign = bits(_wnList_res_re_T, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn = bits(_wnList_res_re_T, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn = bits(_wnList_res_re_T, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn = eq(wnList_res_re_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn = eq(wnList_res_re_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T = bits(wnList_res_re_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1 = bits(wnList_res_re_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_2 = bits(wnList_res_re_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_3 = bits(wnList_res_re_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_4 = bits(wnList_res_re_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_5 = bits(wnList_res_re_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_6 = bits(wnList_res_re_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_7 = bits(wnList_res_re_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_8 = bits(wnList_res_re_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_9 = bits(wnList_res_re_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_10 = mux(_wnList_res_re_rawIn_normDist_T_1, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_11 = mux(_wnList_res_re_rawIn_normDist_T_2, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_10) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_12 = mux(_wnList_res_re_rawIn_normDist_T_3, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_11) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_13 = mux(_wnList_res_re_rawIn_normDist_T_4, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_12) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_14 = mux(_wnList_res_re_rawIn_normDist_T_5, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_13) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_15 = mux(_wnList_res_re_rawIn_normDist_T_6, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_14) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_16 = mux(_wnList_res_re_rawIn_normDist_T_7, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_15) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_17 = mux(_wnList_res_re_rawIn_normDist_T_8, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_16) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist = mux(_wnList_res_re_rawIn_normDist_T_9, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_17) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T = dshl(wnList_res_re_rawIn_fractIn, wnList_res_re_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_1 = bits(_wnList_res_re_rawIn_subnormFract_T, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract = shl(_wnList_res_re_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T = xor(wnList_res_re_rawIn_normDist, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_1 = mux(wnList_res_re_rawIn_isZeroExpIn, _wnList_res_re_rawIn_adjustedExp_T, wnList_res_re_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_2 = mux(wnList_res_re_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_3 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_4 = add(_wnList_res_re_rawIn_adjustedExp_T_1, _wnList_res_re_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp = tail(_wnList_res_re_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero = and(wnList_res_re_rawIn_isZeroExpIn, wnList_res_re_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T = bits(wnList_res_re_rawIn_adjustedExp, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial = eq(_wnList_res_re_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T = eq(wnList_res_re_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_1 = and(wnList_res_re_rawIn_isSpecial, _wnList_res_re_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T = and(wnList_res_re_rawIn_isSpecial, wnList_res_re_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn.isInf <= _wnList_res_re_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn.isZero <= wnList_res_re_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn.sign <= wnList_res_re_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T = bits(wnList_res_re_rawIn_adjustedExp, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_1 = cvt(_wnList_res_re_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn.sExp <= _wnList_res_re_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T = eq(wnList_res_re_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_1 = mux(wnList_res_re_rawIn_isZeroExpIn, wnList_res_re_rawIn_subnormFract, wnList_res_re_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_2 = cat(wnList_res_re_rawIn_out_sig_hi, _wnList_res_re_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    wnList_res_re_rawIn.sig <= _wnList_res_re_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_1 = bits(wnList_res_re_rawIn.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_2 = mux(wnList_res_re_rawIn.isZero, UInt<3>("h0"), _wnList_res_re_T_1) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_3 = mux(wnList_res_re_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_4 = or(_wnList_res_re_T_2, _wnList_res_re_T_3) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_5 = bits(wnList_res_re_rawIn.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_6 = bits(wnList_res_re_rawIn.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo = cat(_wnList_res_re_T_5, _wnList_res_re_T_6) @[Cat.scala 33:92]
    node wnList_res_re_hi = cat(wnList_res_re_rawIn.sign, _wnList_res_re_T_4) @[Cat.scala 33:92]
    node _wnList_res_re_T_7 = cat(wnList_res_re_hi, wnList_res_re_lo) @[Cat.scala 33:92]
    node _wnList_res_re_T_8 = asUInt(asSInt(UInt<16>("h3bf6"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_1 = bits(_wnList_res_re_T_8, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_1 = bits(_wnList_res_re_T_8, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_1 = bits(_wnList_res_re_T_8, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_1 = eq(wnList_res_re_rawIn_expIn_1, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_1 = eq(wnList_res_re_rawIn_fractIn_1, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_18 = bits(wnList_res_re_rawIn_fractIn_1, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_19 = bits(wnList_res_re_rawIn_fractIn_1, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_20 = bits(wnList_res_re_rawIn_fractIn_1, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_21 = bits(wnList_res_re_rawIn_fractIn_1, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_22 = bits(wnList_res_re_rawIn_fractIn_1, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_23 = bits(wnList_res_re_rawIn_fractIn_1, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_24 = bits(wnList_res_re_rawIn_fractIn_1, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_25 = bits(wnList_res_re_rawIn_fractIn_1, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_26 = bits(wnList_res_re_rawIn_fractIn_1, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_27 = bits(wnList_res_re_rawIn_fractIn_1, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_28 = mux(_wnList_res_re_rawIn_normDist_T_19, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_29 = mux(_wnList_res_re_rawIn_normDist_T_20, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_28) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_30 = mux(_wnList_res_re_rawIn_normDist_T_21, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_29) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_31 = mux(_wnList_res_re_rawIn_normDist_T_22, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_30) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_32 = mux(_wnList_res_re_rawIn_normDist_T_23, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_31) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_33 = mux(_wnList_res_re_rawIn_normDist_T_24, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_32) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_34 = mux(_wnList_res_re_rawIn_normDist_T_25, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_33) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_35 = mux(_wnList_res_re_rawIn_normDist_T_26, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_34) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_1 = mux(_wnList_res_re_rawIn_normDist_T_27, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_35) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_2 = dshl(wnList_res_re_rawIn_fractIn_1, wnList_res_re_rawIn_normDist_1) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_3 = bits(_wnList_res_re_rawIn_subnormFract_T_2, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_1 = shl(_wnList_res_re_rawIn_subnormFract_T_3, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_5 = xor(wnList_res_re_rawIn_normDist_1, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_6 = mux(wnList_res_re_rawIn_isZeroExpIn_1, _wnList_res_re_rawIn_adjustedExp_T_5, wnList_res_re_rawIn_expIn_1) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_7 = mux(wnList_res_re_rawIn_isZeroExpIn_1, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_8 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_7) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_9 = add(_wnList_res_re_rawIn_adjustedExp_T_6, _wnList_res_re_rawIn_adjustedExp_T_8) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_1 = tail(_wnList_res_re_rawIn_adjustedExp_T_9, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_1 = and(wnList_res_re_rawIn_isZeroExpIn_1, wnList_res_re_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_1 = bits(wnList_res_re_rawIn_adjustedExp_1, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_1 = eq(_wnList_res_re_rawIn_isSpecial_T_1, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_1 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_2 = eq(wnList_res_re_rawIn_isZeroFractIn_1, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_3 = and(wnList_res_re_rawIn_isSpecial_1, _wnList_res_re_rawIn_out_isNaN_T_2) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_1.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_3 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_1 = and(wnList_res_re_rawIn_isSpecial_1, wnList_res_re_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_1.isInf <= _wnList_res_re_rawIn_out_isInf_T_1 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_1.isZero <= wnList_res_re_rawIn_isZero_1 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_1.sign <= wnList_res_re_rawIn_sign_1 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_2 = bits(wnList_res_re_rawIn_adjustedExp_1, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_3 = cvt(_wnList_res_re_rawIn_out_sExp_T_2) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_1.sExp <= _wnList_res_re_rawIn_out_sExp_T_3 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_3 = eq(wnList_res_re_rawIn_isZero_1, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_4 = mux(wnList_res_re_rawIn_isZeroExpIn_1, wnList_res_re_rawIn_subnormFract_1, wnList_res_re_rawIn_fractIn_1) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_1 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_3) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_5 = cat(wnList_res_re_rawIn_out_sig_hi_1, _wnList_res_re_rawIn_out_sig_T_4) @[Cat.scala 33:92]
    wnList_res_re_rawIn_1.sig <= _wnList_res_re_rawIn_out_sig_T_5 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_9 = bits(wnList_res_re_rawIn_1.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_10 = mux(wnList_res_re_rawIn_1.isZero, UInt<3>("h0"), _wnList_res_re_T_9) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_11 = mux(wnList_res_re_rawIn_1.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_12 = or(_wnList_res_re_T_10, _wnList_res_re_T_11) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_13 = bits(wnList_res_re_rawIn_1.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_14 = bits(wnList_res_re_rawIn_1.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_1 = cat(_wnList_res_re_T_13, _wnList_res_re_T_14) @[Cat.scala 33:92]
    node wnList_res_re_hi_1 = cat(wnList_res_re_rawIn_1.sign, _wnList_res_re_T_12) @[Cat.scala 33:92]
    node _wnList_res_re_T_15 = cat(wnList_res_re_hi_1, wnList_res_re_lo_1) @[Cat.scala 33:92]
    node _wnList_res_re_T_16 = asUInt(asSInt(UInt<16>("h3bd8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_2 = bits(_wnList_res_re_T_16, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_2 = bits(_wnList_res_re_T_16, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_2 = bits(_wnList_res_re_T_16, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_2 = eq(wnList_res_re_rawIn_expIn_2, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_2 = eq(wnList_res_re_rawIn_fractIn_2, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_36 = bits(wnList_res_re_rawIn_fractIn_2, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_37 = bits(wnList_res_re_rawIn_fractIn_2, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_38 = bits(wnList_res_re_rawIn_fractIn_2, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_39 = bits(wnList_res_re_rawIn_fractIn_2, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_40 = bits(wnList_res_re_rawIn_fractIn_2, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_41 = bits(wnList_res_re_rawIn_fractIn_2, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_42 = bits(wnList_res_re_rawIn_fractIn_2, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_43 = bits(wnList_res_re_rawIn_fractIn_2, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_44 = bits(wnList_res_re_rawIn_fractIn_2, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_45 = bits(wnList_res_re_rawIn_fractIn_2, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_46 = mux(_wnList_res_re_rawIn_normDist_T_37, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_47 = mux(_wnList_res_re_rawIn_normDist_T_38, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_46) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_48 = mux(_wnList_res_re_rawIn_normDist_T_39, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_47) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_49 = mux(_wnList_res_re_rawIn_normDist_T_40, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_48) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_50 = mux(_wnList_res_re_rawIn_normDist_T_41, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_49) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_51 = mux(_wnList_res_re_rawIn_normDist_T_42, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_50) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_52 = mux(_wnList_res_re_rawIn_normDist_T_43, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_51) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_53 = mux(_wnList_res_re_rawIn_normDist_T_44, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_52) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_2 = mux(_wnList_res_re_rawIn_normDist_T_45, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_53) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_4 = dshl(wnList_res_re_rawIn_fractIn_2, wnList_res_re_rawIn_normDist_2) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_5 = bits(_wnList_res_re_rawIn_subnormFract_T_4, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_2 = shl(_wnList_res_re_rawIn_subnormFract_T_5, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_10 = xor(wnList_res_re_rawIn_normDist_2, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_11 = mux(wnList_res_re_rawIn_isZeroExpIn_2, _wnList_res_re_rawIn_adjustedExp_T_10, wnList_res_re_rawIn_expIn_2) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_12 = mux(wnList_res_re_rawIn_isZeroExpIn_2, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_13 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_12) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_14 = add(_wnList_res_re_rawIn_adjustedExp_T_11, _wnList_res_re_rawIn_adjustedExp_T_13) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_2 = tail(_wnList_res_re_rawIn_adjustedExp_T_14, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_2 = and(wnList_res_re_rawIn_isZeroExpIn_2, wnList_res_re_rawIn_isZeroFractIn_2) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_2 = bits(wnList_res_re_rawIn_adjustedExp_2, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_2 = eq(_wnList_res_re_rawIn_isSpecial_T_2, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_2 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_4 = eq(wnList_res_re_rawIn_isZeroFractIn_2, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_5 = and(wnList_res_re_rawIn_isSpecial_2, _wnList_res_re_rawIn_out_isNaN_T_4) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_2.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_5 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_2 = and(wnList_res_re_rawIn_isSpecial_2, wnList_res_re_rawIn_isZeroFractIn_2) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_2.isInf <= _wnList_res_re_rawIn_out_isInf_T_2 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_2.isZero <= wnList_res_re_rawIn_isZero_2 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_2.sign <= wnList_res_re_rawIn_sign_2 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_4 = bits(wnList_res_re_rawIn_adjustedExp_2, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_5 = cvt(_wnList_res_re_rawIn_out_sExp_T_4) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_2.sExp <= _wnList_res_re_rawIn_out_sExp_T_5 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_6 = eq(wnList_res_re_rawIn_isZero_2, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_7 = mux(wnList_res_re_rawIn_isZeroExpIn_2, wnList_res_re_rawIn_subnormFract_2, wnList_res_re_rawIn_fractIn_2) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_2 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_6) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_8 = cat(wnList_res_re_rawIn_out_sig_hi_2, _wnList_res_re_rawIn_out_sig_T_7) @[Cat.scala 33:92]
    wnList_res_re_rawIn_2.sig <= _wnList_res_re_rawIn_out_sig_T_8 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_17 = bits(wnList_res_re_rawIn_2.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_18 = mux(wnList_res_re_rawIn_2.isZero, UInt<3>("h0"), _wnList_res_re_T_17) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_19 = mux(wnList_res_re_rawIn_2.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_20 = or(_wnList_res_re_T_18, _wnList_res_re_T_19) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_21 = bits(wnList_res_re_rawIn_2.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_22 = bits(wnList_res_re_rawIn_2.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_2 = cat(_wnList_res_re_T_21, _wnList_res_re_T_22) @[Cat.scala 33:92]
    node wnList_res_re_hi_2 = cat(wnList_res_re_rawIn_2.sign, _wnList_res_re_T_20) @[Cat.scala 33:92]
    node _wnList_res_re_T_23 = cat(wnList_res_re_hi_2, wnList_res_re_lo_2) @[Cat.scala 33:92]
    node _wnList_res_re_T_24 = asUInt(asSInt(UInt<16>("h3ba7"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_3 = bits(_wnList_res_re_T_24, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_3 = bits(_wnList_res_re_T_24, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_3 = bits(_wnList_res_re_T_24, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_3 = eq(wnList_res_re_rawIn_expIn_3, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_3 = eq(wnList_res_re_rawIn_fractIn_3, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_54 = bits(wnList_res_re_rawIn_fractIn_3, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_55 = bits(wnList_res_re_rawIn_fractIn_3, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_56 = bits(wnList_res_re_rawIn_fractIn_3, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_57 = bits(wnList_res_re_rawIn_fractIn_3, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_58 = bits(wnList_res_re_rawIn_fractIn_3, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_59 = bits(wnList_res_re_rawIn_fractIn_3, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_60 = bits(wnList_res_re_rawIn_fractIn_3, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_61 = bits(wnList_res_re_rawIn_fractIn_3, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_62 = bits(wnList_res_re_rawIn_fractIn_3, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_63 = bits(wnList_res_re_rawIn_fractIn_3, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_64 = mux(_wnList_res_re_rawIn_normDist_T_55, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_65 = mux(_wnList_res_re_rawIn_normDist_T_56, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_64) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_66 = mux(_wnList_res_re_rawIn_normDist_T_57, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_65) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_67 = mux(_wnList_res_re_rawIn_normDist_T_58, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_66) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_68 = mux(_wnList_res_re_rawIn_normDist_T_59, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_67) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_69 = mux(_wnList_res_re_rawIn_normDist_T_60, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_68) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_70 = mux(_wnList_res_re_rawIn_normDist_T_61, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_69) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_71 = mux(_wnList_res_re_rawIn_normDist_T_62, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_70) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_3 = mux(_wnList_res_re_rawIn_normDist_T_63, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_71) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_6 = dshl(wnList_res_re_rawIn_fractIn_3, wnList_res_re_rawIn_normDist_3) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_7 = bits(_wnList_res_re_rawIn_subnormFract_T_6, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_3 = shl(_wnList_res_re_rawIn_subnormFract_T_7, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_15 = xor(wnList_res_re_rawIn_normDist_3, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_16 = mux(wnList_res_re_rawIn_isZeroExpIn_3, _wnList_res_re_rawIn_adjustedExp_T_15, wnList_res_re_rawIn_expIn_3) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_17 = mux(wnList_res_re_rawIn_isZeroExpIn_3, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_18 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_17) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_19 = add(_wnList_res_re_rawIn_adjustedExp_T_16, _wnList_res_re_rawIn_adjustedExp_T_18) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_3 = tail(_wnList_res_re_rawIn_adjustedExp_T_19, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_3 = and(wnList_res_re_rawIn_isZeroExpIn_3, wnList_res_re_rawIn_isZeroFractIn_3) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_3 = bits(wnList_res_re_rawIn_adjustedExp_3, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_3 = eq(_wnList_res_re_rawIn_isSpecial_T_3, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_3 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_3 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_6 = eq(wnList_res_re_rawIn_isZeroFractIn_3, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_7 = and(wnList_res_re_rawIn_isSpecial_3, _wnList_res_re_rawIn_out_isNaN_T_6) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_3.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_7 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_3 = and(wnList_res_re_rawIn_isSpecial_3, wnList_res_re_rawIn_isZeroFractIn_3) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_3.isInf <= _wnList_res_re_rawIn_out_isInf_T_3 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_3.isZero <= wnList_res_re_rawIn_isZero_3 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_3.sign <= wnList_res_re_rawIn_sign_3 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_6 = bits(wnList_res_re_rawIn_adjustedExp_3, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_7 = cvt(_wnList_res_re_rawIn_out_sExp_T_6) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_3.sExp <= _wnList_res_re_rawIn_out_sExp_T_7 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_9 = eq(wnList_res_re_rawIn_isZero_3, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_10 = mux(wnList_res_re_rawIn_isZeroExpIn_3, wnList_res_re_rawIn_subnormFract_3, wnList_res_re_rawIn_fractIn_3) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_3 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_9) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_11 = cat(wnList_res_re_rawIn_out_sig_hi_3, _wnList_res_re_rawIn_out_sig_T_10) @[Cat.scala 33:92]
    wnList_res_re_rawIn_3.sig <= _wnList_res_re_rawIn_out_sig_T_11 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_25 = bits(wnList_res_re_rawIn_3.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_26 = mux(wnList_res_re_rawIn_3.isZero, UInt<3>("h0"), _wnList_res_re_T_25) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_27 = mux(wnList_res_re_rawIn_3.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_28 = or(_wnList_res_re_T_26, _wnList_res_re_T_27) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_29 = bits(wnList_res_re_rawIn_3.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_30 = bits(wnList_res_re_rawIn_3.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_3 = cat(_wnList_res_re_T_29, _wnList_res_re_T_30) @[Cat.scala 33:92]
    node wnList_res_re_hi_3 = cat(wnList_res_re_rawIn_3.sign, _wnList_res_re_T_28) @[Cat.scala 33:92]
    node _wnList_res_re_T_31 = cat(wnList_res_re_hi_3, wnList_res_re_lo_3) @[Cat.scala 33:92]
    node _wnList_res_re_T_32 = asUInt(asSInt(UInt<16>("h3b64"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_4 = bits(_wnList_res_re_T_32, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_4 = bits(_wnList_res_re_T_32, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_4 = bits(_wnList_res_re_T_32, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_4 = eq(wnList_res_re_rawIn_expIn_4, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_4 = eq(wnList_res_re_rawIn_fractIn_4, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_72 = bits(wnList_res_re_rawIn_fractIn_4, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_73 = bits(wnList_res_re_rawIn_fractIn_4, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_74 = bits(wnList_res_re_rawIn_fractIn_4, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_75 = bits(wnList_res_re_rawIn_fractIn_4, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_76 = bits(wnList_res_re_rawIn_fractIn_4, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_77 = bits(wnList_res_re_rawIn_fractIn_4, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_78 = bits(wnList_res_re_rawIn_fractIn_4, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_79 = bits(wnList_res_re_rawIn_fractIn_4, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_80 = bits(wnList_res_re_rawIn_fractIn_4, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_81 = bits(wnList_res_re_rawIn_fractIn_4, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_82 = mux(_wnList_res_re_rawIn_normDist_T_73, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_83 = mux(_wnList_res_re_rawIn_normDist_T_74, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_82) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_84 = mux(_wnList_res_re_rawIn_normDist_T_75, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_83) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_85 = mux(_wnList_res_re_rawIn_normDist_T_76, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_84) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_86 = mux(_wnList_res_re_rawIn_normDist_T_77, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_85) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_87 = mux(_wnList_res_re_rawIn_normDist_T_78, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_86) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_88 = mux(_wnList_res_re_rawIn_normDist_T_79, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_87) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_89 = mux(_wnList_res_re_rawIn_normDist_T_80, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_88) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_4 = mux(_wnList_res_re_rawIn_normDist_T_81, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_89) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_8 = dshl(wnList_res_re_rawIn_fractIn_4, wnList_res_re_rawIn_normDist_4) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_9 = bits(_wnList_res_re_rawIn_subnormFract_T_8, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_4 = shl(_wnList_res_re_rawIn_subnormFract_T_9, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_20 = xor(wnList_res_re_rawIn_normDist_4, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_21 = mux(wnList_res_re_rawIn_isZeroExpIn_4, _wnList_res_re_rawIn_adjustedExp_T_20, wnList_res_re_rawIn_expIn_4) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_22 = mux(wnList_res_re_rawIn_isZeroExpIn_4, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_23 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_22) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_24 = add(_wnList_res_re_rawIn_adjustedExp_T_21, _wnList_res_re_rawIn_adjustedExp_T_23) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_4 = tail(_wnList_res_re_rawIn_adjustedExp_T_24, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_4 = and(wnList_res_re_rawIn_isZeroExpIn_4, wnList_res_re_rawIn_isZeroFractIn_4) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_4 = bits(wnList_res_re_rawIn_adjustedExp_4, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_4 = eq(_wnList_res_re_rawIn_isSpecial_T_4, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_4 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_4 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_8 = eq(wnList_res_re_rawIn_isZeroFractIn_4, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_9 = and(wnList_res_re_rawIn_isSpecial_4, _wnList_res_re_rawIn_out_isNaN_T_8) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_4.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_9 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_4 = and(wnList_res_re_rawIn_isSpecial_4, wnList_res_re_rawIn_isZeroFractIn_4) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_4.isInf <= _wnList_res_re_rawIn_out_isInf_T_4 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_4.isZero <= wnList_res_re_rawIn_isZero_4 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_4.sign <= wnList_res_re_rawIn_sign_4 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_8 = bits(wnList_res_re_rawIn_adjustedExp_4, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_9 = cvt(_wnList_res_re_rawIn_out_sExp_T_8) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_4.sExp <= _wnList_res_re_rawIn_out_sExp_T_9 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_12 = eq(wnList_res_re_rawIn_isZero_4, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_13 = mux(wnList_res_re_rawIn_isZeroExpIn_4, wnList_res_re_rawIn_subnormFract_4, wnList_res_re_rawIn_fractIn_4) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_4 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_12) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_14 = cat(wnList_res_re_rawIn_out_sig_hi_4, _wnList_res_re_rawIn_out_sig_T_13) @[Cat.scala 33:92]
    wnList_res_re_rawIn_4.sig <= _wnList_res_re_rawIn_out_sig_T_14 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_33 = bits(wnList_res_re_rawIn_4.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_34 = mux(wnList_res_re_rawIn_4.isZero, UInt<3>("h0"), _wnList_res_re_T_33) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_35 = mux(wnList_res_re_rawIn_4.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_36 = or(_wnList_res_re_T_34, _wnList_res_re_T_35) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_37 = bits(wnList_res_re_rawIn_4.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_38 = bits(wnList_res_re_rawIn_4.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_4 = cat(_wnList_res_re_T_37, _wnList_res_re_T_38) @[Cat.scala 33:92]
    node wnList_res_re_hi_4 = cat(wnList_res_re_rawIn_4.sign, _wnList_res_re_T_36) @[Cat.scala 33:92]
    node _wnList_res_re_T_39 = cat(wnList_res_re_hi_4, wnList_res_re_lo_4) @[Cat.scala 33:92]
    node _wnList_res_re_T_40 = asUInt(asSInt(UInt<16>("h3b0e"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_5 = bits(_wnList_res_re_T_40, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_5 = bits(_wnList_res_re_T_40, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_5 = bits(_wnList_res_re_T_40, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_5 = eq(wnList_res_re_rawIn_expIn_5, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_5 = eq(wnList_res_re_rawIn_fractIn_5, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_90 = bits(wnList_res_re_rawIn_fractIn_5, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_91 = bits(wnList_res_re_rawIn_fractIn_5, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_92 = bits(wnList_res_re_rawIn_fractIn_5, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_93 = bits(wnList_res_re_rawIn_fractIn_5, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_94 = bits(wnList_res_re_rawIn_fractIn_5, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_95 = bits(wnList_res_re_rawIn_fractIn_5, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_96 = bits(wnList_res_re_rawIn_fractIn_5, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_97 = bits(wnList_res_re_rawIn_fractIn_5, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_98 = bits(wnList_res_re_rawIn_fractIn_5, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_99 = bits(wnList_res_re_rawIn_fractIn_5, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_100 = mux(_wnList_res_re_rawIn_normDist_T_91, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_101 = mux(_wnList_res_re_rawIn_normDist_T_92, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_100) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_102 = mux(_wnList_res_re_rawIn_normDist_T_93, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_101) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_103 = mux(_wnList_res_re_rawIn_normDist_T_94, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_102) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_104 = mux(_wnList_res_re_rawIn_normDist_T_95, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_103) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_105 = mux(_wnList_res_re_rawIn_normDist_T_96, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_104) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_106 = mux(_wnList_res_re_rawIn_normDist_T_97, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_105) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_107 = mux(_wnList_res_re_rawIn_normDist_T_98, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_106) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_5 = mux(_wnList_res_re_rawIn_normDist_T_99, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_107) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_10 = dshl(wnList_res_re_rawIn_fractIn_5, wnList_res_re_rawIn_normDist_5) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_11 = bits(_wnList_res_re_rawIn_subnormFract_T_10, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_5 = shl(_wnList_res_re_rawIn_subnormFract_T_11, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_25 = xor(wnList_res_re_rawIn_normDist_5, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_26 = mux(wnList_res_re_rawIn_isZeroExpIn_5, _wnList_res_re_rawIn_adjustedExp_T_25, wnList_res_re_rawIn_expIn_5) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_27 = mux(wnList_res_re_rawIn_isZeroExpIn_5, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_28 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_27) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_29 = add(_wnList_res_re_rawIn_adjustedExp_T_26, _wnList_res_re_rawIn_adjustedExp_T_28) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_5 = tail(_wnList_res_re_rawIn_adjustedExp_T_29, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_5 = and(wnList_res_re_rawIn_isZeroExpIn_5, wnList_res_re_rawIn_isZeroFractIn_5) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_5 = bits(wnList_res_re_rawIn_adjustedExp_5, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_5 = eq(_wnList_res_re_rawIn_isSpecial_T_5, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_5 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_5 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_10 = eq(wnList_res_re_rawIn_isZeroFractIn_5, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_11 = and(wnList_res_re_rawIn_isSpecial_5, _wnList_res_re_rawIn_out_isNaN_T_10) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_5.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_11 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_5 = and(wnList_res_re_rawIn_isSpecial_5, wnList_res_re_rawIn_isZeroFractIn_5) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_5.isInf <= _wnList_res_re_rawIn_out_isInf_T_5 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_5.isZero <= wnList_res_re_rawIn_isZero_5 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_5.sign <= wnList_res_re_rawIn_sign_5 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_10 = bits(wnList_res_re_rawIn_adjustedExp_5, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_11 = cvt(_wnList_res_re_rawIn_out_sExp_T_10) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_5.sExp <= _wnList_res_re_rawIn_out_sExp_T_11 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_15 = eq(wnList_res_re_rawIn_isZero_5, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_16 = mux(wnList_res_re_rawIn_isZeroExpIn_5, wnList_res_re_rawIn_subnormFract_5, wnList_res_re_rawIn_fractIn_5) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_5 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_15) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_17 = cat(wnList_res_re_rawIn_out_sig_hi_5, _wnList_res_re_rawIn_out_sig_T_16) @[Cat.scala 33:92]
    wnList_res_re_rawIn_5.sig <= _wnList_res_re_rawIn_out_sig_T_17 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_41 = bits(wnList_res_re_rawIn_5.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_42 = mux(wnList_res_re_rawIn_5.isZero, UInt<3>("h0"), _wnList_res_re_T_41) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_43 = mux(wnList_res_re_rawIn_5.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_44 = or(_wnList_res_re_T_42, _wnList_res_re_T_43) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_45 = bits(wnList_res_re_rawIn_5.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_46 = bits(wnList_res_re_rawIn_5.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_5 = cat(_wnList_res_re_T_45, _wnList_res_re_T_46) @[Cat.scala 33:92]
    node wnList_res_re_hi_5 = cat(wnList_res_re_rawIn_5.sign, _wnList_res_re_T_44) @[Cat.scala 33:92]
    node _wnList_res_re_T_47 = cat(wnList_res_re_hi_5, wnList_res_re_lo_5) @[Cat.scala 33:92]
    node _wnList_res_re_T_48 = asUInt(asSInt(UInt<16>("h3aa6"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_6 = bits(_wnList_res_re_T_48, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_6 = bits(_wnList_res_re_T_48, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_6 = bits(_wnList_res_re_T_48, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_6 = eq(wnList_res_re_rawIn_expIn_6, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_6 = eq(wnList_res_re_rawIn_fractIn_6, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_108 = bits(wnList_res_re_rawIn_fractIn_6, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_109 = bits(wnList_res_re_rawIn_fractIn_6, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_110 = bits(wnList_res_re_rawIn_fractIn_6, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_111 = bits(wnList_res_re_rawIn_fractIn_6, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_112 = bits(wnList_res_re_rawIn_fractIn_6, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_113 = bits(wnList_res_re_rawIn_fractIn_6, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_114 = bits(wnList_res_re_rawIn_fractIn_6, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_115 = bits(wnList_res_re_rawIn_fractIn_6, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_116 = bits(wnList_res_re_rawIn_fractIn_6, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_117 = bits(wnList_res_re_rawIn_fractIn_6, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_118 = mux(_wnList_res_re_rawIn_normDist_T_109, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_119 = mux(_wnList_res_re_rawIn_normDist_T_110, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_118) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_120 = mux(_wnList_res_re_rawIn_normDist_T_111, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_119) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_121 = mux(_wnList_res_re_rawIn_normDist_T_112, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_120) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_122 = mux(_wnList_res_re_rawIn_normDist_T_113, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_121) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_123 = mux(_wnList_res_re_rawIn_normDist_T_114, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_122) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_124 = mux(_wnList_res_re_rawIn_normDist_T_115, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_123) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_125 = mux(_wnList_res_re_rawIn_normDist_T_116, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_124) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_6 = mux(_wnList_res_re_rawIn_normDist_T_117, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_125) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_12 = dshl(wnList_res_re_rawIn_fractIn_6, wnList_res_re_rawIn_normDist_6) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_13 = bits(_wnList_res_re_rawIn_subnormFract_T_12, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_6 = shl(_wnList_res_re_rawIn_subnormFract_T_13, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_30 = xor(wnList_res_re_rawIn_normDist_6, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_31 = mux(wnList_res_re_rawIn_isZeroExpIn_6, _wnList_res_re_rawIn_adjustedExp_T_30, wnList_res_re_rawIn_expIn_6) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_32 = mux(wnList_res_re_rawIn_isZeroExpIn_6, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_33 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_32) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_34 = add(_wnList_res_re_rawIn_adjustedExp_T_31, _wnList_res_re_rawIn_adjustedExp_T_33) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_6 = tail(_wnList_res_re_rawIn_adjustedExp_T_34, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_6 = and(wnList_res_re_rawIn_isZeroExpIn_6, wnList_res_re_rawIn_isZeroFractIn_6) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_6 = bits(wnList_res_re_rawIn_adjustedExp_6, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_6 = eq(_wnList_res_re_rawIn_isSpecial_T_6, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_6 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_6 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_12 = eq(wnList_res_re_rawIn_isZeroFractIn_6, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_13 = and(wnList_res_re_rawIn_isSpecial_6, _wnList_res_re_rawIn_out_isNaN_T_12) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_6.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_13 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_6 = and(wnList_res_re_rawIn_isSpecial_6, wnList_res_re_rawIn_isZeroFractIn_6) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_6.isInf <= _wnList_res_re_rawIn_out_isInf_T_6 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_6.isZero <= wnList_res_re_rawIn_isZero_6 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_6.sign <= wnList_res_re_rawIn_sign_6 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_12 = bits(wnList_res_re_rawIn_adjustedExp_6, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_13 = cvt(_wnList_res_re_rawIn_out_sExp_T_12) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_6.sExp <= _wnList_res_re_rawIn_out_sExp_T_13 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_18 = eq(wnList_res_re_rawIn_isZero_6, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_19 = mux(wnList_res_re_rawIn_isZeroExpIn_6, wnList_res_re_rawIn_subnormFract_6, wnList_res_re_rawIn_fractIn_6) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_6 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_18) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_20 = cat(wnList_res_re_rawIn_out_sig_hi_6, _wnList_res_re_rawIn_out_sig_T_19) @[Cat.scala 33:92]
    wnList_res_re_rawIn_6.sig <= _wnList_res_re_rawIn_out_sig_T_20 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_49 = bits(wnList_res_re_rawIn_6.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_50 = mux(wnList_res_re_rawIn_6.isZero, UInt<3>("h0"), _wnList_res_re_T_49) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_51 = mux(wnList_res_re_rawIn_6.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_52 = or(_wnList_res_re_T_50, _wnList_res_re_T_51) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_53 = bits(wnList_res_re_rawIn_6.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_54 = bits(wnList_res_re_rawIn_6.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_6 = cat(_wnList_res_re_T_53, _wnList_res_re_T_54) @[Cat.scala 33:92]
    node wnList_res_re_hi_6 = cat(wnList_res_re_rawIn_6.sign, _wnList_res_re_T_52) @[Cat.scala 33:92]
    node _wnList_res_re_T_55 = cat(wnList_res_re_hi_6, wnList_res_re_lo_6) @[Cat.scala 33:92]
    node _wnList_res_re_T_56 = asUInt(asSInt(UInt<16>("h3a2f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_7 = bits(_wnList_res_re_T_56, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_7 = bits(_wnList_res_re_T_56, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_7 = bits(_wnList_res_re_T_56, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_7 = eq(wnList_res_re_rawIn_expIn_7, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_7 = eq(wnList_res_re_rawIn_fractIn_7, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_126 = bits(wnList_res_re_rawIn_fractIn_7, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_127 = bits(wnList_res_re_rawIn_fractIn_7, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_128 = bits(wnList_res_re_rawIn_fractIn_7, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_129 = bits(wnList_res_re_rawIn_fractIn_7, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_130 = bits(wnList_res_re_rawIn_fractIn_7, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_131 = bits(wnList_res_re_rawIn_fractIn_7, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_132 = bits(wnList_res_re_rawIn_fractIn_7, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_133 = bits(wnList_res_re_rawIn_fractIn_7, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_134 = bits(wnList_res_re_rawIn_fractIn_7, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_135 = bits(wnList_res_re_rawIn_fractIn_7, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_136 = mux(_wnList_res_re_rawIn_normDist_T_127, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_137 = mux(_wnList_res_re_rawIn_normDist_T_128, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_136) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_138 = mux(_wnList_res_re_rawIn_normDist_T_129, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_137) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_139 = mux(_wnList_res_re_rawIn_normDist_T_130, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_138) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_140 = mux(_wnList_res_re_rawIn_normDist_T_131, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_139) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_141 = mux(_wnList_res_re_rawIn_normDist_T_132, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_140) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_142 = mux(_wnList_res_re_rawIn_normDist_T_133, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_141) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_143 = mux(_wnList_res_re_rawIn_normDist_T_134, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_142) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_7 = mux(_wnList_res_re_rawIn_normDist_T_135, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_143) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_14 = dshl(wnList_res_re_rawIn_fractIn_7, wnList_res_re_rawIn_normDist_7) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_15 = bits(_wnList_res_re_rawIn_subnormFract_T_14, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_7 = shl(_wnList_res_re_rawIn_subnormFract_T_15, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_35 = xor(wnList_res_re_rawIn_normDist_7, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_36 = mux(wnList_res_re_rawIn_isZeroExpIn_7, _wnList_res_re_rawIn_adjustedExp_T_35, wnList_res_re_rawIn_expIn_7) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_37 = mux(wnList_res_re_rawIn_isZeroExpIn_7, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_38 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_37) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_39 = add(_wnList_res_re_rawIn_adjustedExp_T_36, _wnList_res_re_rawIn_adjustedExp_T_38) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_7 = tail(_wnList_res_re_rawIn_adjustedExp_T_39, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_7 = and(wnList_res_re_rawIn_isZeroExpIn_7, wnList_res_re_rawIn_isZeroFractIn_7) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_7 = bits(wnList_res_re_rawIn_adjustedExp_7, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_7 = eq(_wnList_res_re_rawIn_isSpecial_T_7, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_7 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_7 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_14 = eq(wnList_res_re_rawIn_isZeroFractIn_7, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_15 = and(wnList_res_re_rawIn_isSpecial_7, _wnList_res_re_rawIn_out_isNaN_T_14) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_7.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_15 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_7 = and(wnList_res_re_rawIn_isSpecial_7, wnList_res_re_rawIn_isZeroFractIn_7) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_7.isInf <= _wnList_res_re_rawIn_out_isInf_T_7 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_7.isZero <= wnList_res_re_rawIn_isZero_7 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_7.sign <= wnList_res_re_rawIn_sign_7 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_14 = bits(wnList_res_re_rawIn_adjustedExp_7, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_15 = cvt(_wnList_res_re_rawIn_out_sExp_T_14) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_7.sExp <= _wnList_res_re_rawIn_out_sExp_T_15 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_21 = eq(wnList_res_re_rawIn_isZero_7, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_22 = mux(wnList_res_re_rawIn_isZeroExpIn_7, wnList_res_re_rawIn_subnormFract_7, wnList_res_re_rawIn_fractIn_7) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_7 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_21) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_23 = cat(wnList_res_re_rawIn_out_sig_hi_7, _wnList_res_re_rawIn_out_sig_T_22) @[Cat.scala 33:92]
    wnList_res_re_rawIn_7.sig <= _wnList_res_re_rawIn_out_sig_T_23 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_57 = bits(wnList_res_re_rawIn_7.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_58 = mux(wnList_res_re_rawIn_7.isZero, UInt<3>("h0"), _wnList_res_re_T_57) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_59 = mux(wnList_res_re_rawIn_7.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_60 = or(_wnList_res_re_T_58, _wnList_res_re_T_59) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_61 = bits(wnList_res_re_rawIn_7.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_62 = bits(wnList_res_re_rawIn_7.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_7 = cat(_wnList_res_re_T_61, _wnList_res_re_T_62) @[Cat.scala 33:92]
    node wnList_res_re_hi_7 = cat(wnList_res_re_rawIn_7.sign, _wnList_res_re_T_60) @[Cat.scala 33:92]
    node _wnList_res_re_T_63 = cat(wnList_res_re_hi_7, wnList_res_re_lo_7) @[Cat.scala 33:92]
    node _wnList_res_re_T_64 = asUInt(asSInt(UInt<16>("h39a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_8 = bits(_wnList_res_re_T_64, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_8 = bits(_wnList_res_re_T_64, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_8 = bits(_wnList_res_re_T_64, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_8 = eq(wnList_res_re_rawIn_expIn_8, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_8 = eq(wnList_res_re_rawIn_fractIn_8, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_144 = bits(wnList_res_re_rawIn_fractIn_8, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_145 = bits(wnList_res_re_rawIn_fractIn_8, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_146 = bits(wnList_res_re_rawIn_fractIn_8, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_147 = bits(wnList_res_re_rawIn_fractIn_8, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_148 = bits(wnList_res_re_rawIn_fractIn_8, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_149 = bits(wnList_res_re_rawIn_fractIn_8, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_150 = bits(wnList_res_re_rawIn_fractIn_8, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_151 = bits(wnList_res_re_rawIn_fractIn_8, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_152 = bits(wnList_res_re_rawIn_fractIn_8, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_153 = bits(wnList_res_re_rawIn_fractIn_8, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_154 = mux(_wnList_res_re_rawIn_normDist_T_145, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_155 = mux(_wnList_res_re_rawIn_normDist_T_146, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_154) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_156 = mux(_wnList_res_re_rawIn_normDist_T_147, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_155) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_157 = mux(_wnList_res_re_rawIn_normDist_T_148, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_156) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_158 = mux(_wnList_res_re_rawIn_normDist_T_149, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_157) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_159 = mux(_wnList_res_re_rawIn_normDist_T_150, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_158) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_160 = mux(_wnList_res_re_rawIn_normDist_T_151, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_159) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_161 = mux(_wnList_res_re_rawIn_normDist_T_152, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_160) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_8 = mux(_wnList_res_re_rawIn_normDist_T_153, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_161) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_16 = dshl(wnList_res_re_rawIn_fractIn_8, wnList_res_re_rawIn_normDist_8) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_17 = bits(_wnList_res_re_rawIn_subnormFract_T_16, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_8 = shl(_wnList_res_re_rawIn_subnormFract_T_17, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_40 = xor(wnList_res_re_rawIn_normDist_8, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_41 = mux(wnList_res_re_rawIn_isZeroExpIn_8, _wnList_res_re_rawIn_adjustedExp_T_40, wnList_res_re_rawIn_expIn_8) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_42 = mux(wnList_res_re_rawIn_isZeroExpIn_8, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_43 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_42) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_44 = add(_wnList_res_re_rawIn_adjustedExp_T_41, _wnList_res_re_rawIn_adjustedExp_T_43) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_8 = tail(_wnList_res_re_rawIn_adjustedExp_T_44, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_8 = and(wnList_res_re_rawIn_isZeroExpIn_8, wnList_res_re_rawIn_isZeroFractIn_8) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_8 = bits(wnList_res_re_rawIn_adjustedExp_8, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_8 = eq(_wnList_res_re_rawIn_isSpecial_T_8, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_8 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_8 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_16 = eq(wnList_res_re_rawIn_isZeroFractIn_8, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_17 = and(wnList_res_re_rawIn_isSpecial_8, _wnList_res_re_rawIn_out_isNaN_T_16) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_8.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_17 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_8 = and(wnList_res_re_rawIn_isSpecial_8, wnList_res_re_rawIn_isZeroFractIn_8) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_8.isInf <= _wnList_res_re_rawIn_out_isInf_T_8 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_8.isZero <= wnList_res_re_rawIn_isZero_8 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_8.sign <= wnList_res_re_rawIn_sign_8 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_16 = bits(wnList_res_re_rawIn_adjustedExp_8, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_17 = cvt(_wnList_res_re_rawIn_out_sExp_T_16) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_8.sExp <= _wnList_res_re_rawIn_out_sExp_T_17 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_24 = eq(wnList_res_re_rawIn_isZero_8, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_25 = mux(wnList_res_re_rawIn_isZeroExpIn_8, wnList_res_re_rawIn_subnormFract_8, wnList_res_re_rawIn_fractIn_8) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_8 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_24) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_26 = cat(wnList_res_re_rawIn_out_sig_hi_8, _wnList_res_re_rawIn_out_sig_T_25) @[Cat.scala 33:92]
    wnList_res_re_rawIn_8.sig <= _wnList_res_re_rawIn_out_sig_T_26 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_65 = bits(wnList_res_re_rawIn_8.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_66 = mux(wnList_res_re_rawIn_8.isZero, UInt<3>("h0"), _wnList_res_re_T_65) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_67 = mux(wnList_res_re_rawIn_8.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_68 = or(_wnList_res_re_T_66, _wnList_res_re_T_67) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_69 = bits(wnList_res_re_rawIn_8.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_70 = bits(wnList_res_re_rawIn_8.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_8 = cat(_wnList_res_re_T_69, _wnList_res_re_T_70) @[Cat.scala 33:92]
    node wnList_res_re_hi_8 = cat(wnList_res_re_rawIn_8.sign, _wnList_res_re_T_68) @[Cat.scala 33:92]
    node _wnList_res_re_T_71 = cat(wnList_res_re_hi_8, wnList_res_re_lo_8) @[Cat.scala 33:92]
    node _wnList_res_re_T_72 = asUInt(asSInt(UInt<16>("h3913"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_9 = bits(_wnList_res_re_T_72, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_9 = bits(_wnList_res_re_T_72, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_9 = bits(_wnList_res_re_T_72, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_9 = eq(wnList_res_re_rawIn_expIn_9, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_9 = eq(wnList_res_re_rawIn_fractIn_9, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_162 = bits(wnList_res_re_rawIn_fractIn_9, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_163 = bits(wnList_res_re_rawIn_fractIn_9, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_164 = bits(wnList_res_re_rawIn_fractIn_9, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_165 = bits(wnList_res_re_rawIn_fractIn_9, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_166 = bits(wnList_res_re_rawIn_fractIn_9, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_167 = bits(wnList_res_re_rawIn_fractIn_9, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_168 = bits(wnList_res_re_rawIn_fractIn_9, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_169 = bits(wnList_res_re_rawIn_fractIn_9, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_170 = bits(wnList_res_re_rawIn_fractIn_9, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_171 = bits(wnList_res_re_rawIn_fractIn_9, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_172 = mux(_wnList_res_re_rawIn_normDist_T_163, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_173 = mux(_wnList_res_re_rawIn_normDist_T_164, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_172) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_174 = mux(_wnList_res_re_rawIn_normDist_T_165, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_173) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_175 = mux(_wnList_res_re_rawIn_normDist_T_166, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_174) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_176 = mux(_wnList_res_re_rawIn_normDist_T_167, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_175) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_177 = mux(_wnList_res_re_rawIn_normDist_T_168, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_176) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_178 = mux(_wnList_res_re_rawIn_normDist_T_169, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_177) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_179 = mux(_wnList_res_re_rawIn_normDist_T_170, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_178) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_9 = mux(_wnList_res_re_rawIn_normDist_T_171, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_179) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_18 = dshl(wnList_res_re_rawIn_fractIn_9, wnList_res_re_rawIn_normDist_9) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_19 = bits(_wnList_res_re_rawIn_subnormFract_T_18, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_9 = shl(_wnList_res_re_rawIn_subnormFract_T_19, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_45 = xor(wnList_res_re_rawIn_normDist_9, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_46 = mux(wnList_res_re_rawIn_isZeroExpIn_9, _wnList_res_re_rawIn_adjustedExp_T_45, wnList_res_re_rawIn_expIn_9) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_47 = mux(wnList_res_re_rawIn_isZeroExpIn_9, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_48 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_47) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_49 = add(_wnList_res_re_rawIn_adjustedExp_T_46, _wnList_res_re_rawIn_adjustedExp_T_48) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_9 = tail(_wnList_res_re_rawIn_adjustedExp_T_49, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_9 = and(wnList_res_re_rawIn_isZeroExpIn_9, wnList_res_re_rawIn_isZeroFractIn_9) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_9 = bits(wnList_res_re_rawIn_adjustedExp_9, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_9 = eq(_wnList_res_re_rawIn_isSpecial_T_9, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_9 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_9 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_18 = eq(wnList_res_re_rawIn_isZeroFractIn_9, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_19 = and(wnList_res_re_rawIn_isSpecial_9, _wnList_res_re_rawIn_out_isNaN_T_18) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_9.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_19 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_9 = and(wnList_res_re_rawIn_isSpecial_9, wnList_res_re_rawIn_isZeroFractIn_9) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_9.isInf <= _wnList_res_re_rawIn_out_isInf_T_9 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_9.isZero <= wnList_res_re_rawIn_isZero_9 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_9.sign <= wnList_res_re_rawIn_sign_9 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_18 = bits(wnList_res_re_rawIn_adjustedExp_9, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_19 = cvt(_wnList_res_re_rawIn_out_sExp_T_18) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_9.sExp <= _wnList_res_re_rawIn_out_sExp_T_19 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_27 = eq(wnList_res_re_rawIn_isZero_9, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_28 = mux(wnList_res_re_rawIn_isZeroExpIn_9, wnList_res_re_rawIn_subnormFract_9, wnList_res_re_rawIn_fractIn_9) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_9 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_27) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_29 = cat(wnList_res_re_rawIn_out_sig_hi_9, _wnList_res_re_rawIn_out_sig_T_28) @[Cat.scala 33:92]
    wnList_res_re_rawIn_9.sig <= _wnList_res_re_rawIn_out_sig_T_29 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_73 = bits(wnList_res_re_rawIn_9.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_74 = mux(wnList_res_re_rawIn_9.isZero, UInt<3>("h0"), _wnList_res_re_T_73) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_75 = mux(wnList_res_re_rawIn_9.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_76 = or(_wnList_res_re_T_74, _wnList_res_re_T_75) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_77 = bits(wnList_res_re_rawIn_9.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_78 = bits(wnList_res_re_rawIn_9.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_9 = cat(_wnList_res_re_T_77, _wnList_res_re_T_78) @[Cat.scala 33:92]
    node wnList_res_re_hi_9 = cat(wnList_res_re_rawIn_9.sign, _wnList_res_re_T_76) @[Cat.scala 33:92]
    node _wnList_res_re_T_79 = cat(wnList_res_re_hi_9, wnList_res_re_lo_9) @[Cat.scala 33:92]
    node _wnList_res_re_T_80 = asUInt(asSInt(UInt<16>("h3871"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_10 = bits(_wnList_res_re_T_80, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_10 = bits(_wnList_res_re_T_80, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_10 = bits(_wnList_res_re_T_80, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_10 = eq(wnList_res_re_rawIn_expIn_10, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_10 = eq(wnList_res_re_rawIn_fractIn_10, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_180 = bits(wnList_res_re_rawIn_fractIn_10, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_181 = bits(wnList_res_re_rawIn_fractIn_10, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_182 = bits(wnList_res_re_rawIn_fractIn_10, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_183 = bits(wnList_res_re_rawIn_fractIn_10, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_184 = bits(wnList_res_re_rawIn_fractIn_10, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_185 = bits(wnList_res_re_rawIn_fractIn_10, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_186 = bits(wnList_res_re_rawIn_fractIn_10, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_187 = bits(wnList_res_re_rawIn_fractIn_10, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_188 = bits(wnList_res_re_rawIn_fractIn_10, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_189 = bits(wnList_res_re_rawIn_fractIn_10, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_190 = mux(_wnList_res_re_rawIn_normDist_T_181, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_191 = mux(_wnList_res_re_rawIn_normDist_T_182, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_190) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_192 = mux(_wnList_res_re_rawIn_normDist_T_183, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_191) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_193 = mux(_wnList_res_re_rawIn_normDist_T_184, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_192) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_194 = mux(_wnList_res_re_rawIn_normDist_T_185, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_193) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_195 = mux(_wnList_res_re_rawIn_normDist_T_186, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_194) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_196 = mux(_wnList_res_re_rawIn_normDist_T_187, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_195) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_197 = mux(_wnList_res_re_rawIn_normDist_T_188, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_196) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_10 = mux(_wnList_res_re_rawIn_normDist_T_189, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_197) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_20 = dshl(wnList_res_re_rawIn_fractIn_10, wnList_res_re_rawIn_normDist_10) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_21 = bits(_wnList_res_re_rawIn_subnormFract_T_20, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_10 = shl(_wnList_res_re_rawIn_subnormFract_T_21, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_50 = xor(wnList_res_re_rawIn_normDist_10, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_51 = mux(wnList_res_re_rawIn_isZeroExpIn_10, _wnList_res_re_rawIn_adjustedExp_T_50, wnList_res_re_rawIn_expIn_10) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_52 = mux(wnList_res_re_rawIn_isZeroExpIn_10, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_53 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_52) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_54 = add(_wnList_res_re_rawIn_adjustedExp_T_51, _wnList_res_re_rawIn_adjustedExp_T_53) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_10 = tail(_wnList_res_re_rawIn_adjustedExp_T_54, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_10 = and(wnList_res_re_rawIn_isZeroExpIn_10, wnList_res_re_rawIn_isZeroFractIn_10) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_10 = bits(wnList_res_re_rawIn_adjustedExp_10, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_10 = eq(_wnList_res_re_rawIn_isSpecial_T_10, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_10 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_10 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_20 = eq(wnList_res_re_rawIn_isZeroFractIn_10, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_21 = and(wnList_res_re_rawIn_isSpecial_10, _wnList_res_re_rawIn_out_isNaN_T_20) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_10.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_21 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_10 = and(wnList_res_re_rawIn_isSpecial_10, wnList_res_re_rawIn_isZeroFractIn_10) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_10.isInf <= _wnList_res_re_rawIn_out_isInf_T_10 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_10.isZero <= wnList_res_re_rawIn_isZero_10 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_10.sign <= wnList_res_re_rawIn_sign_10 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_20 = bits(wnList_res_re_rawIn_adjustedExp_10, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_21 = cvt(_wnList_res_re_rawIn_out_sExp_T_20) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_10.sExp <= _wnList_res_re_rawIn_out_sExp_T_21 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_30 = eq(wnList_res_re_rawIn_isZero_10, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_31 = mux(wnList_res_re_rawIn_isZeroExpIn_10, wnList_res_re_rawIn_subnormFract_10, wnList_res_re_rawIn_fractIn_10) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_10 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_30) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_32 = cat(wnList_res_re_rawIn_out_sig_hi_10, _wnList_res_re_rawIn_out_sig_T_31) @[Cat.scala 33:92]
    wnList_res_re_rawIn_10.sig <= _wnList_res_re_rawIn_out_sig_T_32 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_81 = bits(wnList_res_re_rawIn_10.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_82 = mux(wnList_res_re_rawIn_10.isZero, UInt<3>("h0"), _wnList_res_re_T_81) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_83 = mux(wnList_res_re_rawIn_10.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_84 = or(_wnList_res_re_T_82, _wnList_res_re_T_83) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_85 = bits(wnList_res_re_rawIn_10.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_86 = bits(wnList_res_re_rawIn_10.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_10 = cat(_wnList_res_re_T_85, _wnList_res_re_T_86) @[Cat.scala 33:92]
    node wnList_res_re_hi_10 = cat(wnList_res_re_rawIn_10.sign, _wnList_res_re_T_84) @[Cat.scala 33:92]
    node _wnList_res_re_T_87 = cat(wnList_res_re_hi_10, wnList_res_re_lo_10) @[Cat.scala 33:92]
    node _wnList_res_re_T_88 = asUInt(asSInt(UInt<16>("h378a"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_11 = bits(_wnList_res_re_T_88, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_11 = bits(_wnList_res_re_T_88, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_11 = bits(_wnList_res_re_T_88, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_11 = eq(wnList_res_re_rawIn_expIn_11, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_11 = eq(wnList_res_re_rawIn_fractIn_11, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_198 = bits(wnList_res_re_rawIn_fractIn_11, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_199 = bits(wnList_res_re_rawIn_fractIn_11, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_200 = bits(wnList_res_re_rawIn_fractIn_11, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_201 = bits(wnList_res_re_rawIn_fractIn_11, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_202 = bits(wnList_res_re_rawIn_fractIn_11, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_203 = bits(wnList_res_re_rawIn_fractIn_11, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_204 = bits(wnList_res_re_rawIn_fractIn_11, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_205 = bits(wnList_res_re_rawIn_fractIn_11, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_206 = bits(wnList_res_re_rawIn_fractIn_11, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_207 = bits(wnList_res_re_rawIn_fractIn_11, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_208 = mux(_wnList_res_re_rawIn_normDist_T_199, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_209 = mux(_wnList_res_re_rawIn_normDist_T_200, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_208) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_210 = mux(_wnList_res_re_rawIn_normDist_T_201, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_209) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_211 = mux(_wnList_res_re_rawIn_normDist_T_202, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_210) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_212 = mux(_wnList_res_re_rawIn_normDist_T_203, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_211) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_213 = mux(_wnList_res_re_rawIn_normDist_T_204, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_212) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_214 = mux(_wnList_res_re_rawIn_normDist_T_205, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_213) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_215 = mux(_wnList_res_re_rawIn_normDist_T_206, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_214) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_11 = mux(_wnList_res_re_rawIn_normDist_T_207, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_215) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_22 = dshl(wnList_res_re_rawIn_fractIn_11, wnList_res_re_rawIn_normDist_11) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_23 = bits(_wnList_res_re_rawIn_subnormFract_T_22, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_11 = shl(_wnList_res_re_rawIn_subnormFract_T_23, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_55 = xor(wnList_res_re_rawIn_normDist_11, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_56 = mux(wnList_res_re_rawIn_isZeroExpIn_11, _wnList_res_re_rawIn_adjustedExp_T_55, wnList_res_re_rawIn_expIn_11) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_57 = mux(wnList_res_re_rawIn_isZeroExpIn_11, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_58 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_57) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_59 = add(_wnList_res_re_rawIn_adjustedExp_T_56, _wnList_res_re_rawIn_adjustedExp_T_58) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_11 = tail(_wnList_res_re_rawIn_adjustedExp_T_59, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_11 = and(wnList_res_re_rawIn_isZeroExpIn_11, wnList_res_re_rawIn_isZeroFractIn_11) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_11 = bits(wnList_res_re_rawIn_adjustedExp_11, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_11 = eq(_wnList_res_re_rawIn_isSpecial_T_11, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_11 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_11 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_22 = eq(wnList_res_re_rawIn_isZeroFractIn_11, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_23 = and(wnList_res_re_rawIn_isSpecial_11, _wnList_res_re_rawIn_out_isNaN_T_22) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_11.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_23 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_11 = and(wnList_res_re_rawIn_isSpecial_11, wnList_res_re_rawIn_isZeroFractIn_11) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_11.isInf <= _wnList_res_re_rawIn_out_isInf_T_11 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_11.isZero <= wnList_res_re_rawIn_isZero_11 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_11.sign <= wnList_res_re_rawIn_sign_11 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_22 = bits(wnList_res_re_rawIn_adjustedExp_11, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_23 = cvt(_wnList_res_re_rawIn_out_sExp_T_22) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_11.sExp <= _wnList_res_re_rawIn_out_sExp_T_23 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_33 = eq(wnList_res_re_rawIn_isZero_11, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_34 = mux(wnList_res_re_rawIn_isZeroExpIn_11, wnList_res_re_rawIn_subnormFract_11, wnList_res_re_rawIn_fractIn_11) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_11 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_33) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_35 = cat(wnList_res_re_rawIn_out_sig_hi_11, _wnList_res_re_rawIn_out_sig_T_34) @[Cat.scala 33:92]
    wnList_res_re_rawIn_11.sig <= _wnList_res_re_rawIn_out_sig_T_35 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_89 = bits(wnList_res_re_rawIn_11.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_90 = mux(wnList_res_re_rawIn_11.isZero, UInt<3>("h0"), _wnList_res_re_T_89) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_91 = mux(wnList_res_re_rawIn_11.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_92 = or(_wnList_res_re_T_90, _wnList_res_re_T_91) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_93 = bits(wnList_res_re_rawIn_11.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_94 = bits(wnList_res_re_rawIn_11.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_11 = cat(_wnList_res_re_T_93, _wnList_res_re_T_94) @[Cat.scala 33:92]
    node wnList_res_re_hi_11 = cat(wnList_res_re_rawIn_11.sign, _wnList_res_re_T_92) @[Cat.scala 33:92]
    node _wnList_res_re_T_95 = cat(wnList_res_re_hi_11, wnList_res_re_lo_11) @[Cat.scala 33:92]
    node _wnList_res_re_T_96 = asUInt(asSInt(UInt<16>("h361f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_12 = bits(_wnList_res_re_T_96, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_12 = bits(_wnList_res_re_T_96, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_12 = bits(_wnList_res_re_T_96, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_12 = eq(wnList_res_re_rawIn_expIn_12, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_12 = eq(wnList_res_re_rawIn_fractIn_12, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_216 = bits(wnList_res_re_rawIn_fractIn_12, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_217 = bits(wnList_res_re_rawIn_fractIn_12, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_218 = bits(wnList_res_re_rawIn_fractIn_12, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_219 = bits(wnList_res_re_rawIn_fractIn_12, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_220 = bits(wnList_res_re_rawIn_fractIn_12, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_221 = bits(wnList_res_re_rawIn_fractIn_12, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_222 = bits(wnList_res_re_rawIn_fractIn_12, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_223 = bits(wnList_res_re_rawIn_fractIn_12, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_224 = bits(wnList_res_re_rawIn_fractIn_12, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_225 = bits(wnList_res_re_rawIn_fractIn_12, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_226 = mux(_wnList_res_re_rawIn_normDist_T_217, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_227 = mux(_wnList_res_re_rawIn_normDist_T_218, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_226) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_228 = mux(_wnList_res_re_rawIn_normDist_T_219, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_227) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_229 = mux(_wnList_res_re_rawIn_normDist_T_220, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_228) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_230 = mux(_wnList_res_re_rawIn_normDist_T_221, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_229) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_231 = mux(_wnList_res_re_rawIn_normDist_T_222, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_230) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_232 = mux(_wnList_res_re_rawIn_normDist_T_223, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_231) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_233 = mux(_wnList_res_re_rawIn_normDist_T_224, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_232) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_12 = mux(_wnList_res_re_rawIn_normDist_T_225, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_233) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_24 = dshl(wnList_res_re_rawIn_fractIn_12, wnList_res_re_rawIn_normDist_12) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_25 = bits(_wnList_res_re_rawIn_subnormFract_T_24, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_12 = shl(_wnList_res_re_rawIn_subnormFract_T_25, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_60 = xor(wnList_res_re_rawIn_normDist_12, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_61 = mux(wnList_res_re_rawIn_isZeroExpIn_12, _wnList_res_re_rawIn_adjustedExp_T_60, wnList_res_re_rawIn_expIn_12) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_62 = mux(wnList_res_re_rawIn_isZeroExpIn_12, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_63 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_62) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_64 = add(_wnList_res_re_rawIn_adjustedExp_T_61, _wnList_res_re_rawIn_adjustedExp_T_63) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_12 = tail(_wnList_res_re_rawIn_adjustedExp_T_64, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_12 = and(wnList_res_re_rawIn_isZeroExpIn_12, wnList_res_re_rawIn_isZeroFractIn_12) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_12 = bits(wnList_res_re_rawIn_adjustedExp_12, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_12 = eq(_wnList_res_re_rawIn_isSpecial_T_12, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_12 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_12 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_24 = eq(wnList_res_re_rawIn_isZeroFractIn_12, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_25 = and(wnList_res_re_rawIn_isSpecial_12, _wnList_res_re_rawIn_out_isNaN_T_24) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_12.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_25 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_12 = and(wnList_res_re_rawIn_isSpecial_12, wnList_res_re_rawIn_isZeroFractIn_12) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_12.isInf <= _wnList_res_re_rawIn_out_isInf_T_12 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_12.isZero <= wnList_res_re_rawIn_isZero_12 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_12.sign <= wnList_res_re_rawIn_sign_12 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_24 = bits(wnList_res_re_rawIn_adjustedExp_12, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_25 = cvt(_wnList_res_re_rawIn_out_sExp_T_24) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_12.sExp <= _wnList_res_re_rawIn_out_sExp_T_25 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_36 = eq(wnList_res_re_rawIn_isZero_12, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_37 = mux(wnList_res_re_rawIn_isZeroExpIn_12, wnList_res_re_rawIn_subnormFract_12, wnList_res_re_rawIn_fractIn_12) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_12 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_36) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_38 = cat(wnList_res_re_rawIn_out_sig_hi_12, _wnList_res_re_rawIn_out_sig_T_37) @[Cat.scala 33:92]
    wnList_res_re_rawIn_12.sig <= _wnList_res_re_rawIn_out_sig_T_38 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_97 = bits(wnList_res_re_rawIn_12.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_98 = mux(wnList_res_re_rawIn_12.isZero, UInt<3>("h0"), _wnList_res_re_T_97) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_99 = mux(wnList_res_re_rawIn_12.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_100 = or(_wnList_res_re_T_98, _wnList_res_re_T_99) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_101 = bits(wnList_res_re_rawIn_12.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_102 = bits(wnList_res_re_rawIn_12.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_12 = cat(_wnList_res_re_T_101, _wnList_res_re_T_102) @[Cat.scala 33:92]
    node wnList_res_re_hi_12 = cat(wnList_res_re_rawIn_12.sign, _wnList_res_re_T_100) @[Cat.scala 33:92]
    node _wnList_res_re_T_103 = cat(wnList_res_re_hi_12, wnList_res_re_lo_12) @[Cat.scala 33:92]
    node _wnList_res_re_T_104 = asUInt(asSInt(UInt<16>("h34a5"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_13 = bits(_wnList_res_re_T_104, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_13 = bits(_wnList_res_re_T_104, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_13 = bits(_wnList_res_re_T_104, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_13 = eq(wnList_res_re_rawIn_expIn_13, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_13 = eq(wnList_res_re_rawIn_fractIn_13, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_234 = bits(wnList_res_re_rawIn_fractIn_13, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_235 = bits(wnList_res_re_rawIn_fractIn_13, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_236 = bits(wnList_res_re_rawIn_fractIn_13, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_237 = bits(wnList_res_re_rawIn_fractIn_13, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_238 = bits(wnList_res_re_rawIn_fractIn_13, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_239 = bits(wnList_res_re_rawIn_fractIn_13, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_240 = bits(wnList_res_re_rawIn_fractIn_13, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_241 = bits(wnList_res_re_rawIn_fractIn_13, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_242 = bits(wnList_res_re_rawIn_fractIn_13, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_243 = bits(wnList_res_re_rawIn_fractIn_13, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_244 = mux(_wnList_res_re_rawIn_normDist_T_235, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_245 = mux(_wnList_res_re_rawIn_normDist_T_236, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_244) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_246 = mux(_wnList_res_re_rawIn_normDist_T_237, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_245) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_247 = mux(_wnList_res_re_rawIn_normDist_T_238, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_246) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_248 = mux(_wnList_res_re_rawIn_normDist_T_239, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_247) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_249 = mux(_wnList_res_re_rawIn_normDist_T_240, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_248) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_250 = mux(_wnList_res_re_rawIn_normDist_T_241, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_249) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_251 = mux(_wnList_res_re_rawIn_normDist_T_242, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_250) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_13 = mux(_wnList_res_re_rawIn_normDist_T_243, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_251) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_26 = dshl(wnList_res_re_rawIn_fractIn_13, wnList_res_re_rawIn_normDist_13) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_27 = bits(_wnList_res_re_rawIn_subnormFract_T_26, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_13 = shl(_wnList_res_re_rawIn_subnormFract_T_27, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_65 = xor(wnList_res_re_rawIn_normDist_13, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_66 = mux(wnList_res_re_rawIn_isZeroExpIn_13, _wnList_res_re_rawIn_adjustedExp_T_65, wnList_res_re_rawIn_expIn_13) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_67 = mux(wnList_res_re_rawIn_isZeroExpIn_13, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_68 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_67) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_69 = add(_wnList_res_re_rawIn_adjustedExp_T_66, _wnList_res_re_rawIn_adjustedExp_T_68) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_13 = tail(_wnList_res_re_rawIn_adjustedExp_T_69, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_13 = and(wnList_res_re_rawIn_isZeroExpIn_13, wnList_res_re_rawIn_isZeroFractIn_13) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_13 = bits(wnList_res_re_rawIn_adjustedExp_13, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_13 = eq(_wnList_res_re_rawIn_isSpecial_T_13, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_13 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_13 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_26 = eq(wnList_res_re_rawIn_isZeroFractIn_13, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_27 = and(wnList_res_re_rawIn_isSpecial_13, _wnList_res_re_rawIn_out_isNaN_T_26) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_13.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_27 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_13 = and(wnList_res_re_rawIn_isSpecial_13, wnList_res_re_rawIn_isZeroFractIn_13) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_13.isInf <= _wnList_res_re_rawIn_out_isInf_T_13 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_13.isZero <= wnList_res_re_rawIn_isZero_13 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_13.sign <= wnList_res_re_rawIn_sign_13 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_26 = bits(wnList_res_re_rawIn_adjustedExp_13, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_27 = cvt(_wnList_res_re_rawIn_out_sExp_T_26) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_13.sExp <= _wnList_res_re_rawIn_out_sExp_T_27 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_39 = eq(wnList_res_re_rawIn_isZero_13, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_40 = mux(wnList_res_re_rawIn_isZeroExpIn_13, wnList_res_re_rawIn_subnormFract_13, wnList_res_re_rawIn_fractIn_13) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_13 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_39) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_41 = cat(wnList_res_re_rawIn_out_sig_hi_13, _wnList_res_re_rawIn_out_sig_T_40) @[Cat.scala 33:92]
    wnList_res_re_rawIn_13.sig <= _wnList_res_re_rawIn_out_sig_T_41 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_105 = bits(wnList_res_re_rawIn_13.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_106 = mux(wnList_res_re_rawIn_13.isZero, UInt<3>("h0"), _wnList_res_re_T_105) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_107 = mux(wnList_res_re_rawIn_13.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_108 = or(_wnList_res_re_T_106, _wnList_res_re_T_107) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_109 = bits(wnList_res_re_rawIn_13.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_110 = bits(wnList_res_re_rawIn_13.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_13 = cat(_wnList_res_re_T_109, _wnList_res_re_T_110) @[Cat.scala 33:92]
    node wnList_res_re_hi_13 = cat(wnList_res_re_rawIn_13.sign, _wnList_res_re_T_108) @[Cat.scala 33:92]
    node _wnList_res_re_T_111 = cat(wnList_res_re_hi_13, wnList_res_re_lo_13) @[Cat.scala 33:92]
    node _wnList_res_re_T_112 = asUInt(asSInt(UInt<16>("h323e"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_14 = bits(_wnList_res_re_T_112, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_14 = bits(_wnList_res_re_T_112, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_14 = bits(_wnList_res_re_T_112, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_14 = eq(wnList_res_re_rawIn_expIn_14, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_14 = eq(wnList_res_re_rawIn_fractIn_14, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_252 = bits(wnList_res_re_rawIn_fractIn_14, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_253 = bits(wnList_res_re_rawIn_fractIn_14, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_254 = bits(wnList_res_re_rawIn_fractIn_14, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_255 = bits(wnList_res_re_rawIn_fractIn_14, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_256 = bits(wnList_res_re_rawIn_fractIn_14, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_257 = bits(wnList_res_re_rawIn_fractIn_14, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_258 = bits(wnList_res_re_rawIn_fractIn_14, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_259 = bits(wnList_res_re_rawIn_fractIn_14, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_260 = bits(wnList_res_re_rawIn_fractIn_14, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_261 = bits(wnList_res_re_rawIn_fractIn_14, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_262 = mux(_wnList_res_re_rawIn_normDist_T_253, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_263 = mux(_wnList_res_re_rawIn_normDist_T_254, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_262) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_264 = mux(_wnList_res_re_rawIn_normDist_T_255, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_263) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_265 = mux(_wnList_res_re_rawIn_normDist_T_256, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_264) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_266 = mux(_wnList_res_re_rawIn_normDist_T_257, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_265) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_267 = mux(_wnList_res_re_rawIn_normDist_T_258, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_266) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_268 = mux(_wnList_res_re_rawIn_normDist_T_259, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_267) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_269 = mux(_wnList_res_re_rawIn_normDist_T_260, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_268) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_14 = mux(_wnList_res_re_rawIn_normDist_T_261, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_269) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_28 = dshl(wnList_res_re_rawIn_fractIn_14, wnList_res_re_rawIn_normDist_14) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_29 = bits(_wnList_res_re_rawIn_subnormFract_T_28, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_14 = shl(_wnList_res_re_rawIn_subnormFract_T_29, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_70 = xor(wnList_res_re_rawIn_normDist_14, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_71 = mux(wnList_res_re_rawIn_isZeroExpIn_14, _wnList_res_re_rawIn_adjustedExp_T_70, wnList_res_re_rawIn_expIn_14) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_72 = mux(wnList_res_re_rawIn_isZeroExpIn_14, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_73 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_72) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_74 = add(_wnList_res_re_rawIn_adjustedExp_T_71, _wnList_res_re_rawIn_adjustedExp_T_73) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_14 = tail(_wnList_res_re_rawIn_adjustedExp_T_74, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_14 = and(wnList_res_re_rawIn_isZeroExpIn_14, wnList_res_re_rawIn_isZeroFractIn_14) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_14 = bits(wnList_res_re_rawIn_adjustedExp_14, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_14 = eq(_wnList_res_re_rawIn_isSpecial_T_14, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_14 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_14 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_28 = eq(wnList_res_re_rawIn_isZeroFractIn_14, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_29 = and(wnList_res_re_rawIn_isSpecial_14, _wnList_res_re_rawIn_out_isNaN_T_28) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_14.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_29 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_14 = and(wnList_res_re_rawIn_isSpecial_14, wnList_res_re_rawIn_isZeroFractIn_14) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_14.isInf <= _wnList_res_re_rawIn_out_isInf_T_14 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_14.isZero <= wnList_res_re_rawIn_isZero_14 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_14.sign <= wnList_res_re_rawIn_sign_14 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_28 = bits(wnList_res_re_rawIn_adjustedExp_14, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_29 = cvt(_wnList_res_re_rawIn_out_sExp_T_28) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_14.sExp <= _wnList_res_re_rawIn_out_sExp_T_29 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_42 = eq(wnList_res_re_rawIn_isZero_14, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_43 = mux(wnList_res_re_rawIn_isZeroExpIn_14, wnList_res_re_rawIn_subnormFract_14, wnList_res_re_rawIn_fractIn_14) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_14 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_42) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_44 = cat(wnList_res_re_rawIn_out_sig_hi_14, _wnList_res_re_rawIn_out_sig_T_43) @[Cat.scala 33:92]
    wnList_res_re_rawIn_14.sig <= _wnList_res_re_rawIn_out_sig_T_44 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_113 = bits(wnList_res_re_rawIn_14.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_114 = mux(wnList_res_re_rawIn_14.isZero, UInt<3>("h0"), _wnList_res_re_T_113) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_115 = mux(wnList_res_re_rawIn_14.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_116 = or(_wnList_res_re_T_114, _wnList_res_re_T_115) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_117 = bits(wnList_res_re_rawIn_14.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_118 = bits(wnList_res_re_rawIn_14.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_14 = cat(_wnList_res_re_T_117, _wnList_res_re_T_118) @[Cat.scala 33:92]
    node wnList_res_re_hi_14 = cat(wnList_res_re_rawIn_14.sign, _wnList_res_re_T_116) @[Cat.scala 33:92]
    node _wnList_res_re_T_119 = cat(wnList_res_re_hi_14, wnList_res_re_lo_14) @[Cat.scala 33:92]
    node _wnList_res_re_T_120 = asUInt(asSInt(UInt<16>("h2e45"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_15 = bits(_wnList_res_re_T_120, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_15 = bits(_wnList_res_re_T_120, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_15 = bits(_wnList_res_re_T_120, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_15 = eq(wnList_res_re_rawIn_expIn_15, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_15 = eq(wnList_res_re_rawIn_fractIn_15, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_270 = bits(wnList_res_re_rawIn_fractIn_15, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_271 = bits(wnList_res_re_rawIn_fractIn_15, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_272 = bits(wnList_res_re_rawIn_fractIn_15, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_273 = bits(wnList_res_re_rawIn_fractIn_15, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_274 = bits(wnList_res_re_rawIn_fractIn_15, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_275 = bits(wnList_res_re_rawIn_fractIn_15, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_276 = bits(wnList_res_re_rawIn_fractIn_15, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_277 = bits(wnList_res_re_rawIn_fractIn_15, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_278 = bits(wnList_res_re_rawIn_fractIn_15, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_279 = bits(wnList_res_re_rawIn_fractIn_15, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_280 = mux(_wnList_res_re_rawIn_normDist_T_271, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_281 = mux(_wnList_res_re_rawIn_normDist_T_272, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_280) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_282 = mux(_wnList_res_re_rawIn_normDist_T_273, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_281) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_283 = mux(_wnList_res_re_rawIn_normDist_T_274, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_282) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_284 = mux(_wnList_res_re_rawIn_normDist_T_275, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_283) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_285 = mux(_wnList_res_re_rawIn_normDist_T_276, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_284) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_286 = mux(_wnList_res_re_rawIn_normDist_T_277, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_285) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_287 = mux(_wnList_res_re_rawIn_normDist_T_278, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_286) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_15 = mux(_wnList_res_re_rawIn_normDist_T_279, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_287) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_30 = dshl(wnList_res_re_rawIn_fractIn_15, wnList_res_re_rawIn_normDist_15) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_31 = bits(_wnList_res_re_rawIn_subnormFract_T_30, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_15 = shl(_wnList_res_re_rawIn_subnormFract_T_31, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_75 = xor(wnList_res_re_rawIn_normDist_15, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_76 = mux(wnList_res_re_rawIn_isZeroExpIn_15, _wnList_res_re_rawIn_adjustedExp_T_75, wnList_res_re_rawIn_expIn_15) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_77 = mux(wnList_res_re_rawIn_isZeroExpIn_15, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_78 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_77) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_79 = add(_wnList_res_re_rawIn_adjustedExp_T_76, _wnList_res_re_rawIn_adjustedExp_T_78) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_15 = tail(_wnList_res_re_rawIn_adjustedExp_T_79, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_15 = and(wnList_res_re_rawIn_isZeroExpIn_15, wnList_res_re_rawIn_isZeroFractIn_15) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_15 = bits(wnList_res_re_rawIn_adjustedExp_15, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_15 = eq(_wnList_res_re_rawIn_isSpecial_T_15, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_15 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_15 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_30 = eq(wnList_res_re_rawIn_isZeroFractIn_15, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_31 = and(wnList_res_re_rawIn_isSpecial_15, _wnList_res_re_rawIn_out_isNaN_T_30) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_15.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_31 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_15 = and(wnList_res_re_rawIn_isSpecial_15, wnList_res_re_rawIn_isZeroFractIn_15) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_15.isInf <= _wnList_res_re_rawIn_out_isInf_T_15 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_15.isZero <= wnList_res_re_rawIn_isZero_15 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_15.sign <= wnList_res_re_rawIn_sign_15 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_30 = bits(wnList_res_re_rawIn_adjustedExp_15, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_31 = cvt(_wnList_res_re_rawIn_out_sExp_T_30) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_15.sExp <= _wnList_res_re_rawIn_out_sExp_T_31 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_45 = eq(wnList_res_re_rawIn_isZero_15, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_46 = mux(wnList_res_re_rawIn_isZeroExpIn_15, wnList_res_re_rawIn_subnormFract_15, wnList_res_re_rawIn_fractIn_15) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_15 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_45) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_47 = cat(wnList_res_re_rawIn_out_sig_hi_15, _wnList_res_re_rawIn_out_sig_T_46) @[Cat.scala 33:92]
    wnList_res_re_rawIn_15.sig <= _wnList_res_re_rawIn_out_sig_T_47 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_121 = bits(wnList_res_re_rawIn_15.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_122 = mux(wnList_res_re_rawIn_15.isZero, UInt<3>("h0"), _wnList_res_re_T_121) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_123 = mux(wnList_res_re_rawIn_15.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_124 = or(_wnList_res_re_T_122, _wnList_res_re_T_123) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_125 = bits(wnList_res_re_rawIn_15.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_126 = bits(wnList_res_re_rawIn_15.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_15 = cat(_wnList_res_re_T_125, _wnList_res_re_T_126) @[Cat.scala 33:92]
    node wnList_res_re_hi_15 = cat(wnList_res_re_rawIn_15.sign, _wnList_res_re_T_124) @[Cat.scala 33:92]
    node _wnList_res_re_T_127 = cat(wnList_res_re_hi_15, wnList_res_re_lo_15) @[Cat.scala 33:92]
    node _wnList_res_re_T_128 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_16 = bits(_wnList_res_re_T_128, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_16 = bits(_wnList_res_re_T_128, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_16 = bits(_wnList_res_re_T_128, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_16 = eq(wnList_res_re_rawIn_expIn_16, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_16 = eq(wnList_res_re_rawIn_fractIn_16, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_288 = bits(wnList_res_re_rawIn_fractIn_16, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_289 = bits(wnList_res_re_rawIn_fractIn_16, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_290 = bits(wnList_res_re_rawIn_fractIn_16, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_291 = bits(wnList_res_re_rawIn_fractIn_16, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_292 = bits(wnList_res_re_rawIn_fractIn_16, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_293 = bits(wnList_res_re_rawIn_fractIn_16, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_294 = bits(wnList_res_re_rawIn_fractIn_16, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_295 = bits(wnList_res_re_rawIn_fractIn_16, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_296 = bits(wnList_res_re_rawIn_fractIn_16, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_297 = bits(wnList_res_re_rawIn_fractIn_16, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_298 = mux(_wnList_res_re_rawIn_normDist_T_289, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_299 = mux(_wnList_res_re_rawIn_normDist_T_290, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_298) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_300 = mux(_wnList_res_re_rawIn_normDist_T_291, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_299) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_301 = mux(_wnList_res_re_rawIn_normDist_T_292, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_300) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_302 = mux(_wnList_res_re_rawIn_normDist_T_293, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_301) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_303 = mux(_wnList_res_re_rawIn_normDist_T_294, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_302) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_304 = mux(_wnList_res_re_rawIn_normDist_T_295, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_303) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_305 = mux(_wnList_res_re_rawIn_normDist_T_296, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_304) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_16 = mux(_wnList_res_re_rawIn_normDist_T_297, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_305) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_32 = dshl(wnList_res_re_rawIn_fractIn_16, wnList_res_re_rawIn_normDist_16) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_33 = bits(_wnList_res_re_rawIn_subnormFract_T_32, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_16 = shl(_wnList_res_re_rawIn_subnormFract_T_33, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_80 = xor(wnList_res_re_rawIn_normDist_16, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_81 = mux(wnList_res_re_rawIn_isZeroExpIn_16, _wnList_res_re_rawIn_adjustedExp_T_80, wnList_res_re_rawIn_expIn_16) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_82 = mux(wnList_res_re_rawIn_isZeroExpIn_16, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_83 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_82) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_84 = add(_wnList_res_re_rawIn_adjustedExp_T_81, _wnList_res_re_rawIn_adjustedExp_T_83) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_16 = tail(_wnList_res_re_rawIn_adjustedExp_T_84, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_16 = and(wnList_res_re_rawIn_isZeroExpIn_16, wnList_res_re_rawIn_isZeroFractIn_16) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_16 = bits(wnList_res_re_rawIn_adjustedExp_16, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_16 = eq(_wnList_res_re_rawIn_isSpecial_T_16, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_16 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_16 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_32 = eq(wnList_res_re_rawIn_isZeroFractIn_16, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_33 = and(wnList_res_re_rawIn_isSpecial_16, _wnList_res_re_rawIn_out_isNaN_T_32) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_16.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_33 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_16 = and(wnList_res_re_rawIn_isSpecial_16, wnList_res_re_rawIn_isZeroFractIn_16) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_16.isInf <= _wnList_res_re_rawIn_out_isInf_T_16 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_16.isZero <= wnList_res_re_rawIn_isZero_16 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_16.sign <= wnList_res_re_rawIn_sign_16 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_32 = bits(wnList_res_re_rawIn_adjustedExp_16, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_33 = cvt(_wnList_res_re_rawIn_out_sExp_T_32) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_16.sExp <= _wnList_res_re_rawIn_out_sExp_T_33 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_48 = eq(wnList_res_re_rawIn_isZero_16, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_49 = mux(wnList_res_re_rawIn_isZeroExpIn_16, wnList_res_re_rawIn_subnormFract_16, wnList_res_re_rawIn_fractIn_16) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_16 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_48) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_50 = cat(wnList_res_re_rawIn_out_sig_hi_16, _wnList_res_re_rawIn_out_sig_T_49) @[Cat.scala 33:92]
    wnList_res_re_rawIn_16.sig <= _wnList_res_re_rawIn_out_sig_T_50 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_129 = bits(wnList_res_re_rawIn_16.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_130 = mux(wnList_res_re_rawIn_16.isZero, UInt<3>("h0"), _wnList_res_re_T_129) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_131 = mux(wnList_res_re_rawIn_16.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_132 = or(_wnList_res_re_T_130, _wnList_res_re_T_131) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_133 = bits(wnList_res_re_rawIn_16.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_134 = bits(wnList_res_re_rawIn_16.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_16 = cat(_wnList_res_re_T_133, _wnList_res_re_T_134) @[Cat.scala 33:92]
    node wnList_res_re_hi_16 = cat(wnList_res_re_rawIn_16.sign, _wnList_res_re_T_132) @[Cat.scala 33:92]
    node _wnList_res_re_T_135 = cat(wnList_res_re_hi_16, wnList_res_re_lo_16) @[Cat.scala 33:92]
    node _wnList_res_re_T_136 = asUInt(asSInt(UInt<16>("hae45"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_17 = bits(_wnList_res_re_T_136, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_17 = bits(_wnList_res_re_T_136, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_17 = bits(_wnList_res_re_T_136, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_17 = eq(wnList_res_re_rawIn_expIn_17, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_17 = eq(wnList_res_re_rawIn_fractIn_17, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_306 = bits(wnList_res_re_rawIn_fractIn_17, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_307 = bits(wnList_res_re_rawIn_fractIn_17, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_308 = bits(wnList_res_re_rawIn_fractIn_17, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_309 = bits(wnList_res_re_rawIn_fractIn_17, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_310 = bits(wnList_res_re_rawIn_fractIn_17, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_311 = bits(wnList_res_re_rawIn_fractIn_17, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_312 = bits(wnList_res_re_rawIn_fractIn_17, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_313 = bits(wnList_res_re_rawIn_fractIn_17, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_314 = bits(wnList_res_re_rawIn_fractIn_17, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_315 = bits(wnList_res_re_rawIn_fractIn_17, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_316 = mux(_wnList_res_re_rawIn_normDist_T_307, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_317 = mux(_wnList_res_re_rawIn_normDist_T_308, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_316) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_318 = mux(_wnList_res_re_rawIn_normDist_T_309, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_317) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_319 = mux(_wnList_res_re_rawIn_normDist_T_310, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_318) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_320 = mux(_wnList_res_re_rawIn_normDist_T_311, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_319) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_321 = mux(_wnList_res_re_rawIn_normDist_T_312, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_320) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_322 = mux(_wnList_res_re_rawIn_normDist_T_313, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_321) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_323 = mux(_wnList_res_re_rawIn_normDist_T_314, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_322) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_17 = mux(_wnList_res_re_rawIn_normDist_T_315, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_323) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_34 = dshl(wnList_res_re_rawIn_fractIn_17, wnList_res_re_rawIn_normDist_17) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_35 = bits(_wnList_res_re_rawIn_subnormFract_T_34, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_17 = shl(_wnList_res_re_rawIn_subnormFract_T_35, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_85 = xor(wnList_res_re_rawIn_normDist_17, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_86 = mux(wnList_res_re_rawIn_isZeroExpIn_17, _wnList_res_re_rawIn_adjustedExp_T_85, wnList_res_re_rawIn_expIn_17) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_87 = mux(wnList_res_re_rawIn_isZeroExpIn_17, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_88 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_87) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_89 = add(_wnList_res_re_rawIn_adjustedExp_T_86, _wnList_res_re_rawIn_adjustedExp_T_88) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_17 = tail(_wnList_res_re_rawIn_adjustedExp_T_89, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_17 = and(wnList_res_re_rawIn_isZeroExpIn_17, wnList_res_re_rawIn_isZeroFractIn_17) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_17 = bits(wnList_res_re_rawIn_adjustedExp_17, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_17 = eq(_wnList_res_re_rawIn_isSpecial_T_17, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_17 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_17 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_34 = eq(wnList_res_re_rawIn_isZeroFractIn_17, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_35 = and(wnList_res_re_rawIn_isSpecial_17, _wnList_res_re_rawIn_out_isNaN_T_34) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_17.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_35 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_17 = and(wnList_res_re_rawIn_isSpecial_17, wnList_res_re_rawIn_isZeroFractIn_17) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_17.isInf <= _wnList_res_re_rawIn_out_isInf_T_17 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_17.isZero <= wnList_res_re_rawIn_isZero_17 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_17.sign <= wnList_res_re_rawIn_sign_17 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_34 = bits(wnList_res_re_rawIn_adjustedExp_17, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_35 = cvt(_wnList_res_re_rawIn_out_sExp_T_34) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_17.sExp <= _wnList_res_re_rawIn_out_sExp_T_35 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_51 = eq(wnList_res_re_rawIn_isZero_17, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_52 = mux(wnList_res_re_rawIn_isZeroExpIn_17, wnList_res_re_rawIn_subnormFract_17, wnList_res_re_rawIn_fractIn_17) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_17 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_51) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_53 = cat(wnList_res_re_rawIn_out_sig_hi_17, _wnList_res_re_rawIn_out_sig_T_52) @[Cat.scala 33:92]
    wnList_res_re_rawIn_17.sig <= _wnList_res_re_rawIn_out_sig_T_53 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_137 = bits(wnList_res_re_rawIn_17.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_138 = mux(wnList_res_re_rawIn_17.isZero, UInt<3>("h0"), _wnList_res_re_T_137) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_139 = mux(wnList_res_re_rawIn_17.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_140 = or(_wnList_res_re_T_138, _wnList_res_re_T_139) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_141 = bits(wnList_res_re_rawIn_17.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_142 = bits(wnList_res_re_rawIn_17.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_17 = cat(_wnList_res_re_T_141, _wnList_res_re_T_142) @[Cat.scala 33:92]
    node wnList_res_re_hi_17 = cat(wnList_res_re_rawIn_17.sign, _wnList_res_re_T_140) @[Cat.scala 33:92]
    node _wnList_res_re_T_143 = cat(wnList_res_re_hi_17, wnList_res_re_lo_17) @[Cat.scala 33:92]
    node _wnList_res_re_T_144 = asUInt(asSInt(UInt<16>("hb23e"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_18 = bits(_wnList_res_re_T_144, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_18 = bits(_wnList_res_re_T_144, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_18 = bits(_wnList_res_re_T_144, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_18 = eq(wnList_res_re_rawIn_expIn_18, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_18 = eq(wnList_res_re_rawIn_fractIn_18, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_324 = bits(wnList_res_re_rawIn_fractIn_18, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_325 = bits(wnList_res_re_rawIn_fractIn_18, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_326 = bits(wnList_res_re_rawIn_fractIn_18, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_327 = bits(wnList_res_re_rawIn_fractIn_18, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_328 = bits(wnList_res_re_rawIn_fractIn_18, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_329 = bits(wnList_res_re_rawIn_fractIn_18, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_330 = bits(wnList_res_re_rawIn_fractIn_18, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_331 = bits(wnList_res_re_rawIn_fractIn_18, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_332 = bits(wnList_res_re_rawIn_fractIn_18, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_333 = bits(wnList_res_re_rawIn_fractIn_18, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_334 = mux(_wnList_res_re_rawIn_normDist_T_325, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_335 = mux(_wnList_res_re_rawIn_normDist_T_326, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_334) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_336 = mux(_wnList_res_re_rawIn_normDist_T_327, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_335) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_337 = mux(_wnList_res_re_rawIn_normDist_T_328, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_336) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_338 = mux(_wnList_res_re_rawIn_normDist_T_329, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_337) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_339 = mux(_wnList_res_re_rawIn_normDist_T_330, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_338) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_340 = mux(_wnList_res_re_rawIn_normDist_T_331, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_339) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_341 = mux(_wnList_res_re_rawIn_normDist_T_332, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_340) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_18 = mux(_wnList_res_re_rawIn_normDist_T_333, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_341) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_36 = dshl(wnList_res_re_rawIn_fractIn_18, wnList_res_re_rawIn_normDist_18) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_37 = bits(_wnList_res_re_rawIn_subnormFract_T_36, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_18 = shl(_wnList_res_re_rawIn_subnormFract_T_37, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_90 = xor(wnList_res_re_rawIn_normDist_18, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_91 = mux(wnList_res_re_rawIn_isZeroExpIn_18, _wnList_res_re_rawIn_adjustedExp_T_90, wnList_res_re_rawIn_expIn_18) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_92 = mux(wnList_res_re_rawIn_isZeroExpIn_18, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_93 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_92) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_94 = add(_wnList_res_re_rawIn_adjustedExp_T_91, _wnList_res_re_rawIn_adjustedExp_T_93) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_18 = tail(_wnList_res_re_rawIn_adjustedExp_T_94, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_18 = and(wnList_res_re_rawIn_isZeroExpIn_18, wnList_res_re_rawIn_isZeroFractIn_18) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_18 = bits(wnList_res_re_rawIn_adjustedExp_18, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_18 = eq(_wnList_res_re_rawIn_isSpecial_T_18, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_18 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_18 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_36 = eq(wnList_res_re_rawIn_isZeroFractIn_18, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_37 = and(wnList_res_re_rawIn_isSpecial_18, _wnList_res_re_rawIn_out_isNaN_T_36) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_18.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_37 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_18 = and(wnList_res_re_rawIn_isSpecial_18, wnList_res_re_rawIn_isZeroFractIn_18) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_18.isInf <= _wnList_res_re_rawIn_out_isInf_T_18 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_18.isZero <= wnList_res_re_rawIn_isZero_18 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_18.sign <= wnList_res_re_rawIn_sign_18 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_36 = bits(wnList_res_re_rawIn_adjustedExp_18, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_37 = cvt(_wnList_res_re_rawIn_out_sExp_T_36) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_18.sExp <= _wnList_res_re_rawIn_out_sExp_T_37 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_54 = eq(wnList_res_re_rawIn_isZero_18, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_55 = mux(wnList_res_re_rawIn_isZeroExpIn_18, wnList_res_re_rawIn_subnormFract_18, wnList_res_re_rawIn_fractIn_18) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_18 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_54) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_56 = cat(wnList_res_re_rawIn_out_sig_hi_18, _wnList_res_re_rawIn_out_sig_T_55) @[Cat.scala 33:92]
    wnList_res_re_rawIn_18.sig <= _wnList_res_re_rawIn_out_sig_T_56 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_145 = bits(wnList_res_re_rawIn_18.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_146 = mux(wnList_res_re_rawIn_18.isZero, UInt<3>("h0"), _wnList_res_re_T_145) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_147 = mux(wnList_res_re_rawIn_18.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_148 = or(_wnList_res_re_T_146, _wnList_res_re_T_147) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_149 = bits(wnList_res_re_rawIn_18.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_150 = bits(wnList_res_re_rawIn_18.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_18 = cat(_wnList_res_re_T_149, _wnList_res_re_T_150) @[Cat.scala 33:92]
    node wnList_res_re_hi_18 = cat(wnList_res_re_rawIn_18.sign, _wnList_res_re_T_148) @[Cat.scala 33:92]
    node _wnList_res_re_T_151 = cat(wnList_res_re_hi_18, wnList_res_re_lo_18) @[Cat.scala 33:92]
    node _wnList_res_re_T_152 = asUInt(asSInt(UInt<16>("hb4a5"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_19 = bits(_wnList_res_re_T_152, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_19 = bits(_wnList_res_re_T_152, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_19 = bits(_wnList_res_re_T_152, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_19 = eq(wnList_res_re_rawIn_expIn_19, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_19 = eq(wnList_res_re_rawIn_fractIn_19, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_342 = bits(wnList_res_re_rawIn_fractIn_19, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_343 = bits(wnList_res_re_rawIn_fractIn_19, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_344 = bits(wnList_res_re_rawIn_fractIn_19, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_345 = bits(wnList_res_re_rawIn_fractIn_19, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_346 = bits(wnList_res_re_rawIn_fractIn_19, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_347 = bits(wnList_res_re_rawIn_fractIn_19, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_348 = bits(wnList_res_re_rawIn_fractIn_19, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_349 = bits(wnList_res_re_rawIn_fractIn_19, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_350 = bits(wnList_res_re_rawIn_fractIn_19, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_351 = bits(wnList_res_re_rawIn_fractIn_19, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_352 = mux(_wnList_res_re_rawIn_normDist_T_343, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_353 = mux(_wnList_res_re_rawIn_normDist_T_344, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_352) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_354 = mux(_wnList_res_re_rawIn_normDist_T_345, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_353) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_355 = mux(_wnList_res_re_rawIn_normDist_T_346, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_354) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_356 = mux(_wnList_res_re_rawIn_normDist_T_347, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_355) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_357 = mux(_wnList_res_re_rawIn_normDist_T_348, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_356) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_358 = mux(_wnList_res_re_rawIn_normDist_T_349, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_357) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_359 = mux(_wnList_res_re_rawIn_normDist_T_350, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_358) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_19 = mux(_wnList_res_re_rawIn_normDist_T_351, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_359) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_38 = dshl(wnList_res_re_rawIn_fractIn_19, wnList_res_re_rawIn_normDist_19) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_39 = bits(_wnList_res_re_rawIn_subnormFract_T_38, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_19 = shl(_wnList_res_re_rawIn_subnormFract_T_39, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_95 = xor(wnList_res_re_rawIn_normDist_19, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_96 = mux(wnList_res_re_rawIn_isZeroExpIn_19, _wnList_res_re_rawIn_adjustedExp_T_95, wnList_res_re_rawIn_expIn_19) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_97 = mux(wnList_res_re_rawIn_isZeroExpIn_19, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_98 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_97) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_99 = add(_wnList_res_re_rawIn_adjustedExp_T_96, _wnList_res_re_rawIn_adjustedExp_T_98) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_19 = tail(_wnList_res_re_rawIn_adjustedExp_T_99, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_19 = and(wnList_res_re_rawIn_isZeroExpIn_19, wnList_res_re_rawIn_isZeroFractIn_19) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_19 = bits(wnList_res_re_rawIn_adjustedExp_19, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_19 = eq(_wnList_res_re_rawIn_isSpecial_T_19, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_19 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_19 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_38 = eq(wnList_res_re_rawIn_isZeroFractIn_19, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_39 = and(wnList_res_re_rawIn_isSpecial_19, _wnList_res_re_rawIn_out_isNaN_T_38) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_19.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_39 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_19 = and(wnList_res_re_rawIn_isSpecial_19, wnList_res_re_rawIn_isZeroFractIn_19) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_19.isInf <= _wnList_res_re_rawIn_out_isInf_T_19 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_19.isZero <= wnList_res_re_rawIn_isZero_19 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_19.sign <= wnList_res_re_rawIn_sign_19 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_38 = bits(wnList_res_re_rawIn_adjustedExp_19, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_39 = cvt(_wnList_res_re_rawIn_out_sExp_T_38) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_19.sExp <= _wnList_res_re_rawIn_out_sExp_T_39 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_57 = eq(wnList_res_re_rawIn_isZero_19, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_58 = mux(wnList_res_re_rawIn_isZeroExpIn_19, wnList_res_re_rawIn_subnormFract_19, wnList_res_re_rawIn_fractIn_19) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_19 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_57) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_59 = cat(wnList_res_re_rawIn_out_sig_hi_19, _wnList_res_re_rawIn_out_sig_T_58) @[Cat.scala 33:92]
    wnList_res_re_rawIn_19.sig <= _wnList_res_re_rawIn_out_sig_T_59 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_153 = bits(wnList_res_re_rawIn_19.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_154 = mux(wnList_res_re_rawIn_19.isZero, UInt<3>("h0"), _wnList_res_re_T_153) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_155 = mux(wnList_res_re_rawIn_19.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_156 = or(_wnList_res_re_T_154, _wnList_res_re_T_155) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_157 = bits(wnList_res_re_rawIn_19.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_158 = bits(wnList_res_re_rawIn_19.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_19 = cat(_wnList_res_re_T_157, _wnList_res_re_T_158) @[Cat.scala 33:92]
    node wnList_res_re_hi_19 = cat(wnList_res_re_rawIn_19.sign, _wnList_res_re_T_156) @[Cat.scala 33:92]
    node _wnList_res_re_T_159 = cat(wnList_res_re_hi_19, wnList_res_re_lo_19) @[Cat.scala 33:92]
    node _wnList_res_re_T_160 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_20 = bits(_wnList_res_re_T_160, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_20 = bits(_wnList_res_re_T_160, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_20 = bits(_wnList_res_re_T_160, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_20 = eq(wnList_res_re_rawIn_expIn_20, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_20 = eq(wnList_res_re_rawIn_fractIn_20, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_360 = bits(wnList_res_re_rawIn_fractIn_20, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_361 = bits(wnList_res_re_rawIn_fractIn_20, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_362 = bits(wnList_res_re_rawIn_fractIn_20, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_363 = bits(wnList_res_re_rawIn_fractIn_20, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_364 = bits(wnList_res_re_rawIn_fractIn_20, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_365 = bits(wnList_res_re_rawIn_fractIn_20, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_366 = bits(wnList_res_re_rawIn_fractIn_20, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_367 = bits(wnList_res_re_rawIn_fractIn_20, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_368 = bits(wnList_res_re_rawIn_fractIn_20, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_369 = bits(wnList_res_re_rawIn_fractIn_20, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_370 = mux(_wnList_res_re_rawIn_normDist_T_361, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_371 = mux(_wnList_res_re_rawIn_normDist_T_362, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_370) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_372 = mux(_wnList_res_re_rawIn_normDist_T_363, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_371) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_373 = mux(_wnList_res_re_rawIn_normDist_T_364, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_372) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_374 = mux(_wnList_res_re_rawIn_normDist_T_365, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_373) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_375 = mux(_wnList_res_re_rawIn_normDist_T_366, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_374) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_376 = mux(_wnList_res_re_rawIn_normDist_T_367, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_375) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_377 = mux(_wnList_res_re_rawIn_normDist_T_368, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_376) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_20 = mux(_wnList_res_re_rawIn_normDist_T_369, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_377) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_40 = dshl(wnList_res_re_rawIn_fractIn_20, wnList_res_re_rawIn_normDist_20) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_41 = bits(_wnList_res_re_rawIn_subnormFract_T_40, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_20 = shl(_wnList_res_re_rawIn_subnormFract_T_41, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_100 = xor(wnList_res_re_rawIn_normDist_20, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_101 = mux(wnList_res_re_rawIn_isZeroExpIn_20, _wnList_res_re_rawIn_adjustedExp_T_100, wnList_res_re_rawIn_expIn_20) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_102 = mux(wnList_res_re_rawIn_isZeroExpIn_20, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_103 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_102) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_104 = add(_wnList_res_re_rawIn_adjustedExp_T_101, _wnList_res_re_rawIn_adjustedExp_T_103) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_20 = tail(_wnList_res_re_rawIn_adjustedExp_T_104, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_20 = and(wnList_res_re_rawIn_isZeroExpIn_20, wnList_res_re_rawIn_isZeroFractIn_20) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_20 = bits(wnList_res_re_rawIn_adjustedExp_20, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_20 = eq(_wnList_res_re_rawIn_isSpecial_T_20, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_20 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_20 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_40 = eq(wnList_res_re_rawIn_isZeroFractIn_20, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_41 = and(wnList_res_re_rawIn_isSpecial_20, _wnList_res_re_rawIn_out_isNaN_T_40) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_20.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_41 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_20 = and(wnList_res_re_rawIn_isSpecial_20, wnList_res_re_rawIn_isZeroFractIn_20) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_20.isInf <= _wnList_res_re_rawIn_out_isInf_T_20 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_20.isZero <= wnList_res_re_rawIn_isZero_20 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_20.sign <= wnList_res_re_rawIn_sign_20 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_40 = bits(wnList_res_re_rawIn_adjustedExp_20, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_41 = cvt(_wnList_res_re_rawIn_out_sExp_T_40) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_20.sExp <= _wnList_res_re_rawIn_out_sExp_T_41 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_60 = eq(wnList_res_re_rawIn_isZero_20, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_61 = mux(wnList_res_re_rawIn_isZeroExpIn_20, wnList_res_re_rawIn_subnormFract_20, wnList_res_re_rawIn_fractIn_20) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_20 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_60) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_62 = cat(wnList_res_re_rawIn_out_sig_hi_20, _wnList_res_re_rawIn_out_sig_T_61) @[Cat.scala 33:92]
    wnList_res_re_rawIn_20.sig <= _wnList_res_re_rawIn_out_sig_T_62 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_161 = bits(wnList_res_re_rawIn_20.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_162 = mux(wnList_res_re_rawIn_20.isZero, UInt<3>("h0"), _wnList_res_re_T_161) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_163 = mux(wnList_res_re_rawIn_20.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_164 = or(_wnList_res_re_T_162, _wnList_res_re_T_163) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_165 = bits(wnList_res_re_rawIn_20.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_166 = bits(wnList_res_re_rawIn_20.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_20 = cat(_wnList_res_re_T_165, _wnList_res_re_T_166) @[Cat.scala 33:92]
    node wnList_res_re_hi_20 = cat(wnList_res_re_rawIn_20.sign, _wnList_res_re_T_164) @[Cat.scala 33:92]
    node _wnList_res_re_T_167 = cat(wnList_res_re_hi_20, wnList_res_re_lo_20) @[Cat.scala 33:92]
    node _wnList_res_re_T_168 = asUInt(asSInt(UInt<16>("hb78a"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_21 = bits(_wnList_res_re_T_168, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_21 = bits(_wnList_res_re_T_168, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_21 = bits(_wnList_res_re_T_168, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_21 = eq(wnList_res_re_rawIn_expIn_21, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_21 = eq(wnList_res_re_rawIn_fractIn_21, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_378 = bits(wnList_res_re_rawIn_fractIn_21, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_379 = bits(wnList_res_re_rawIn_fractIn_21, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_380 = bits(wnList_res_re_rawIn_fractIn_21, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_381 = bits(wnList_res_re_rawIn_fractIn_21, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_382 = bits(wnList_res_re_rawIn_fractIn_21, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_383 = bits(wnList_res_re_rawIn_fractIn_21, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_384 = bits(wnList_res_re_rawIn_fractIn_21, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_385 = bits(wnList_res_re_rawIn_fractIn_21, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_386 = bits(wnList_res_re_rawIn_fractIn_21, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_387 = bits(wnList_res_re_rawIn_fractIn_21, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_388 = mux(_wnList_res_re_rawIn_normDist_T_379, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_389 = mux(_wnList_res_re_rawIn_normDist_T_380, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_388) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_390 = mux(_wnList_res_re_rawIn_normDist_T_381, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_389) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_391 = mux(_wnList_res_re_rawIn_normDist_T_382, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_390) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_392 = mux(_wnList_res_re_rawIn_normDist_T_383, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_391) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_393 = mux(_wnList_res_re_rawIn_normDist_T_384, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_392) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_394 = mux(_wnList_res_re_rawIn_normDist_T_385, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_393) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_395 = mux(_wnList_res_re_rawIn_normDist_T_386, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_394) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_21 = mux(_wnList_res_re_rawIn_normDist_T_387, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_395) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_42 = dshl(wnList_res_re_rawIn_fractIn_21, wnList_res_re_rawIn_normDist_21) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_43 = bits(_wnList_res_re_rawIn_subnormFract_T_42, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_21 = shl(_wnList_res_re_rawIn_subnormFract_T_43, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_105 = xor(wnList_res_re_rawIn_normDist_21, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_106 = mux(wnList_res_re_rawIn_isZeroExpIn_21, _wnList_res_re_rawIn_adjustedExp_T_105, wnList_res_re_rawIn_expIn_21) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_107 = mux(wnList_res_re_rawIn_isZeroExpIn_21, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_108 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_107) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_109 = add(_wnList_res_re_rawIn_adjustedExp_T_106, _wnList_res_re_rawIn_adjustedExp_T_108) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_21 = tail(_wnList_res_re_rawIn_adjustedExp_T_109, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_21 = and(wnList_res_re_rawIn_isZeroExpIn_21, wnList_res_re_rawIn_isZeroFractIn_21) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_21 = bits(wnList_res_re_rawIn_adjustedExp_21, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_21 = eq(_wnList_res_re_rawIn_isSpecial_T_21, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_21 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_21 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_42 = eq(wnList_res_re_rawIn_isZeroFractIn_21, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_43 = and(wnList_res_re_rawIn_isSpecial_21, _wnList_res_re_rawIn_out_isNaN_T_42) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_21.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_43 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_21 = and(wnList_res_re_rawIn_isSpecial_21, wnList_res_re_rawIn_isZeroFractIn_21) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_21.isInf <= _wnList_res_re_rawIn_out_isInf_T_21 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_21.isZero <= wnList_res_re_rawIn_isZero_21 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_21.sign <= wnList_res_re_rawIn_sign_21 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_42 = bits(wnList_res_re_rawIn_adjustedExp_21, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_43 = cvt(_wnList_res_re_rawIn_out_sExp_T_42) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_21.sExp <= _wnList_res_re_rawIn_out_sExp_T_43 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_63 = eq(wnList_res_re_rawIn_isZero_21, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_64 = mux(wnList_res_re_rawIn_isZeroExpIn_21, wnList_res_re_rawIn_subnormFract_21, wnList_res_re_rawIn_fractIn_21) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_21 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_63) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_65 = cat(wnList_res_re_rawIn_out_sig_hi_21, _wnList_res_re_rawIn_out_sig_T_64) @[Cat.scala 33:92]
    wnList_res_re_rawIn_21.sig <= _wnList_res_re_rawIn_out_sig_T_65 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_169 = bits(wnList_res_re_rawIn_21.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_170 = mux(wnList_res_re_rawIn_21.isZero, UInt<3>("h0"), _wnList_res_re_T_169) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_171 = mux(wnList_res_re_rawIn_21.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_172 = or(_wnList_res_re_T_170, _wnList_res_re_T_171) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_173 = bits(wnList_res_re_rawIn_21.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_174 = bits(wnList_res_re_rawIn_21.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_21 = cat(_wnList_res_re_T_173, _wnList_res_re_T_174) @[Cat.scala 33:92]
    node wnList_res_re_hi_21 = cat(wnList_res_re_rawIn_21.sign, _wnList_res_re_T_172) @[Cat.scala 33:92]
    node _wnList_res_re_T_175 = cat(wnList_res_re_hi_21, wnList_res_re_lo_21) @[Cat.scala 33:92]
    node _wnList_res_re_T_176 = asUInt(asSInt(UInt<16>("hb871"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_22 = bits(_wnList_res_re_T_176, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_22 = bits(_wnList_res_re_T_176, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_22 = bits(_wnList_res_re_T_176, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_22 = eq(wnList_res_re_rawIn_expIn_22, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_22 = eq(wnList_res_re_rawIn_fractIn_22, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_396 = bits(wnList_res_re_rawIn_fractIn_22, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_397 = bits(wnList_res_re_rawIn_fractIn_22, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_398 = bits(wnList_res_re_rawIn_fractIn_22, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_399 = bits(wnList_res_re_rawIn_fractIn_22, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_400 = bits(wnList_res_re_rawIn_fractIn_22, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_401 = bits(wnList_res_re_rawIn_fractIn_22, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_402 = bits(wnList_res_re_rawIn_fractIn_22, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_403 = bits(wnList_res_re_rawIn_fractIn_22, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_404 = bits(wnList_res_re_rawIn_fractIn_22, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_405 = bits(wnList_res_re_rawIn_fractIn_22, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_406 = mux(_wnList_res_re_rawIn_normDist_T_397, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_407 = mux(_wnList_res_re_rawIn_normDist_T_398, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_406) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_408 = mux(_wnList_res_re_rawIn_normDist_T_399, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_407) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_409 = mux(_wnList_res_re_rawIn_normDist_T_400, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_408) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_410 = mux(_wnList_res_re_rawIn_normDist_T_401, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_409) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_411 = mux(_wnList_res_re_rawIn_normDist_T_402, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_410) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_412 = mux(_wnList_res_re_rawIn_normDist_T_403, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_411) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_413 = mux(_wnList_res_re_rawIn_normDist_T_404, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_412) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_22 = mux(_wnList_res_re_rawIn_normDist_T_405, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_413) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_44 = dshl(wnList_res_re_rawIn_fractIn_22, wnList_res_re_rawIn_normDist_22) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_45 = bits(_wnList_res_re_rawIn_subnormFract_T_44, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_22 = shl(_wnList_res_re_rawIn_subnormFract_T_45, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_110 = xor(wnList_res_re_rawIn_normDist_22, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_111 = mux(wnList_res_re_rawIn_isZeroExpIn_22, _wnList_res_re_rawIn_adjustedExp_T_110, wnList_res_re_rawIn_expIn_22) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_112 = mux(wnList_res_re_rawIn_isZeroExpIn_22, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_113 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_112) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_114 = add(_wnList_res_re_rawIn_adjustedExp_T_111, _wnList_res_re_rawIn_adjustedExp_T_113) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_22 = tail(_wnList_res_re_rawIn_adjustedExp_T_114, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_22 = and(wnList_res_re_rawIn_isZeroExpIn_22, wnList_res_re_rawIn_isZeroFractIn_22) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_22 = bits(wnList_res_re_rawIn_adjustedExp_22, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_22 = eq(_wnList_res_re_rawIn_isSpecial_T_22, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_22 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_22 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_44 = eq(wnList_res_re_rawIn_isZeroFractIn_22, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_45 = and(wnList_res_re_rawIn_isSpecial_22, _wnList_res_re_rawIn_out_isNaN_T_44) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_22.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_45 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_22 = and(wnList_res_re_rawIn_isSpecial_22, wnList_res_re_rawIn_isZeroFractIn_22) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_22.isInf <= _wnList_res_re_rawIn_out_isInf_T_22 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_22.isZero <= wnList_res_re_rawIn_isZero_22 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_22.sign <= wnList_res_re_rawIn_sign_22 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_44 = bits(wnList_res_re_rawIn_adjustedExp_22, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_45 = cvt(_wnList_res_re_rawIn_out_sExp_T_44) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_22.sExp <= _wnList_res_re_rawIn_out_sExp_T_45 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_66 = eq(wnList_res_re_rawIn_isZero_22, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_67 = mux(wnList_res_re_rawIn_isZeroExpIn_22, wnList_res_re_rawIn_subnormFract_22, wnList_res_re_rawIn_fractIn_22) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_22 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_66) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_68 = cat(wnList_res_re_rawIn_out_sig_hi_22, _wnList_res_re_rawIn_out_sig_T_67) @[Cat.scala 33:92]
    wnList_res_re_rawIn_22.sig <= _wnList_res_re_rawIn_out_sig_T_68 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_177 = bits(wnList_res_re_rawIn_22.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_178 = mux(wnList_res_re_rawIn_22.isZero, UInt<3>("h0"), _wnList_res_re_T_177) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_179 = mux(wnList_res_re_rawIn_22.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_180 = or(_wnList_res_re_T_178, _wnList_res_re_T_179) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_181 = bits(wnList_res_re_rawIn_22.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_182 = bits(wnList_res_re_rawIn_22.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_22 = cat(_wnList_res_re_T_181, _wnList_res_re_T_182) @[Cat.scala 33:92]
    node wnList_res_re_hi_22 = cat(wnList_res_re_rawIn_22.sign, _wnList_res_re_T_180) @[Cat.scala 33:92]
    node _wnList_res_re_T_183 = cat(wnList_res_re_hi_22, wnList_res_re_lo_22) @[Cat.scala 33:92]
    node _wnList_res_re_T_184 = asUInt(asSInt(UInt<16>("hb913"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_23 = bits(_wnList_res_re_T_184, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_23 = bits(_wnList_res_re_T_184, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_23 = bits(_wnList_res_re_T_184, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_23 = eq(wnList_res_re_rawIn_expIn_23, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_23 = eq(wnList_res_re_rawIn_fractIn_23, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_414 = bits(wnList_res_re_rawIn_fractIn_23, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_415 = bits(wnList_res_re_rawIn_fractIn_23, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_416 = bits(wnList_res_re_rawIn_fractIn_23, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_417 = bits(wnList_res_re_rawIn_fractIn_23, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_418 = bits(wnList_res_re_rawIn_fractIn_23, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_419 = bits(wnList_res_re_rawIn_fractIn_23, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_420 = bits(wnList_res_re_rawIn_fractIn_23, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_421 = bits(wnList_res_re_rawIn_fractIn_23, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_422 = bits(wnList_res_re_rawIn_fractIn_23, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_423 = bits(wnList_res_re_rawIn_fractIn_23, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_424 = mux(_wnList_res_re_rawIn_normDist_T_415, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_425 = mux(_wnList_res_re_rawIn_normDist_T_416, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_424) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_426 = mux(_wnList_res_re_rawIn_normDist_T_417, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_425) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_427 = mux(_wnList_res_re_rawIn_normDist_T_418, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_426) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_428 = mux(_wnList_res_re_rawIn_normDist_T_419, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_427) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_429 = mux(_wnList_res_re_rawIn_normDist_T_420, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_428) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_430 = mux(_wnList_res_re_rawIn_normDist_T_421, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_429) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_431 = mux(_wnList_res_re_rawIn_normDist_T_422, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_430) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_23 = mux(_wnList_res_re_rawIn_normDist_T_423, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_431) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_46 = dshl(wnList_res_re_rawIn_fractIn_23, wnList_res_re_rawIn_normDist_23) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_47 = bits(_wnList_res_re_rawIn_subnormFract_T_46, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_23 = shl(_wnList_res_re_rawIn_subnormFract_T_47, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_115 = xor(wnList_res_re_rawIn_normDist_23, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_116 = mux(wnList_res_re_rawIn_isZeroExpIn_23, _wnList_res_re_rawIn_adjustedExp_T_115, wnList_res_re_rawIn_expIn_23) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_117 = mux(wnList_res_re_rawIn_isZeroExpIn_23, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_118 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_117) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_119 = add(_wnList_res_re_rawIn_adjustedExp_T_116, _wnList_res_re_rawIn_adjustedExp_T_118) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_23 = tail(_wnList_res_re_rawIn_adjustedExp_T_119, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_23 = and(wnList_res_re_rawIn_isZeroExpIn_23, wnList_res_re_rawIn_isZeroFractIn_23) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_23 = bits(wnList_res_re_rawIn_adjustedExp_23, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_23 = eq(_wnList_res_re_rawIn_isSpecial_T_23, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_23 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_23 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_46 = eq(wnList_res_re_rawIn_isZeroFractIn_23, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_47 = and(wnList_res_re_rawIn_isSpecial_23, _wnList_res_re_rawIn_out_isNaN_T_46) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_23.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_47 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_23 = and(wnList_res_re_rawIn_isSpecial_23, wnList_res_re_rawIn_isZeroFractIn_23) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_23.isInf <= _wnList_res_re_rawIn_out_isInf_T_23 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_23.isZero <= wnList_res_re_rawIn_isZero_23 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_23.sign <= wnList_res_re_rawIn_sign_23 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_46 = bits(wnList_res_re_rawIn_adjustedExp_23, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_47 = cvt(_wnList_res_re_rawIn_out_sExp_T_46) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_23.sExp <= _wnList_res_re_rawIn_out_sExp_T_47 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_69 = eq(wnList_res_re_rawIn_isZero_23, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_70 = mux(wnList_res_re_rawIn_isZeroExpIn_23, wnList_res_re_rawIn_subnormFract_23, wnList_res_re_rawIn_fractIn_23) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_23 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_69) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_71 = cat(wnList_res_re_rawIn_out_sig_hi_23, _wnList_res_re_rawIn_out_sig_T_70) @[Cat.scala 33:92]
    wnList_res_re_rawIn_23.sig <= _wnList_res_re_rawIn_out_sig_T_71 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_185 = bits(wnList_res_re_rawIn_23.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_186 = mux(wnList_res_re_rawIn_23.isZero, UInt<3>("h0"), _wnList_res_re_T_185) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_187 = mux(wnList_res_re_rawIn_23.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_188 = or(_wnList_res_re_T_186, _wnList_res_re_T_187) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_189 = bits(wnList_res_re_rawIn_23.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_190 = bits(wnList_res_re_rawIn_23.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_23 = cat(_wnList_res_re_T_189, _wnList_res_re_T_190) @[Cat.scala 33:92]
    node wnList_res_re_hi_23 = cat(wnList_res_re_rawIn_23.sign, _wnList_res_re_T_188) @[Cat.scala 33:92]
    node _wnList_res_re_T_191 = cat(wnList_res_re_hi_23, wnList_res_re_lo_23) @[Cat.scala 33:92]
    node _wnList_res_re_T_192 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_24 = bits(_wnList_res_re_T_192, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_24 = bits(_wnList_res_re_T_192, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_24 = bits(_wnList_res_re_T_192, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_24 = eq(wnList_res_re_rawIn_expIn_24, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_24 = eq(wnList_res_re_rawIn_fractIn_24, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_432 = bits(wnList_res_re_rawIn_fractIn_24, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_433 = bits(wnList_res_re_rawIn_fractIn_24, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_434 = bits(wnList_res_re_rawIn_fractIn_24, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_435 = bits(wnList_res_re_rawIn_fractIn_24, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_436 = bits(wnList_res_re_rawIn_fractIn_24, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_437 = bits(wnList_res_re_rawIn_fractIn_24, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_438 = bits(wnList_res_re_rawIn_fractIn_24, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_439 = bits(wnList_res_re_rawIn_fractIn_24, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_440 = bits(wnList_res_re_rawIn_fractIn_24, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_441 = bits(wnList_res_re_rawIn_fractIn_24, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_442 = mux(_wnList_res_re_rawIn_normDist_T_433, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_443 = mux(_wnList_res_re_rawIn_normDist_T_434, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_442) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_444 = mux(_wnList_res_re_rawIn_normDist_T_435, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_443) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_445 = mux(_wnList_res_re_rawIn_normDist_T_436, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_444) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_446 = mux(_wnList_res_re_rawIn_normDist_T_437, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_445) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_447 = mux(_wnList_res_re_rawIn_normDist_T_438, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_446) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_448 = mux(_wnList_res_re_rawIn_normDist_T_439, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_447) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_449 = mux(_wnList_res_re_rawIn_normDist_T_440, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_448) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_24 = mux(_wnList_res_re_rawIn_normDist_T_441, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_449) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_48 = dshl(wnList_res_re_rawIn_fractIn_24, wnList_res_re_rawIn_normDist_24) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_49 = bits(_wnList_res_re_rawIn_subnormFract_T_48, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_24 = shl(_wnList_res_re_rawIn_subnormFract_T_49, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_120 = xor(wnList_res_re_rawIn_normDist_24, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_121 = mux(wnList_res_re_rawIn_isZeroExpIn_24, _wnList_res_re_rawIn_adjustedExp_T_120, wnList_res_re_rawIn_expIn_24) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_122 = mux(wnList_res_re_rawIn_isZeroExpIn_24, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_123 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_122) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_124 = add(_wnList_res_re_rawIn_adjustedExp_T_121, _wnList_res_re_rawIn_adjustedExp_T_123) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_24 = tail(_wnList_res_re_rawIn_adjustedExp_T_124, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_24 = and(wnList_res_re_rawIn_isZeroExpIn_24, wnList_res_re_rawIn_isZeroFractIn_24) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_24 = bits(wnList_res_re_rawIn_adjustedExp_24, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_24 = eq(_wnList_res_re_rawIn_isSpecial_T_24, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_24 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_24 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_48 = eq(wnList_res_re_rawIn_isZeroFractIn_24, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_49 = and(wnList_res_re_rawIn_isSpecial_24, _wnList_res_re_rawIn_out_isNaN_T_48) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_24.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_49 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_24 = and(wnList_res_re_rawIn_isSpecial_24, wnList_res_re_rawIn_isZeroFractIn_24) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_24.isInf <= _wnList_res_re_rawIn_out_isInf_T_24 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_24.isZero <= wnList_res_re_rawIn_isZero_24 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_24.sign <= wnList_res_re_rawIn_sign_24 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_48 = bits(wnList_res_re_rawIn_adjustedExp_24, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_49 = cvt(_wnList_res_re_rawIn_out_sExp_T_48) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_24.sExp <= _wnList_res_re_rawIn_out_sExp_T_49 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_72 = eq(wnList_res_re_rawIn_isZero_24, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_73 = mux(wnList_res_re_rawIn_isZeroExpIn_24, wnList_res_re_rawIn_subnormFract_24, wnList_res_re_rawIn_fractIn_24) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_24 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_72) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_74 = cat(wnList_res_re_rawIn_out_sig_hi_24, _wnList_res_re_rawIn_out_sig_T_73) @[Cat.scala 33:92]
    wnList_res_re_rawIn_24.sig <= _wnList_res_re_rawIn_out_sig_T_74 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_193 = bits(wnList_res_re_rawIn_24.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_194 = mux(wnList_res_re_rawIn_24.isZero, UInt<3>("h0"), _wnList_res_re_T_193) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_195 = mux(wnList_res_re_rawIn_24.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_196 = or(_wnList_res_re_T_194, _wnList_res_re_T_195) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_197 = bits(wnList_res_re_rawIn_24.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_198 = bits(wnList_res_re_rawIn_24.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_24 = cat(_wnList_res_re_T_197, _wnList_res_re_T_198) @[Cat.scala 33:92]
    node wnList_res_re_hi_24 = cat(wnList_res_re_rawIn_24.sign, _wnList_res_re_T_196) @[Cat.scala 33:92]
    node _wnList_res_re_T_199 = cat(wnList_res_re_hi_24, wnList_res_re_lo_24) @[Cat.scala 33:92]
    node _wnList_res_re_T_200 = asUInt(asSInt(UInt<16>("hba2f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_25 = bits(_wnList_res_re_T_200, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_25 = bits(_wnList_res_re_T_200, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_25 = bits(_wnList_res_re_T_200, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_25 = eq(wnList_res_re_rawIn_expIn_25, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_25 = eq(wnList_res_re_rawIn_fractIn_25, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_450 = bits(wnList_res_re_rawIn_fractIn_25, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_451 = bits(wnList_res_re_rawIn_fractIn_25, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_452 = bits(wnList_res_re_rawIn_fractIn_25, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_453 = bits(wnList_res_re_rawIn_fractIn_25, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_454 = bits(wnList_res_re_rawIn_fractIn_25, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_455 = bits(wnList_res_re_rawIn_fractIn_25, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_456 = bits(wnList_res_re_rawIn_fractIn_25, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_457 = bits(wnList_res_re_rawIn_fractIn_25, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_458 = bits(wnList_res_re_rawIn_fractIn_25, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_459 = bits(wnList_res_re_rawIn_fractIn_25, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_460 = mux(_wnList_res_re_rawIn_normDist_T_451, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_461 = mux(_wnList_res_re_rawIn_normDist_T_452, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_460) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_462 = mux(_wnList_res_re_rawIn_normDist_T_453, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_461) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_463 = mux(_wnList_res_re_rawIn_normDist_T_454, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_462) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_464 = mux(_wnList_res_re_rawIn_normDist_T_455, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_463) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_465 = mux(_wnList_res_re_rawIn_normDist_T_456, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_464) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_466 = mux(_wnList_res_re_rawIn_normDist_T_457, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_465) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_467 = mux(_wnList_res_re_rawIn_normDist_T_458, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_466) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_25 = mux(_wnList_res_re_rawIn_normDist_T_459, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_467) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_50 = dshl(wnList_res_re_rawIn_fractIn_25, wnList_res_re_rawIn_normDist_25) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_51 = bits(_wnList_res_re_rawIn_subnormFract_T_50, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_25 = shl(_wnList_res_re_rawIn_subnormFract_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_125 = xor(wnList_res_re_rawIn_normDist_25, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_126 = mux(wnList_res_re_rawIn_isZeroExpIn_25, _wnList_res_re_rawIn_adjustedExp_T_125, wnList_res_re_rawIn_expIn_25) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_127 = mux(wnList_res_re_rawIn_isZeroExpIn_25, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_128 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_127) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_129 = add(_wnList_res_re_rawIn_adjustedExp_T_126, _wnList_res_re_rawIn_adjustedExp_T_128) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_25 = tail(_wnList_res_re_rawIn_adjustedExp_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_25 = and(wnList_res_re_rawIn_isZeroExpIn_25, wnList_res_re_rawIn_isZeroFractIn_25) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_25 = bits(wnList_res_re_rawIn_adjustedExp_25, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_25 = eq(_wnList_res_re_rawIn_isSpecial_T_25, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_25 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_25 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_50 = eq(wnList_res_re_rawIn_isZeroFractIn_25, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_51 = and(wnList_res_re_rawIn_isSpecial_25, _wnList_res_re_rawIn_out_isNaN_T_50) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_25.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_51 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_25 = and(wnList_res_re_rawIn_isSpecial_25, wnList_res_re_rawIn_isZeroFractIn_25) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_25.isInf <= _wnList_res_re_rawIn_out_isInf_T_25 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_25.isZero <= wnList_res_re_rawIn_isZero_25 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_25.sign <= wnList_res_re_rawIn_sign_25 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_50 = bits(wnList_res_re_rawIn_adjustedExp_25, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_51 = cvt(_wnList_res_re_rawIn_out_sExp_T_50) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_25.sExp <= _wnList_res_re_rawIn_out_sExp_T_51 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_75 = eq(wnList_res_re_rawIn_isZero_25, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_76 = mux(wnList_res_re_rawIn_isZeroExpIn_25, wnList_res_re_rawIn_subnormFract_25, wnList_res_re_rawIn_fractIn_25) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_25 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_75) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_77 = cat(wnList_res_re_rawIn_out_sig_hi_25, _wnList_res_re_rawIn_out_sig_T_76) @[Cat.scala 33:92]
    wnList_res_re_rawIn_25.sig <= _wnList_res_re_rawIn_out_sig_T_77 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_201 = bits(wnList_res_re_rawIn_25.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_202 = mux(wnList_res_re_rawIn_25.isZero, UInt<3>("h0"), _wnList_res_re_T_201) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_203 = mux(wnList_res_re_rawIn_25.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_204 = or(_wnList_res_re_T_202, _wnList_res_re_T_203) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_205 = bits(wnList_res_re_rawIn_25.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_206 = bits(wnList_res_re_rawIn_25.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_25 = cat(_wnList_res_re_T_205, _wnList_res_re_T_206) @[Cat.scala 33:92]
    node wnList_res_re_hi_25 = cat(wnList_res_re_rawIn_25.sign, _wnList_res_re_T_204) @[Cat.scala 33:92]
    node _wnList_res_re_T_207 = cat(wnList_res_re_hi_25, wnList_res_re_lo_25) @[Cat.scala 33:92]
    node _wnList_res_re_T_208 = asUInt(asSInt(UInt<16>("hbaa6"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_26 = bits(_wnList_res_re_T_208, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_26 = bits(_wnList_res_re_T_208, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_26 = bits(_wnList_res_re_T_208, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_26 = eq(wnList_res_re_rawIn_expIn_26, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_26 = eq(wnList_res_re_rawIn_fractIn_26, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_468 = bits(wnList_res_re_rawIn_fractIn_26, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_469 = bits(wnList_res_re_rawIn_fractIn_26, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_470 = bits(wnList_res_re_rawIn_fractIn_26, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_471 = bits(wnList_res_re_rawIn_fractIn_26, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_472 = bits(wnList_res_re_rawIn_fractIn_26, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_473 = bits(wnList_res_re_rawIn_fractIn_26, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_474 = bits(wnList_res_re_rawIn_fractIn_26, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_475 = bits(wnList_res_re_rawIn_fractIn_26, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_476 = bits(wnList_res_re_rawIn_fractIn_26, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_477 = bits(wnList_res_re_rawIn_fractIn_26, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_478 = mux(_wnList_res_re_rawIn_normDist_T_469, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_479 = mux(_wnList_res_re_rawIn_normDist_T_470, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_478) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_480 = mux(_wnList_res_re_rawIn_normDist_T_471, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_479) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_481 = mux(_wnList_res_re_rawIn_normDist_T_472, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_480) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_482 = mux(_wnList_res_re_rawIn_normDist_T_473, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_481) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_483 = mux(_wnList_res_re_rawIn_normDist_T_474, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_482) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_484 = mux(_wnList_res_re_rawIn_normDist_T_475, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_483) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_485 = mux(_wnList_res_re_rawIn_normDist_T_476, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_484) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_26 = mux(_wnList_res_re_rawIn_normDist_T_477, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_485) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_52 = dshl(wnList_res_re_rawIn_fractIn_26, wnList_res_re_rawIn_normDist_26) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_53 = bits(_wnList_res_re_rawIn_subnormFract_T_52, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_26 = shl(_wnList_res_re_rawIn_subnormFract_T_53, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_130 = xor(wnList_res_re_rawIn_normDist_26, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_131 = mux(wnList_res_re_rawIn_isZeroExpIn_26, _wnList_res_re_rawIn_adjustedExp_T_130, wnList_res_re_rawIn_expIn_26) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_132 = mux(wnList_res_re_rawIn_isZeroExpIn_26, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_133 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_132) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_134 = add(_wnList_res_re_rawIn_adjustedExp_T_131, _wnList_res_re_rawIn_adjustedExp_T_133) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_26 = tail(_wnList_res_re_rawIn_adjustedExp_T_134, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_26 = and(wnList_res_re_rawIn_isZeroExpIn_26, wnList_res_re_rawIn_isZeroFractIn_26) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_26 = bits(wnList_res_re_rawIn_adjustedExp_26, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_26 = eq(_wnList_res_re_rawIn_isSpecial_T_26, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_26 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_26 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_52 = eq(wnList_res_re_rawIn_isZeroFractIn_26, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_53 = and(wnList_res_re_rawIn_isSpecial_26, _wnList_res_re_rawIn_out_isNaN_T_52) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_26.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_53 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_26 = and(wnList_res_re_rawIn_isSpecial_26, wnList_res_re_rawIn_isZeroFractIn_26) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_26.isInf <= _wnList_res_re_rawIn_out_isInf_T_26 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_26.isZero <= wnList_res_re_rawIn_isZero_26 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_26.sign <= wnList_res_re_rawIn_sign_26 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_52 = bits(wnList_res_re_rawIn_adjustedExp_26, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_53 = cvt(_wnList_res_re_rawIn_out_sExp_T_52) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_26.sExp <= _wnList_res_re_rawIn_out_sExp_T_53 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_78 = eq(wnList_res_re_rawIn_isZero_26, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_79 = mux(wnList_res_re_rawIn_isZeroExpIn_26, wnList_res_re_rawIn_subnormFract_26, wnList_res_re_rawIn_fractIn_26) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_26 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_78) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_80 = cat(wnList_res_re_rawIn_out_sig_hi_26, _wnList_res_re_rawIn_out_sig_T_79) @[Cat.scala 33:92]
    wnList_res_re_rawIn_26.sig <= _wnList_res_re_rawIn_out_sig_T_80 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_209 = bits(wnList_res_re_rawIn_26.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_210 = mux(wnList_res_re_rawIn_26.isZero, UInt<3>("h0"), _wnList_res_re_T_209) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_211 = mux(wnList_res_re_rawIn_26.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_212 = or(_wnList_res_re_T_210, _wnList_res_re_T_211) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_213 = bits(wnList_res_re_rawIn_26.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_214 = bits(wnList_res_re_rawIn_26.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_26 = cat(_wnList_res_re_T_213, _wnList_res_re_T_214) @[Cat.scala 33:92]
    node wnList_res_re_hi_26 = cat(wnList_res_re_rawIn_26.sign, _wnList_res_re_T_212) @[Cat.scala 33:92]
    node _wnList_res_re_T_215 = cat(wnList_res_re_hi_26, wnList_res_re_lo_26) @[Cat.scala 33:92]
    node _wnList_res_re_T_216 = asUInt(asSInt(UInt<16>("hbb0e"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_27 = bits(_wnList_res_re_T_216, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_27 = bits(_wnList_res_re_T_216, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_27 = bits(_wnList_res_re_T_216, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_27 = eq(wnList_res_re_rawIn_expIn_27, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_27 = eq(wnList_res_re_rawIn_fractIn_27, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_486 = bits(wnList_res_re_rawIn_fractIn_27, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_487 = bits(wnList_res_re_rawIn_fractIn_27, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_488 = bits(wnList_res_re_rawIn_fractIn_27, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_489 = bits(wnList_res_re_rawIn_fractIn_27, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_490 = bits(wnList_res_re_rawIn_fractIn_27, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_491 = bits(wnList_res_re_rawIn_fractIn_27, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_492 = bits(wnList_res_re_rawIn_fractIn_27, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_493 = bits(wnList_res_re_rawIn_fractIn_27, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_494 = bits(wnList_res_re_rawIn_fractIn_27, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_495 = bits(wnList_res_re_rawIn_fractIn_27, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_496 = mux(_wnList_res_re_rawIn_normDist_T_487, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_497 = mux(_wnList_res_re_rawIn_normDist_T_488, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_496) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_498 = mux(_wnList_res_re_rawIn_normDist_T_489, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_497) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_499 = mux(_wnList_res_re_rawIn_normDist_T_490, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_498) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_500 = mux(_wnList_res_re_rawIn_normDist_T_491, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_499) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_501 = mux(_wnList_res_re_rawIn_normDist_T_492, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_500) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_502 = mux(_wnList_res_re_rawIn_normDist_T_493, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_501) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_503 = mux(_wnList_res_re_rawIn_normDist_T_494, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_502) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_27 = mux(_wnList_res_re_rawIn_normDist_T_495, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_503) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_54 = dshl(wnList_res_re_rawIn_fractIn_27, wnList_res_re_rawIn_normDist_27) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_55 = bits(_wnList_res_re_rawIn_subnormFract_T_54, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_27 = shl(_wnList_res_re_rawIn_subnormFract_T_55, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_135 = xor(wnList_res_re_rawIn_normDist_27, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_136 = mux(wnList_res_re_rawIn_isZeroExpIn_27, _wnList_res_re_rawIn_adjustedExp_T_135, wnList_res_re_rawIn_expIn_27) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_137 = mux(wnList_res_re_rawIn_isZeroExpIn_27, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_138 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_137) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_139 = add(_wnList_res_re_rawIn_adjustedExp_T_136, _wnList_res_re_rawIn_adjustedExp_T_138) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_27 = tail(_wnList_res_re_rawIn_adjustedExp_T_139, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_27 = and(wnList_res_re_rawIn_isZeroExpIn_27, wnList_res_re_rawIn_isZeroFractIn_27) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_27 = bits(wnList_res_re_rawIn_adjustedExp_27, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_27 = eq(_wnList_res_re_rawIn_isSpecial_T_27, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_27 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_27 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_54 = eq(wnList_res_re_rawIn_isZeroFractIn_27, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_55 = and(wnList_res_re_rawIn_isSpecial_27, _wnList_res_re_rawIn_out_isNaN_T_54) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_27.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_55 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_27 = and(wnList_res_re_rawIn_isSpecial_27, wnList_res_re_rawIn_isZeroFractIn_27) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_27.isInf <= _wnList_res_re_rawIn_out_isInf_T_27 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_27.isZero <= wnList_res_re_rawIn_isZero_27 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_27.sign <= wnList_res_re_rawIn_sign_27 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_54 = bits(wnList_res_re_rawIn_adjustedExp_27, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_55 = cvt(_wnList_res_re_rawIn_out_sExp_T_54) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_27.sExp <= _wnList_res_re_rawIn_out_sExp_T_55 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_81 = eq(wnList_res_re_rawIn_isZero_27, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_82 = mux(wnList_res_re_rawIn_isZeroExpIn_27, wnList_res_re_rawIn_subnormFract_27, wnList_res_re_rawIn_fractIn_27) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_27 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_81) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_83 = cat(wnList_res_re_rawIn_out_sig_hi_27, _wnList_res_re_rawIn_out_sig_T_82) @[Cat.scala 33:92]
    wnList_res_re_rawIn_27.sig <= _wnList_res_re_rawIn_out_sig_T_83 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_217 = bits(wnList_res_re_rawIn_27.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_218 = mux(wnList_res_re_rawIn_27.isZero, UInt<3>("h0"), _wnList_res_re_T_217) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_219 = mux(wnList_res_re_rawIn_27.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_220 = or(_wnList_res_re_T_218, _wnList_res_re_T_219) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_221 = bits(wnList_res_re_rawIn_27.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_222 = bits(wnList_res_re_rawIn_27.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_27 = cat(_wnList_res_re_T_221, _wnList_res_re_T_222) @[Cat.scala 33:92]
    node wnList_res_re_hi_27 = cat(wnList_res_re_rawIn_27.sign, _wnList_res_re_T_220) @[Cat.scala 33:92]
    node _wnList_res_re_T_223 = cat(wnList_res_re_hi_27, wnList_res_re_lo_27) @[Cat.scala 33:92]
    node _wnList_res_re_T_224 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_28 = bits(_wnList_res_re_T_224, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_28 = bits(_wnList_res_re_T_224, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_28 = bits(_wnList_res_re_T_224, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_28 = eq(wnList_res_re_rawIn_expIn_28, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_28 = eq(wnList_res_re_rawIn_fractIn_28, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_504 = bits(wnList_res_re_rawIn_fractIn_28, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_505 = bits(wnList_res_re_rawIn_fractIn_28, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_506 = bits(wnList_res_re_rawIn_fractIn_28, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_507 = bits(wnList_res_re_rawIn_fractIn_28, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_508 = bits(wnList_res_re_rawIn_fractIn_28, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_509 = bits(wnList_res_re_rawIn_fractIn_28, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_510 = bits(wnList_res_re_rawIn_fractIn_28, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_511 = bits(wnList_res_re_rawIn_fractIn_28, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_512 = bits(wnList_res_re_rawIn_fractIn_28, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_513 = bits(wnList_res_re_rawIn_fractIn_28, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_514 = mux(_wnList_res_re_rawIn_normDist_T_505, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_515 = mux(_wnList_res_re_rawIn_normDist_T_506, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_514) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_516 = mux(_wnList_res_re_rawIn_normDist_T_507, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_515) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_517 = mux(_wnList_res_re_rawIn_normDist_T_508, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_516) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_518 = mux(_wnList_res_re_rawIn_normDist_T_509, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_517) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_519 = mux(_wnList_res_re_rawIn_normDist_T_510, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_518) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_520 = mux(_wnList_res_re_rawIn_normDist_T_511, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_519) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_521 = mux(_wnList_res_re_rawIn_normDist_T_512, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_520) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_28 = mux(_wnList_res_re_rawIn_normDist_T_513, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_521) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_56 = dshl(wnList_res_re_rawIn_fractIn_28, wnList_res_re_rawIn_normDist_28) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_57 = bits(_wnList_res_re_rawIn_subnormFract_T_56, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_28 = shl(_wnList_res_re_rawIn_subnormFract_T_57, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_140 = xor(wnList_res_re_rawIn_normDist_28, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_141 = mux(wnList_res_re_rawIn_isZeroExpIn_28, _wnList_res_re_rawIn_adjustedExp_T_140, wnList_res_re_rawIn_expIn_28) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_142 = mux(wnList_res_re_rawIn_isZeroExpIn_28, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_143 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_142) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_144 = add(_wnList_res_re_rawIn_adjustedExp_T_141, _wnList_res_re_rawIn_adjustedExp_T_143) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_28 = tail(_wnList_res_re_rawIn_adjustedExp_T_144, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_28 = and(wnList_res_re_rawIn_isZeroExpIn_28, wnList_res_re_rawIn_isZeroFractIn_28) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_28 = bits(wnList_res_re_rawIn_adjustedExp_28, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_28 = eq(_wnList_res_re_rawIn_isSpecial_T_28, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_28 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_28 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_56 = eq(wnList_res_re_rawIn_isZeroFractIn_28, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_57 = and(wnList_res_re_rawIn_isSpecial_28, _wnList_res_re_rawIn_out_isNaN_T_56) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_28.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_57 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_28 = and(wnList_res_re_rawIn_isSpecial_28, wnList_res_re_rawIn_isZeroFractIn_28) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_28.isInf <= _wnList_res_re_rawIn_out_isInf_T_28 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_28.isZero <= wnList_res_re_rawIn_isZero_28 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_28.sign <= wnList_res_re_rawIn_sign_28 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_56 = bits(wnList_res_re_rawIn_adjustedExp_28, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_57 = cvt(_wnList_res_re_rawIn_out_sExp_T_56) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_28.sExp <= _wnList_res_re_rawIn_out_sExp_T_57 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_84 = eq(wnList_res_re_rawIn_isZero_28, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_85 = mux(wnList_res_re_rawIn_isZeroExpIn_28, wnList_res_re_rawIn_subnormFract_28, wnList_res_re_rawIn_fractIn_28) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_28 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_84) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_86 = cat(wnList_res_re_rawIn_out_sig_hi_28, _wnList_res_re_rawIn_out_sig_T_85) @[Cat.scala 33:92]
    wnList_res_re_rawIn_28.sig <= _wnList_res_re_rawIn_out_sig_T_86 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_225 = bits(wnList_res_re_rawIn_28.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_226 = mux(wnList_res_re_rawIn_28.isZero, UInt<3>("h0"), _wnList_res_re_T_225) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_227 = mux(wnList_res_re_rawIn_28.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_228 = or(_wnList_res_re_T_226, _wnList_res_re_T_227) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_229 = bits(wnList_res_re_rawIn_28.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_230 = bits(wnList_res_re_rawIn_28.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_28 = cat(_wnList_res_re_T_229, _wnList_res_re_T_230) @[Cat.scala 33:92]
    node wnList_res_re_hi_28 = cat(wnList_res_re_rawIn_28.sign, _wnList_res_re_T_228) @[Cat.scala 33:92]
    node _wnList_res_re_T_231 = cat(wnList_res_re_hi_28, wnList_res_re_lo_28) @[Cat.scala 33:92]
    node _wnList_res_re_T_232 = asUInt(asSInt(UInt<16>("hbba7"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_29 = bits(_wnList_res_re_T_232, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_29 = bits(_wnList_res_re_T_232, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_29 = bits(_wnList_res_re_T_232, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_29 = eq(wnList_res_re_rawIn_expIn_29, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_29 = eq(wnList_res_re_rawIn_fractIn_29, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_522 = bits(wnList_res_re_rawIn_fractIn_29, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_523 = bits(wnList_res_re_rawIn_fractIn_29, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_524 = bits(wnList_res_re_rawIn_fractIn_29, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_525 = bits(wnList_res_re_rawIn_fractIn_29, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_526 = bits(wnList_res_re_rawIn_fractIn_29, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_527 = bits(wnList_res_re_rawIn_fractIn_29, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_528 = bits(wnList_res_re_rawIn_fractIn_29, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_529 = bits(wnList_res_re_rawIn_fractIn_29, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_530 = bits(wnList_res_re_rawIn_fractIn_29, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_531 = bits(wnList_res_re_rawIn_fractIn_29, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_532 = mux(_wnList_res_re_rawIn_normDist_T_523, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_533 = mux(_wnList_res_re_rawIn_normDist_T_524, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_532) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_534 = mux(_wnList_res_re_rawIn_normDist_T_525, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_533) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_535 = mux(_wnList_res_re_rawIn_normDist_T_526, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_534) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_536 = mux(_wnList_res_re_rawIn_normDist_T_527, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_535) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_537 = mux(_wnList_res_re_rawIn_normDist_T_528, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_536) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_538 = mux(_wnList_res_re_rawIn_normDist_T_529, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_537) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_539 = mux(_wnList_res_re_rawIn_normDist_T_530, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_538) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_29 = mux(_wnList_res_re_rawIn_normDist_T_531, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_539) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_58 = dshl(wnList_res_re_rawIn_fractIn_29, wnList_res_re_rawIn_normDist_29) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_59 = bits(_wnList_res_re_rawIn_subnormFract_T_58, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_29 = shl(_wnList_res_re_rawIn_subnormFract_T_59, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_145 = xor(wnList_res_re_rawIn_normDist_29, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_146 = mux(wnList_res_re_rawIn_isZeroExpIn_29, _wnList_res_re_rawIn_adjustedExp_T_145, wnList_res_re_rawIn_expIn_29) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_147 = mux(wnList_res_re_rawIn_isZeroExpIn_29, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_148 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_147) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_149 = add(_wnList_res_re_rawIn_adjustedExp_T_146, _wnList_res_re_rawIn_adjustedExp_T_148) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_29 = tail(_wnList_res_re_rawIn_adjustedExp_T_149, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_29 = and(wnList_res_re_rawIn_isZeroExpIn_29, wnList_res_re_rawIn_isZeroFractIn_29) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_29 = bits(wnList_res_re_rawIn_adjustedExp_29, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_29 = eq(_wnList_res_re_rawIn_isSpecial_T_29, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_29 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_29 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_58 = eq(wnList_res_re_rawIn_isZeroFractIn_29, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_59 = and(wnList_res_re_rawIn_isSpecial_29, _wnList_res_re_rawIn_out_isNaN_T_58) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_29.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_59 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_29 = and(wnList_res_re_rawIn_isSpecial_29, wnList_res_re_rawIn_isZeroFractIn_29) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_29.isInf <= _wnList_res_re_rawIn_out_isInf_T_29 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_29.isZero <= wnList_res_re_rawIn_isZero_29 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_29.sign <= wnList_res_re_rawIn_sign_29 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_58 = bits(wnList_res_re_rawIn_adjustedExp_29, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_59 = cvt(_wnList_res_re_rawIn_out_sExp_T_58) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_29.sExp <= _wnList_res_re_rawIn_out_sExp_T_59 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_87 = eq(wnList_res_re_rawIn_isZero_29, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_88 = mux(wnList_res_re_rawIn_isZeroExpIn_29, wnList_res_re_rawIn_subnormFract_29, wnList_res_re_rawIn_fractIn_29) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_29 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_87) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_89 = cat(wnList_res_re_rawIn_out_sig_hi_29, _wnList_res_re_rawIn_out_sig_T_88) @[Cat.scala 33:92]
    wnList_res_re_rawIn_29.sig <= _wnList_res_re_rawIn_out_sig_T_89 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_233 = bits(wnList_res_re_rawIn_29.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_234 = mux(wnList_res_re_rawIn_29.isZero, UInt<3>("h0"), _wnList_res_re_T_233) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_235 = mux(wnList_res_re_rawIn_29.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_236 = or(_wnList_res_re_T_234, _wnList_res_re_T_235) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_237 = bits(wnList_res_re_rawIn_29.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_238 = bits(wnList_res_re_rawIn_29.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_29 = cat(_wnList_res_re_T_237, _wnList_res_re_T_238) @[Cat.scala 33:92]
    node wnList_res_re_hi_29 = cat(wnList_res_re_rawIn_29.sign, _wnList_res_re_T_236) @[Cat.scala 33:92]
    node _wnList_res_re_T_239 = cat(wnList_res_re_hi_29, wnList_res_re_lo_29) @[Cat.scala 33:92]
    node _wnList_res_re_T_240 = asUInt(asSInt(UInt<16>("hbbd8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_30 = bits(_wnList_res_re_T_240, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_30 = bits(_wnList_res_re_T_240, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_30 = bits(_wnList_res_re_T_240, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_30 = eq(wnList_res_re_rawIn_expIn_30, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_30 = eq(wnList_res_re_rawIn_fractIn_30, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_540 = bits(wnList_res_re_rawIn_fractIn_30, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_541 = bits(wnList_res_re_rawIn_fractIn_30, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_542 = bits(wnList_res_re_rawIn_fractIn_30, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_543 = bits(wnList_res_re_rawIn_fractIn_30, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_544 = bits(wnList_res_re_rawIn_fractIn_30, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_545 = bits(wnList_res_re_rawIn_fractIn_30, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_546 = bits(wnList_res_re_rawIn_fractIn_30, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_547 = bits(wnList_res_re_rawIn_fractIn_30, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_548 = bits(wnList_res_re_rawIn_fractIn_30, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_549 = bits(wnList_res_re_rawIn_fractIn_30, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_550 = mux(_wnList_res_re_rawIn_normDist_T_541, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_551 = mux(_wnList_res_re_rawIn_normDist_T_542, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_550) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_552 = mux(_wnList_res_re_rawIn_normDist_T_543, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_551) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_553 = mux(_wnList_res_re_rawIn_normDist_T_544, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_552) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_554 = mux(_wnList_res_re_rawIn_normDist_T_545, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_553) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_555 = mux(_wnList_res_re_rawIn_normDist_T_546, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_554) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_556 = mux(_wnList_res_re_rawIn_normDist_T_547, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_555) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_557 = mux(_wnList_res_re_rawIn_normDist_T_548, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_556) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_30 = mux(_wnList_res_re_rawIn_normDist_T_549, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_557) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_60 = dshl(wnList_res_re_rawIn_fractIn_30, wnList_res_re_rawIn_normDist_30) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_61 = bits(_wnList_res_re_rawIn_subnormFract_T_60, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_30 = shl(_wnList_res_re_rawIn_subnormFract_T_61, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_150 = xor(wnList_res_re_rawIn_normDist_30, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_151 = mux(wnList_res_re_rawIn_isZeroExpIn_30, _wnList_res_re_rawIn_adjustedExp_T_150, wnList_res_re_rawIn_expIn_30) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_152 = mux(wnList_res_re_rawIn_isZeroExpIn_30, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_153 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_152) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_154 = add(_wnList_res_re_rawIn_adjustedExp_T_151, _wnList_res_re_rawIn_adjustedExp_T_153) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_30 = tail(_wnList_res_re_rawIn_adjustedExp_T_154, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_30 = and(wnList_res_re_rawIn_isZeroExpIn_30, wnList_res_re_rawIn_isZeroFractIn_30) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_30 = bits(wnList_res_re_rawIn_adjustedExp_30, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_30 = eq(_wnList_res_re_rawIn_isSpecial_T_30, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_30 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_30 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_60 = eq(wnList_res_re_rawIn_isZeroFractIn_30, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_61 = and(wnList_res_re_rawIn_isSpecial_30, _wnList_res_re_rawIn_out_isNaN_T_60) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_30.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_61 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_30 = and(wnList_res_re_rawIn_isSpecial_30, wnList_res_re_rawIn_isZeroFractIn_30) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_30.isInf <= _wnList_res_re_rawIn_out_isInf_T_30 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_30.isZero <= wnList_res_re_rawIn_isZero_30 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_30.sign <= wnList_res_re_rawIn_sign_30 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_60 = bits(wnList_res_re_rawIn_adjustedExp_30, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_61 = cvt(_wnList_res_re_rawIn_out_sExp_T_60) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_30.sExp <= _wnList_res_re_rawIn_out_sExp_T_61 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_90 = eq(wnList_res_re_rawIn_isZero_30, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_91 = mux(wnList_res_re_rawIn_isZeroExpIn_30, wnList_res_re_rawIn_subnormFract_30, wnList_res_re_rawIn_fractIn_30) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_30 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_90) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_92 = cat(wnList_res_re_rawIn_out_sig_hi_30, _wnList_res_re_rawIn_out_sig_T_91) @[Cat.scala 33:92]
    wnList_res_re_rawIn_30.sig <= _wnList_res_re_rawIn_out_sig_T_92 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_241 = bits(wnList_res_re_rawIn_30.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_242 = mux(wnList_res_re_rawIn_30.isZero, UInt<3>("h0"), _wnList_res_re_T_241) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_243 = mux(wnList_res_re_rawIn_30.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_244 = or(_wnList_res_re_T_242, _wnList_res_re_T_243) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_245 = bits(wnList_res_re_rawIn_30.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_246 = bits(wnList_res_re_rawIn_30.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_30 = cat(_wnList_res_re_T_245, _wnList_res_re_T_246) @[Cat.scala 33:92]
    node wnList_res_re_hi_30 = cat(wnList_res_re_rawIn_30.sign, _wnList_res_re_T_244) @[Cat.scala 33:92]
    node _wnList_res_re_T_247 = cat(wnList_res_re_hi_30, wnList_res_re_lo_30) @[Cat.scala 33:92]
    node _wnList_res_re_T_248 = asUInt(asSInt(UInt<16>("hbbf6"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_31 = bits(_wnList_res_re_T_248, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_31 = bits(_wnList_res_re_T_248, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_31 = bits(_wnList_res_re_T_248, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_31 = eq(wnList_res_re_rawIn_expIn_31, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_31 = eq(wnList_res_re_rawIn_fractIn_31, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_558 = bits(wnList_res_re_rawIn_fractIn_31, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_559 = bits(wnList_res_re_rawIn_fractIn_31, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_560 = bits(wnList_res_re_rawIn_fractIn_31, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_561 = bits(wnList_res_re_rawIn_fractIn_31, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_562 = bits(wnList_res_re_rawIn_fractIn_31, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_563 = bits(wnList_res_re_rawIn_fractIn_31, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_564 = bits(wnList_res_re_rawIn_fractIn_31, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_565 = bits(wnList_res_re_rawIn_fractIn_31, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_566 = bits(wnList_res_re_rawIn_fractIn_31, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_567 = bits(wnList_res_re_rawIn_fractIn_31, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_568 = mux(_wnList_res_re_rawIn_normDist_T_559, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_569 = mux(_wnList_res_re_rawIn_normDist_T_560, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_568) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_570 = mux(_wnList_res_re_rawIn_normDist_T_561, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_569) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_571 = mux(_wnList_res_re_rawIn_normDist_T_562, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_570) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_572 = mux(_wnList_res_re_rawIn_normDist_T_563, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_571) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_573 = mux(_wnList_res_re_rawIn_normDist_T_564, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_572) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_574 = mux(_wnList_res_re_rawIn_normDist_T_565, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_573) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_575 = mux(_wnList_res_re_rawIn_normDist_T_566, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_574) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_31 = mux(_wnList_res_re_rawIn_normDist_T_567, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_575) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_62 = dshl(wnList_res_re_rawIn_fractIn_31, wnList_res_re_rawIn_normDist_31) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_63 = bits(_wnList_res_re_rawIn_subnormFract_T_62, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_31 = shl(_wnList_res_re_rawIn_subnormFract_T_63, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_155 = xor(wnList_res_re_rawIn_normDist_31, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_156 = mux(wnList_res_re_rawIn_isZeroExpIn_31, _wnList_res_re_rawIn_adjustedExp_T_155, wnList_res_re_rawIn_expIn_31) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_157 = mux(wnList_res_re_rawIn_isZeroExpIn_31, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_158 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_157) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_159 = add(_wnList_res_re_rawIn_adjustedExp_T_156, _wnList_res_re_rawIn_adjustedExp_T_158) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_31 = tail(_wnList_res_re_rawIn_adjustedExp_T_159, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_31 = and(wnList_res_re_rawIn_isZeroExpIn_31, wnList_res_re_rawIn_isZeroFractIn_31) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_31 = bits(wnList_res_re_rawIn_adjustedExp_31, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_31 = eq(_wnList_res_re_rawIn_isSpecial_T_31, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_31 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_31 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_62 = eq(wnList_res_re_rawIn_isZeroFractIn_31, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_63 = and(wnList_res_re_rawIn_isSpecial_31, _wnList_res_re_rawIn_out_isNaN_T_62) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_31.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_63 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_31 = and(wnList_res_re_rawIn_isSpecial_31, wnList_res_re_rawIn_isZeroFractIn_31) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_31.isInf <= _wnList_res_re_rawIn_out_isInf_T_31 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_31.isZero <= wnList_res_re_rawIn_isZero_31 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_31.sign <= wnList_res_re_rawIn_sign_31 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_62 = bits(wnList_res_re_rawIn_adjustedExp_31, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_63 = cvt(_wnList_res_re_rawIn_out_sExp_T_62) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_31.sExp <= _wnList_res_re_rawIn_out_sExp_T_63 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_93 = eq(wnList_res_re_rawIn_isZero_31, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_94 = mux(wnList_res_re_rawIn_isZeroExpIn_31, wnList_res_re_rawIn_subnormFract_31, wnList_res_re_rawIn_fractIn_31) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_31 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_93) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_95 = cat(wnList_res_re_rawIn_out_sig_hi_31, _wnList_res_re_rawIn_out_sig_T_94) @[Cat.scala 33:92]
    wnList_res_re_rawIn_31.sig <= _wnList_res_re_rawIn_out_sig_T_95 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_249 = bits(wnList_res_re_rawIn_31.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_250 = mux(wnList_res_re_rawIn_31.isZero, UInt<3>("h0"), _wnList_res_re_T_249) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_251 = mux(wnList_res_re_rawIn_31.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_252 = or(_wnList_res_re_T_250, _wnList_res_re_T_251) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_253 = bits(wnList_res_re_rawIn_31.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_254 = bits(wnList_res_re_rawIn_31.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_31 = cat(_wnList_res_re_T_253, _wnList_res_re_T_254) @[Cat.scala 33:92]
    node wnList_res_re_hi_31 = cat(wnList_res_re_rawIn_31.sign, _wnList_res_re_T_252) @[Cat.scala 33:92]
    node _wnList_res_re_T_255 = cat(wnList_res_re_hi_31, wnList_res_re_lo_31) @[Cat.scala 33:92]
    wire _wnList_res_re_WIRE : UInt<17>[32] @[FFT.scala 100:12]
    _wnList_res_re_WIRE[0] <= _wnList_res_re_T_7 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[1] <= _wnList_res_re_T_15 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[2] <= _wnList_res_re_T_23 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[3] <= _wnList_res_re_T_31 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[4] <= _wnList_res_re_T_39 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[5] <= _wnList_res_re_T_47 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[6] <= _wnList_res_re_T_55 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[7] <= _wnList_res_re_T_63 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[8] <= _wnList_res_re_T_71 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[9] <= _wnList_res_re_T_79 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[10] <= _wnList_res_re_T_87 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[11] <= _wnList_res_re_T_95 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[12] <= _wnList_res_re_T_103 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[13] <= _wnList_res_re_T_111 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[14] <= _wnList_res_re_T_119 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[15] <= _wnList_res_re_T_127 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[16] <= _wnList_res_re_T_135 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[17] <= _wnList_res_re_T_143 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[18] <= _wnList_res_re_T_151 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[19] <= _wnList_res_re_T_159 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[20] <= _wnList_res_re_T_167 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[21] <= _wnList_res_re_T_175 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[22] <= _wnList_res_re_T_183 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[23] <= _wnList_res_re_T_191 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[24] <= _wnList_res_re_T_199 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[25] <= _wnList_res_re_T_207 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[26] <= _wnList_res_re_T_215 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[27] <= _wnList_res_re_T_223 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[28] <= _wnList_res_re_T_231 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[29] <= _wnList_res_re_T_239 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[30] <= _wnList_res_re_T_247 @[FFT.scala 100:12]
    _wnList_res_re_WIRE[31] <= _wnList_res_re_T_255 @[FFT.scala 100:12]
    wnList_0.re <= _wnList_res_re_WIRE[_wnList_T_1] @[FFT.scala 104:12]
    node _wnList_res_im_T = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign = bits(_wnList_res_im_T, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn = bits(_wnList_res_im_T, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn = bits(_wnList_res_im_T, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn = eq(wnList_res_im_rawIn_expIn, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn = eq(wnList_res_im_rawIn_fractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T = bits(wnList_res_im_rawIn_fractIn, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1 = bits(wnList_res_im_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_2 = bits(wnList_res_im_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_3 = bits(wnList_res_im_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_4 = bits(wnList_res_im_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_5 = bits(wnList_res_im_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_6 = bits(wnList_res_im_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_7 = bits(wnList_res_im_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_8 = bits(wnList_res_im_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_9 = bits(wnList_res_im_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_10 = mux(_wnList_res_im_rawIn_normDist_T_1, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_11 = mux(_wnList_res_im_rawIn_normDist_T_2, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_10) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_12 = mux(_wnList_res_im_rawIn_normDist_T_3, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_11) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_13 = mux(_wnList_res_im_rawIn_normDist_T_4, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_12) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_14 = mux(_wnList_res_im_rawIn_normDist_T_5, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_13) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_15 = mux(_wnList_res_im_rawIn_normDist_T_6, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_14) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_16 = mux(_wnList_res_im_rawIn_normDist_T_7, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_15) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_17 = mux(_wnList_res_im_rawIn_normDist_T_8, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_16) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist = mux(_wnList_res_im_rawIn_normDist_T_9, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_17) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T = dshl(wnList_res_im_rawIn_fractIn, wnList_res_im_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_1 = bits(_wnList_res_im_rawIn_subnormFract_T, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract = shl(_wnList_res_im_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T = xor(wnList_res_im_rawIn_normDist, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_1 = mux(wnList_res_im_rawIn_isZeroExpIn, _wnList_res_im_rawIn_adjustedExp_T, wnList_res_im_rawIn_expIn) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_2 = mux(wnList_res_im_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_3 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_2) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_4 = add(_wnList_res_im_rawIn_adjustedExp_T_1, _wnList_res_im_rawIn_adjustedExp_T_3) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp = tail(_wnList_res_im_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero = and(wnList_res_im_rawIn_isZeroExpIn, wnList_res_im_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T = bits(wnList_res_im_rawIn_adjustedExp, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial = eq(_wnList_res_im_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T = eq(wnList_res_im_rawIn_isZeroFractIn, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_1 = and(wnList_res_im_rawIn_isSpecial, _wnList_res_im_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_1 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T = and(wnList_res_im_rawIn_isSpecial, wnList_res_im_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn.isInf <= _wnList_res_im_rawIn_out_isInf_T @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn.isZero <= wnList_res_im_rawIn_isZero @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn.sign <= wnList_res_im_rawIn_sign @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T = bits(wnList_res_im_rawIn_adjustedExp, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_1 = cvt(_wnList_res_im_rawIn_out_sExp_T) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn.sExp <= _wnList_res_im_rawIn_out_sExp_T_1 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T = eq(wnList_res_im_rawIn_isZero, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_1 = mux(wnList_res_im_rawIn_isZeroExpIn, wnList_res_im_rawIn_subnormFract, wnList_res_im_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_2 = cat(wnList_res_im_rawIn_out_sig_hi, _wnList_res_im_rawIn_out_sig_T_1) @[Cat.scala 33:92]
    wnList_res_im_rawIn.sig <= _wnList_res_im_rawIn_out_sig_T_2 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_1 = bits(wnList_res_im_rawIn.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_2 = mux(wnList_res_im_rawIn.isZero, UInt<3>("h0"), _wnList_res_im_T_1) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_3 = mux(wnList_res_im_rawIn.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_4 = or(_wnList_res_im_T_2, _wnList_res_im_T_3) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_5 = bits(wnList_res_im_rawIn.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_6 = bits(wnList_res_im_rawIn.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo = cat(_wnList_res_im_T_5, _wnList_res_im_T_6) @[Cat.scala 33:92]
    node wnList_res_im_hi = cat(wnList_res_im_rawIn.sign, _wnList_res_im_T_4) @[Cat.scala 33:92]
    node _wnList_res_im_T_7 = cat(wnList_res_im_hi, wnList_res_im_lo) @[Cat.scala 33:92]
    node _wnList_res_im_T_8 = asUInt(asSInt(UInt<16>("hae45"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_1 = bits(_wnList_res_im_T_8, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_1 = bits(_wnList_res_im_T_8, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_1 = bits(_wnList_res_im_T_8, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_1 = eq(wnList_res_im_rawIn_expIn_1, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_1 = eq(wnList_res_im_rawIn_fractIn_1, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_18 = bits(wnList_res_im_rawIn_fractIn_1, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_19 = bits(wnList_res_im_rawIn_fractIn_1, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_20 = bits(wnList_res_im_rawIn_fractIn_1, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_21 = bits(wnList_res_im_rawIn_fractIn_1, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_22 = bits(wnList_res_im_rawIn_fractIn_1, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_23 = bits(wnList_res_im_rawIn_fractIn_1, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_24 = bits(wnList_res_im_rawIn_fractIn_1, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_25 = bits(wnList_res_im_rawIn_fractIn_1, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_26 = bits(wnList_res_im_rawIn_fractIn_1, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_27 = bits(wnList_res_im_rawIn_fractIn_1, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_28 = mux(_wnList_res_im_rawIn_normDist_T_19, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_29 = mux(_wnList_res_im_rawIn_normDist_T_20, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_28) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_30 = mux(_wnList_res_im_rawIn_normDist_T_21, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_29) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_31 = mux(_wnList_res_im_rawIn_normDist_T_22, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_30) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_32 = mux(_wnList_res_im_rawIn_normDist_T_23, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_31) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_33 = mux(_wnList_res_im_rawIn_normDist_T_24, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_32) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_34 = mux(_wnList_res_im_rawIn_normDist_T_25, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_33) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_35 = mux(_wnList_res_im_rawIn_normDist_T_26, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_34) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_1 = mux(_wnList_res_im_rawIn_normDist_T_27, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_35) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_2 = dshl(wnList_res_im_rawIn_fractIn_1, wnList_res_im_rawIn_normDist_1) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_3 = bits(_wnList_res_im_rawIn_subnormFract_T_2, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_1 = shl(_wnList_res_im_rawIn_subnormFract_T_3, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_5 = xor(wnList_res_im_rawIn_normDist_1, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_6 = mux(wnList_res_im_rawIn_isZeroExpIn_1, _wnList_res_im_rawIn_adjustedExp_T_5, wnList_res_im_rawIn_expIn_1) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_7 = mux(wnList_res_im_rawIn_isZeroExpIn_1, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_8 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_7) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_9 = add(_wnList_res_im_rawIn_adjustedExp_T_6, _wnList_res_im_rawIn_adjustedExp_T_8) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_1 = tail(_wnList_res_im_rawIn_adjustedExp_T_9, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_1 = and(wnList_res_im_rawIn_isZeroExpIn_1, wnList_res_im_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_1 = bits(wnList_res_im_rawIn_adjustedExp_1, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_1 = eq(_wnList_res_im_rawIn_isSpecial_T_1, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_1 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_1 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_2 = eq(wnList_res_im_rawIn_isZeroFractIn_1, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_3 = and(wnList_res_im_rawIn_isSpecial_1, _wnList_res_im_rawIn_out_isNaN_T_2) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_1.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_3 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_1 = and(wnList_res_im_rawIn_isSpecial_1, wnList_res_im_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_1.isInf <= _wnList_res_im_rawIn_out_isInf_T_1 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_1.isZero <= wnList_res_im_rawIn_isZero_1 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_1.sign <= wnList_res_im_rawIn_sign_1 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_2 = bits(wnList_res_im_rawIn_adjustedExp_1, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_3 = cvt(_wnList_res_im_rawIn_out_sExp_T_2) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_1.sExp <= _wnList_res_im_rawIn_out_sExp_T_3 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_3 = eq(wnList_res_im_rawIn_isZero_1, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_4 = mux(wnList_res_im_rawIn_isZeroExpIn_1, wnList_res_im_rawIn_subnormFract_1, wnList_res_im_rawIn_fractIn_1) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_1 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_3) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_5 = cat(wnList_res_im_rawIn_out_sig_hi_1, _wnList_res_im_rawIn_out_sig_T_4) @[Cat.scala 33:92]
    wnList_res_im_rawIn_1.sig <= _wnList_res_im_rawIn_out_sig_T_5 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_9 = bits(wnList_res_im_rawIn_1.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_10 = mux(wnList_res_im_rawIn_1.isZero, UInt<3>("h0"), _wnList_res_im_T_9) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_11 = mux(wnList_res_im_rawIn_1.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_12 = or(_wnList_res_im_T_10, _wnList_res_im_T_11) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_13 = bits(wnList_res_im_rawIn_1.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_14 = bits(wnList_res_im_rawIn_1.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_1 = cat(_wnList_res_im_T_13, _wnList_res_im_T_14) @[Cat.scala 33:92]
    node wnList_res_im_hi_1 = cat(wnList_res_im_rawIn_1.sign, _wnList_res_im_T_12) @[Cat.scala 33:92]
    node _wnList_res_im_T_15 = cat(wnList_res_im_hi_1, wnList_res_im_lo_1) @[Cat.scala 33:92]
    node _wnList_res_im_T_16 = asUInt(asSInt(UInt<16>("hb23e"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_2 = bits(_wnList_res_im_T_16, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_2 = bits(_wnList_res_im_T_16, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_2 = bits(_wnList_res_im_T_16, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_2 = eq(wnList_res_im_rawIn_expIn_2, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_2 = eq(wnList_res_im_rawIn_fractIn_2, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_36 = bits(wnList_res_im_rawIn_fractIn_2, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_37 = bits(wnList_res_im_rawIn_fractIn_2, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_38 = bits(wnList_res_im_rawIn_fractIn_2, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_39 = bits(wnList_res_im_rawIn_fractIn_2, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_40 = bits(wnList_res_im_rawIn_fractIn_2, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_41 = bits(wnList_res_im_rawIn_fractIn_2, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_42 = bits(wnList_res_im_rawIn_fractIn_2, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_43 = bits(wnList_res_im_rawIn_fractIn_2, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_44 = bits(wnList_res_im_rawIn_fractIn_2, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_45 = bits(wnList_res_im_rawIn_fractIn_2, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_46 = mux(_wnList_res_im_rawIn_normDist_T_37, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_47 = mux(_wnList_res_im_rawIn_normDist_T_38, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_46) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_48 = mux(_wnList_res_im_rawIn_normDist_T_39, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_47) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_49 = mux(_wnList_res_im_rawIn_normDist_T_40, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_48) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_50 = mux(_wnList_res_im_rawIn_normDist_T_41, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_49) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_51 = mux(_wnList_res_im_rawIn_normDist_T_42, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_50) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_52 = mux(_wnList_res_im_rawIn_normDist_T_43, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_51) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_53 = mux(_wnList_res_im_rawIn_normDist_T_44, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_52) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_2 = mux(_wnList_res_im_rawIn_normDist_T_45, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_53) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_4 = dshl(wnList_res_im_rawIn_fractIn_2, wnList_res_im_rawIn_normDist_2) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_5 = bits(_wnList_res_im_rawIn_subnormFract_T_4, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_2 = shl(_wnList_res_im_rawIn_subnormFract_T_5, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_10 = xor(wnList_res_im_rawIn_normDist_2, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_11 = mux(wnList_res_im_rawIn_isZeroExpIn_2, _wnList_res_im_rawIn_adjustedExp_T_10, wnList_res_im_rawIn_expIn_2) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_12 = mux(wnList_res_im_rawIn_isZeroExpIn_2, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_13 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_12) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_14 = add(_wnList_res_im_rawIn_adjustedExp_T_11, _wnList_res_im_rawIn_adjustedExp_T_13) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_2 = tail(_wnList_res_im_rawIn_adjustedExp_T_14, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_2 = and(wnList_res_im_rawIn_isZeroExpIn_2, wnList_res_im_rawIn_isZeroFractIn_2) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_2 = bits(wnList_res_im_rawIn_adjustedExp_2, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_2 = eq(_wnList_res_im_rawIn_isSpecial_T_2, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_2 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_2 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_4 = eq(wnList_res_im_rawIn_isZeroFractIn_2, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_5 = and(wnList_res_im_rawIn_isSpecial_2, _wnList_res_im_rawIn_out_isNaN_T_4) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_2.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_5 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_2 = and(wnList_res_im_rawIn_isSpecial_2, wnList_res_im_rawIn_isZeroFractIn_2) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_2.isInf <= _wnList_res_im_rawIn_out_isInf_T_2 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_2.isZero <= wnList_res_im_rawIn_isZero_2 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_2.sign <= wnList_res_im_rawIn_sign_2 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_4 = bits(wnList_res_im_rawIn_adjustedExp_2, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_5 = cvt(_wnList_res_im_rawIn_out_sExp_T_4) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_2.sExp <= _wnList_res_im_rawIn_out_sExp_T_5 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_6 = eq(wnList_res_im_rawIn_isZero_2, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_7 = mux(wnList_res_im_rawIn_isZeroExpIn_2, wnList_res_im_rawIn_subnormFract_2, wnList_res_im_rawIn_fractIn_2) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_2 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_6) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_8 = cat(wnList_res_im_rawIn_out_sig_hi_2, _wnList_res_im_rawIn_out_sig_T_7) @[Cat.scala 33:92]
    wnList_res_im_rawIn_2.sig <= _wnList_res_im_rawIn_out_sig_T_8 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_17 = bits(wnList_res_im_rawIn_2.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_18 = mux(wnList_res_im_rawIn_2.isZero, UInt<3>("h0"), _wnList_res_im_T_17) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_19 = mux(wnList_res_im_rawIn_2.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_20 = or(_wnList_res_im_T_18, _wnList_res_im_T_19) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_21 = bits(wnList_res_im_rawIn_2.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_22 = bits(wnList_res_im_rawIn_2.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_2 = cat(_wnList_res_im_T_21, _wnList_res_im_T_22) @[Cat.scala 33:92]
    node wnList_res_im_hi_2 = cat(wnList_res_im_rawIn_2.sign, _wnList_res_im_T_20) @[Cat.scala 33:92]
    node _wnList_res_im_T_23 = cat(wnList_res_im_hi_2, wnList_res_im_lo_2) @[Cat.scala 33:92]
    node _wnList_res_im_T_24 = asUInt(asSInt(UInt<16>("hb4a5"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_3 = bits(_wnList_res_im_T_24, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_3 = bits(_wnList_res_im_T_24, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_3 = bits(_wnList_res_im_T_24, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_3 = eq(wnList_res_im_rawIn_expIn_3, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_3 = eq(wnList_res_im_rawIn_fractIn_3, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_54 = bits(wnList_res_im_rawIn_fractIn_3, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_55 = bits(wnList_res_im_rawIn_fractIn_3, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_56 = bits(wnList_res_im_rawIn_fractIn_3, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_57 = bits(wnList_res_im_rawIn_fractIn_3, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_58 = bits(wnList_res_im_rawIn_fractIn_3, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_59 = bits(wnList_res_im_rawIn_fractIn_3, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_60 = bits(wnList_res_im_rawIn_fractIn_3, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_61 = bits(wnList_res_im_rawIn_fractIn_3, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_62 = bits(wnList_res_im_rawIn_fractIn_3, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_63 = bits(wnList_res_im_rawIn_fractIn_3, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_64 = mux(_wnList_res_im_rawIn_normDist_T_55, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_65 = mux(_wnList_res_im_rawIn_normDist_T_56, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_64) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_66 = mux(_wnList_res_im_rawIn_normDist_T_57, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_65) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_67 = mux(_wnList_res_im_rawIn_normDist_T_58, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_66) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_68 = mux(_wnList_res_im_rawIn_normDist_T_59, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_67) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_69 = mux(_wnList_res_im_rawIn_normDist_T_60, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_68) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_70 = mux(_wnList_res_im_rawIn_normDist_T_61, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_69) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_71 = mux(_wnList_res_im_rawIn_normDist_T_62, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_70) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_3 = mux(_wnList_res_im_rawIn_normDist_T_63, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_71) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_6 = dshl(wnList_res_im_rawIn_fractIn_3, wnList_res_im_rawIn_normDist_3) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_7 = bits(_wnList_res_im_rawIn_subnormFract_T_6, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_3 = shl(_wnList_res_im_rawIn_subnormFract_T_7, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_15 = xor(wnList_res_im_rawIn_normDist_3, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_16 = mux(wnList_res_im_rawIn_isZeroExpIn_3, _wnList_res_im_rawIn_adjustedExp_T_15, wnList_res_im_rawIn_expIn_3) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_17 = mux(wnList_res_im_rawIn_isZeroExpIn_3, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_18 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_17) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_19 = add(_wnList_res_im_rawIn_adjustedExp_T_16, _wnList_res_im_rawIn_adjustedExp_T_18) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_3 = tail(_wnList_res_im_rawIn_adjustedExp_T_19, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_3 = and(wnList_res_im_rawIn_isZeroExpIn_3, wnList_res_im_rawIn_isZeroFractIn_3) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_3 = bits(wnList_res_im_rawIn_adjustedExp_3, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_3 = eq(_wnList_res_im_rawIn_isSpecial_T_3, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_3 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_3 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_6 = eq(wnList_res_im_rawIn_isZeroFractIn_3, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_7 = and(wnList_res_im_rawIn_isSpecial_3, _wnList_res_im_rawIn_out_isNaN_T_6) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_3.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_7 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_3 = and(wnList_res_im_rawIn_isSpecial_3, wnList_res_im_rawIn_isZeroFractIn_3) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_3.isInf <= _wnList_res_im_rawIn_out_isInf_T_3 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_3.isZero <= wnList_res_im_rawIn_isZero_3 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_3.sign <= wnList_res_im_rawIn_sign_3 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_6 = bits(wnList_res_im_rawIn_adjustedExp_3, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_7 = cvt(_wnList_res_im_rawIn_out_sExp_T_6) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_3.sExp <= _wnList_res_im_rawIn_out_sExp_T_7 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_9 = eq(wnList_res_im_rawIn_isZero_3, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_10 = mux(wnList_res_im_rawIn_isZeroExpIn_3, wnList_res_im_rawIn_subnormFract_3, wnList_res_im_rawIn_fractIn_3) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_3 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_9) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_11 = cat(wnList_res_im_rawIn_out_sig_hi_3, _wnList_res_im_rawIn_out_sig_T_10) @[Cat.scala 33:92]
    wnList_res_im_rawIn_3.sig <= _wnList_res_im_rawIn_out_sig_T_11 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_25 = bits(wnList_res_im_rawIn_3.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_26 = mux(wnList_res_im_rawIn_3.isZero, UInt<3>("h0"), _wnList_res_im_T_25) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_27 = mux(wnList_res_im_rawIn_3.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_28 = or(_wnList_res_im_T_26, _wnList_res_im_T_27) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_29 = bits(wnList_res_im_rawIn_3.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_30 = bits(wnList_res_im_rawIn_3.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_3 = cat(_wnList_res_im_T_29, _wnList_res_im_T_30) @[Cat.scala 33:92]
    node wnList_res_im_hi_3 = cat(wnList_res_im_rawIn_3.sign, _wnList_res_im_T_28) @[Cat.scala 33:92]
    node _wnList_res_im_T_31 = cat(wnList_res_im_hi_3, wnList_res_im_lo_3) @[Cat.scala 33:92]
    node _wnList_res_im_T_32 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_4 = bits(_wnList_res_im_T_32, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_4 = bits(_wnList_res_im_T_32, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_4 = bits(_wnList_res_im_T_32, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_4 = eq(wnList_res_im_rawIn_expIn_4, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_4 = eq(wnList_res_im_rawIn_fractIn_4, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_72 = bits(wnList_res_im_rawIn_fractIn_4, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_73 = bits(wnList_res_im_rawIn_fractIn_4, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_74 = bits(wnList_res_im_rawIn_fractIn_4, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_75 = bits(wnList_res_im_rawIn_fractIn_4, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_76 = bits(wnList_res_im_rawIn_fractIn_4, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_77 = bits(wnList_res_im_rawIn_fractIn_4, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_78 = bits(wnList_res_im_rawIn_fractIn_4, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_79 = bits(wnList_res_im_rawIn_fractIn_4, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_80 = bits(wnList_res_im_rawIn_fractIn_4, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_81 = bits(wnList_res_im_rawIn_fractIn_4, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_82 = mux(_wnList_res_im_rawIn_normDist_T_73, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_83 = mux(_wnList_res_im_rawIn_normDist_T_74, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_82) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_84 = mux(_wnList_res_im_rawIn_normDist_T_75, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_83) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_85 = mux(_wnList_res_im_rawIn_normDist_T_76, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_84) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_86 = mux(_wnList_res_im_rawIn_normDist_T_77, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_85) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_87 = mux(_wnList_res_im_rawIn_normDist_T_78, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_86) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_88 = mux(_wnList_res_im_rawIn_normDist_T_79, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_87) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_89 = mux(_wnList_res_im_rawIn_normDist_T_80, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_88) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_4 = mux(_wnList_res_im_rawIn_normDist_T_81, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_89) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_8 = dshl(wnList_res_im_rawIn_fractIn_4, wnList_res_im_rawIn_normDist_4) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_9 = bits(_wnList_res_im_rawIn_subnormFract_T_8, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_4 = shl(_wnList_res_im_rawIn_subnormFract_T_9, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_20 = xor(wnList_res_im_rawIn_normDist_4, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_21 = mux(wnList_res_im_rawIn_isZeroExpIn_4, _wnList_res_im_rawIn_adjustedExp_T_20, wnList_res_im_rawIn_expIn_4) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_22 = mux(wnList_res_im_rawIn_isZeroExpIn_4, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_23 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_22) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_24 = add(_wnList_res_im_rawIn_adjustedExp_T_21, _wnList_res_im_rawIn_adjustedExp_T_23) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_4 = tail(_wnList_res_im_rawIn_adjustedExp_T_24, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_4 = and(wnList_res_im_rawIn_isZeroExpIn_4, wnList_res_im_rawIn_isZeroFractIn_4) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_4 = bits(wnList_res_im_rawIn_adjustedExp_4, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_4 = eq(_wnList_res_im_rawIn_isSpecial_T_4, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_4 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_4 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_8 = eq(wnList_res_im_rawIn_isZeroFractIn_4, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_9 = and(wnList_res_im_rawIn_isSpecial_4, _wnList_res_im_rawIn_out_isNaN_T_8) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_4.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_9 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_4 = and(wnList_res_im_rawIn_isSpecial_4, wnList_res_im_rawIn_isZeroFractIn_4) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_4.isInf <= _wnList_res_im_rawIn_out_isInf_T_4 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_4.isZero <= wnList_res_im_rawIn_isZero_4 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_4.sign <= wnList_res_im_rawIn_sign_4 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_8 = bits(wnList_res_im_rawIn_adjustedExp_4, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_9 = cvt(_wnList_res_im_rawIn_out_sExp_T_8) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_4.sExp <= _wnList_res_im_rawIn_out_sExp_T_9 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_12 = eq(wnList_res_im_rawIn_isZero_4, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_13 = mux(wnList_res_im_rawIn_isZeroExpIn_4, wnList_res_im_rawIn_subnormFract_4, wnList_res_im_rawIn_fractIn_4) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_4 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_12) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_14 = cat(wnList_res_im_rawIn_out_sig_hi_4, _wnList_res_im_rawIn_out_sig_T_13) @[Cat.scala 33:92]
    wnList_res_im_rawIn_4.sig <= _wnList_res_im_rawIn_out_sig_T_14 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_33 = bits(wnList_res_im_rawIn_4.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_34 = mux(wnList_res_im_rawIn_4.isZero, UInt<3>("h0"), _wnList_res_im_T_33) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_35 = mux(wnList_res_im_rawIn_4.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_36 = or(_wnList_res_im_T_34, _wnList_res_im_T_35) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_37 = bits(wnList_res_im_rawIn_4.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_38 = bits(wnList_res_im_rawIn_4.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_4 = cat(_wnList_res_im_T_37, _wnList_res_im_T_38) @[Cat.scala 33:92]
    node wnList_res_im_hi_4 = cat(wnList_res_im_rawIn_4.sign, _wnList_res_im_T_36) @[Cat.scala 33:92]
    node _wnList_res_im_T_39 = cat(wnList_res_im_hi_4, wnList_res_im_lo_4) @[Cat.scala 33:92]
    node _wnList_res_im_T_40 = asUInt(asSInt(UInt<16>("hb78a"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_5 = bits(_wnList_res_im_T_40, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_5 = bits(_wnList_res_im_T_40, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_5 = bits(_wnList_res_im_T_40, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_5 = eq(wnList_res_im_rawIn_expIn_5, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_5 = eq(wnList_res_im_rawIn_fractIn_5, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_90 = bits(wnList_res_im_rawIn_fractIn_5, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_91 = bits(wnList_res_im_rawIn_fractIn_5, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_92 = bits(wnList_res_im_rawIn_fractIn_5, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_93 = bits(wnList_res_im_rawIn_fractIn_5, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_94 = bits(wnList_res_im_rawIn_fractIn_5, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_95 = bits(wnList_res_im_rawIn_fractIn_5, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_96 = bits(wnList_res_im_rawIn_fractIn_5, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_97 = bits(wnList_res_im_rawIn_fractIn_5, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_98 = bits(wnList_res_im_rawIn_fractIn_5, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_99 = bits(wnList_res_im_rawIn_fractIn_5, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_100 = mux(_wnList_res_im_rawIn_normDist_T_91, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_101 = mux(_wnList_res_im_rawIn_normDist_T_92, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_100) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_102 = mux(_wnList_res_im_rawIn_normDist_T_93, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_101) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_103 = mux(_wnList_res_im_rawIn_normDist_T_94, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_102) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_104 = mux(_wnList_res_im_rawIn_normDist_T_95, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_103) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_105 = mux(_wnList_res_im_rawIn_normDist_T_96, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_104) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_106 = mux(_wnList_res_im_rawIn_normDist_T_97, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_105) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_107 = mux(_wnList_res_im_rawIn_normDist_T_98, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_106) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_5 = mux(_wnList_res_im_rawIn_normDist_T_99, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_107) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_10 = dshl(wnList_res_im_rawIn_fractIn_5, wnList_res_im_rawIn_normDist_5) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_11 = bits(_wnList_res_im_rawIn_subnormFract_T_10, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_5 = shl(_wnList_res_im_rawIn_subnormFract_T_11, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_25 = xor(wnList_res_im_rawIn_normDist_5, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_26 = mux(wnList_res_im_rawIn_isZeroExpIn_5, _wnList_res_im_rawIn_adjustedExp_T_25, wnList_res_im_rawIn_expIn_5) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_27 = mux(wnList_res_im_rawIn_isZeroExpIn_5, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_28 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_27) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_29 = add(_wnList_res_im_rawIn_adjustedExp_T_26, _wnList_res_im_rawIn_adjustedExp_T_28) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_5 = tail(_wnList_res_im_rawIn_adjustedExp_T_29, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_5 = and(wnList_res_im_rawIn_isZeroExpIn_5, wnList_res_im_rawIn_isZeroFractIn_5) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_5 = bits(wnList_res_im_rawIn_adjustedExp_5, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_5 = eq(_wnList_res_im_rawIn_isSpecial_T_5, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_5 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_5 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_10 = eq(wnList_res_im_rawIn_isZeroFractIn_5, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_11 = and(wnList_res_im_rawIn_isSpecial_5, _wnList_res_im_rawIn_out_isNaN_T_10) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_5.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_11 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_5 = and(wnList_res_im_rawIn_isSpecial_5, wnList_res_im_rawIn_isZeroFractIn_5) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_5.isInf <= _wnList_res_im_rawIn_out_isInf_T_5 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_5.isZero <= wnList_res_im_rawIn_isZero_5 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_5.sign <= wnList_res_im_rawIn_sign_5 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_10 = bits(wnList_res_im_rawIn_adjustedExp_5, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_11 = cvt(_wnList_res_im_rawIn_out_sExp_T_10) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_5.sExp <= _wnList_res_im_rawIn_out_sExp_T_11 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_15 = eq(wnList_res_im_rawIn_isZero_5, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_16 = mux(wnList_res_im_rawIn_isZeroExpIn_5, wnList_res_im_rawIn_subnormFract_5, wnList_res_im_rawIn_fractIn_5) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_5 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_15) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_17 = cat(wnList_res_im_rawIn_out_sig_hi_5, _wnList_res_im_rawIn_out_sig_T_16) @[Cat.scala 33:92]
    wnList_res_im_rawIn_5.sig <= _wnList_res_im_rawIn_out_sig_T_17 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_41 = bits(wnList_res_im_rawIn_5.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_42 = mux(wnList_res_im_rawIn_5.isZero, UInt<3>("h0"), _wnList_res_im_T_41) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_43 = mux(wnList_res_im_rawIn_5.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_44 = or(_wnList_res_im_T_42, _wnList_res_im_T_43) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_45 = bits(wnList_res_im_rawIn_5.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_46 = bits(wnList_res_im_rawIn_5.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_5 = cat(_wnList_res_im_T_45, _wnList_res_im_T_46) @[Cat.scala 33:92]
    node wnList_res_im_hi_5 = cat(wnList_res_im_rawIn_5.sign, _wnList_res_im_T_44) @[Cat.scala 33:92]
    node _wnList_res_im_T_47 = cat(wnList_res_im_hi_5, wnList_res_im_lo_5) @[Cat.scala 33:92]
    node _wnList_res_im_T_48 = asUInt(asSInt(UInt<16>("hb871"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_6 = bits(_wnList_res_im_T_48, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_6 = bits(_wnList_res_im_T_48, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_6 = bits(_wnList_res_im_T_48, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_6 = eq(wnList_res_im_rawIn_expIn_6, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_6 = eq(wnList_res_im_rawIn_fractIn_6, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_108 = bits(wnList_res_im_rawIn_fractIn_6, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_109 = bits(wnList_res_im_rawIn_fractIn_6, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_110 = bits(wnList_res_im_rawIn_fractIn_6, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_111 = bits(wnList_res_im_rawIn_fractIn_6, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_112 = bits(wnList_res_im_rawIn_fractIn_6, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_113 = bits(wnList_res_im_rawIn_fractIn_6, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_114 = bits(wnList_res_im_rawIn_fractIn_6, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_115 = bits(wnList_res_im_rawIn_fractIn_6, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_116 = bits(wnList_res_im_rawIn_fractIn_6, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_117 = bits(wnList_res_im_rawIn_fractIn_6, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_118 = mux(_wnList_res_im_rawIn_normDist_T_109, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_119 = mux(_wnList_res_im_rawIn_normDist_T_110, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_118) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_120 = mux(_wnList_res_im_rawIn_normDist_T_111, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_119) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_121 = mux(_wnList_res_im_rawIn_normDist_T_112, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_120) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_122 = mux(_wnList_res_im_rawIn_normDist_T_113, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_121) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_123 = mux(_wnList_res_im_rawIn_normDist_T_114, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_122) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_124 = mux(_wnList_res_im_rawIn_normDist_T_115, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_123) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_125 = mux(_wnList_res_im_rawIn_normDist_T_116, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_124) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_6 = mux(_wnList_res_im_rawIn_normDist_T_117, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_125) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_12 = dshl(wnList_res_im_rawIn_fractIn_6, wnList_res_im_rawIn_normDist_6) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_13 = bits(_wnList_res_im_rawIn_subnormFract_T_12, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_6 = shl(_wnList_res_im_rawIn_subnormFract_T_13, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_30 = xor(wnList_res_im_rawIn_normDist_6, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_31 = mux(wnList_res_im_rawIn_isZeroExpIn_6, _wnList_res_im_rawIn_adjustedExp_T_30, wnList_res_im_rawIn_expIn_6) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_32 = mux(wnList_res_im_rawIn_isZeroExpIn_6, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_33 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_32) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_34 = add(_wnList_res_im_rawIn_adjustedExp_T_31, _wnList_res_im_rawIn_adjustedExp_T_33) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_6 = tail(_wnList_res_im_rawIn_adjustedExp_T_34, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_6 = and(wnList_res_im_rawIn_isZeroExpIn_6, wnList_res_im_rawIn_isZeroFractIn_6) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_6 = bits(wnList_res_im_rawIn_adjustedExp_6, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_6 = eq(_wnList_res_im_rawIn_isSpecial_T_6, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_6 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_6 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_12 = eq(wnList_res_im_rawIn_isZeroFractIn_6, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_13 = and(wnList_res_im_rawIn_isSpecial_6, _wnList_res_im_rawIn_out_isNaN_T_12) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_6.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_13 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_6 = and(wnList_res_im_rawIn_isSpecial_6, wnList_res_im_rawIn_isZeroFractIn_6) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_6.isInf <= _wnList_res_im_rawIn_out_isInf_T_6 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_6.isZero <= wnList_res_im_rawIn_isZero_6 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_6.sign <= wnList_res_im_rawIn_sign_6 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_12 = bits(wnList_res_im_rawIn_adjustedExp_6, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_13 = cvt(_wnList_res_im_rawIn_out_sExp_T_12) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_6.sExp <= _wnList_res_im_rawIn_out_sExp_T_13 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_18 = eq(wnList_res_im_rawIn_isZero_6, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_19 = mux(wnList_res_im_rawIn_isZeroExpIn_6, wnList_res_im_rawIn_subnormFract_6, wnList_res_im_rawIn_fractIn_6) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_6 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_18) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_20 = cat(wnList_res_im_rawIn_out_sig_hi_6, _wnList_res_im_rawIn_out_sig_T_19) @[Cat.scala 33:92]
    wnList_res_im_rawIn_6.sig <= _wnList_res_im_rawIn_out_sig_T_20 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_49 = bits(wnList_res_im_rawIn_6.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_50 = mux(wnList_res_im_rawIn_6.isZero, UInt<3>("h0"), _wnList_res_im_T_49) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_51 = mux(wnList_res_im_rawIn_6.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_52 = or(_wnList_res_im_T_50, _wnList_res_im_T_51) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_53 = bits(wnList_res_im_rawIn_6.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_54 = bits(wnList_res_im_rawIn_6.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_6 = cat(_wnList_res_im_T_53, _wnList_res_im_T_54) @[Cat.scala 33:92]
    node wnList_res_im_hi_6 = cat(wnList_res_im_rawIn_6.sign, _wnList_res_im_T_52) @[Cat.scala 33:92]
    node _wnList_res_im_T_55 = cat(wnList_res_im_hi_6, wnList_res_im_lo_6) @[Cat.scala 33:92]
    node _wnList_res_im_T_56 = asUInt(asSInt(UInt<16>("hb913"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_7 = bits(_wnList_res_im_T_56, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_7 = bits(_wnList_res_im_T_56, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_7 = bits(_wnList_res_im_T_56, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_7 = eq(wnList_res_im_rawIn_expIn_7, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_7 = eq(wnList_res_im_rawIn_fractIn_7, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_126 = bits(wnList_res_im_rawIn_fractIn_7, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_127 = bits(wnList_res_im_rawIn_fractIn_7, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_128 = bits(wnList_res_im_rawIn_fractIn_7, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_129 = bits(wnList_res_im_rawIn_fractIn_7, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_130 = bits(wnList_res_im_rawIn_fractIn_7, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_131 = bits(wnList_res_im_rawIn_fractIn_7, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_132 = bits(wnList_res_im_rawIn_fractIn_7, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_133 = bits(wnList_res_im_rawIn_fractIn_7, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_134 = bits(wnList_res_im_rawIn_fractIn_7, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_135 = bits(wnList_res_im_rawIn_fractIn_7, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_136 = mux(_wnList_res_im_rawIn_normDist_T_127, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_137 = mux(_wnList_res_im_rawIn_normDist_T_128, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_136) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_138 = mux(_wnList_res_im_rawIn_normDist_T_129, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_137) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_139 = mux(_wnList_res_im_rawIn_normDist_T_130, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_138) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_140 = mux(_wnList_res_im_rawIn_normDist_T_131, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_139) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_141 = mux(_wnList_res_im_rawIn_normDist_T_132, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_140) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_142 = mux(_wnList_res_im_rawIn_normDist_T_133, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_141) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_143 = mux(_wnList_res_im_rawIn_normDist_T_134, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_142) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_7 = mux(_wnList_res_im_rawIn_normDist_T_135, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_143) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_14 = dshl(wnList_res_im_rawIn_fractIn_7, wnList_res_im_rawIn_normDist_7) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_15 = bits(_wnList_res_im_rawIn_subnormFract_T_14, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_7 = shl(_wnList_res_im_rawIn_subnormFract_T_15, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_35 = xor(wnList_res_im_rawIn_normDist_7, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_36 = mux(wnList_res_im_rawIn_isZeroExpIn_7, _wnList_res_im_rawIn_adjustedExp_T_35, wnList_res_im_rawIn_expIn_7) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_37 = mux(wnList_res_im_rawIn_isZeroExpIn_7, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_38 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_37) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_39 = add(_wnList_res_im_rawIn_adjustedExp_T_36, _wnList_res_im_rawIn_adjustedExp_T_38) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_7 = tail(_wnList_res_im_rawIn_adjustedExp_T_39, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_7 = and(wnList_res_im_rawIn_isZeroExpIn_7, wnList_res_im_rawIn_isZeroFractIn_7) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_7 = bits(wnList_res_im_rawIn_adjustedExp_7, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_7 = eq(_wnList_res_im_rawIn_isSpecial_T_7, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_7 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_7 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_14 = eq(wnList_res_im_rawIn_isZeroFractIn_7, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_15 = and(wnList_res_im_rawIn_isSpecial_7, _wnList_res_im_rawIn_out_isNaN_T_14) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_7.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_15 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_7 = and(wnList_res_im_rawIn_isSpecial_7, wnList_res_im_rawIn_isZeroFractIn_7) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_7.isInf <= _wnList_res_im_rawIn_out_isInf_T_7 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_7.isZero <= wnList_res_im_rawIn_isZero_7 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_7.sign <= wnList_res_im_rawIn_sign_7 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_14 = bits(wnList_res_im_rawIn_adjustedExp_7, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_15 = cvt(_wnList_res_im_rawIn_out_sExp_T_14) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_7.sExp <= _wnList_res_im_rawIn_out_sExp_T_15 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_21 = eq(wnList_res_im_rawIn_isZero_7, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_22 = mux(wnList_res_im_rawIn_isZeroExpIn_7, wnList_res_im_rawIn_subnormFract_7, wnList_res_im_rawIn_fractIn_7) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_7 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_21) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_23 = cat(wnList_res_im_rawIn_out_sig_hi_7, _wnList_res_im_rawIn_out_sig_T_22) @[Cat.scala 33:92]
    wnList_res_im_rawIn_7.sig <= _wnList_res_im_rawIn_out_sig_T_23 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_57 = bits(wnList_res_im_rawIn_7.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_58 = mux(wnList_res_im_rawIn_7.isZero, UInt<3>("h0"), _wnList_res_im_T_57) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_59 = mux(wnList_res_im_rawIn_7.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_60 = or(_wnList_res_im_T_58, _wnList_res_im_T_59) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_61 = bits(wnList_res_im_rawIn_7.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_62 = bits(wnList_res_im_rawIn_7.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_7 = cat(_wnList_res_im_T_61, _wnList_res_im_T_62) @[Cat.scala 33:92]
    node wnList_res_im_hi_7 = cat(wnList_res_im_rawIn_7.sign, _wnList_res_im_T_60) @[Cat.scala 33:92]
    node _wnList_res_im_T_63 = cat(wnList_res_im_hi_7, wnList_res_im_lo_7) @[Cat.scala 33:92]
    node _wnList_res_im_T_64 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_8 = bits(_wnList_res_im_T_64, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_8 = bits(_wnList_res_im_T_64, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_8 = bits(_wnList_res_im_T_64, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_8 = eq(wnList_res_im_rawIn_expIn_8, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_8 = eq(wnList_res_im_rawIn_fractIn_8, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_144 = bits(wnList_res_im_rawIn_fractIn_8, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_145 = bits(wnList_res_im_rawIn_fractIn_8, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_146 = bits(wnList_res_im_rawIn_fractIn_8, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_147 = bits(wnList_res_im_rawIn_fractIn_8, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_148 = bits(wnList_res_im_rawIn_fractIn_8, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_149 = bits(wnList_res_im_rawIn_fractIn_8, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_150 = bits(wnList_res_im_rawIn_fractIn_8, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_151 = bits(wnList_res_im_rawIn_fractIn_8, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_152 = bits(wnList_res_im_rawIn_fractIn_8, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_153 = bits(wnList_res_im_rawIn_fractIn_8, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_154 = mux(_wnList_res_im_rawIn_normDist_T_145, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_155 = mux(_wnList_res_im_rawIn_normDist_T_146, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_154) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_156 = mux(_wnList_res_im_rawIn_normDist_T_147, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_155) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_157 = mux(_wnList_res_im_rawIn_normDist_T_148, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_156) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_158 = mux(_wnList_res_im_rawIn_normDist_T_149, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_157) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_159 = mux(_wnList_res_im_rawIn_normDist_T_150, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_158) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_160 = mux(_wnList_res_im_rawIn_normDist_T_151, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_159) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_161 = mux(_wnList_res_im_rawIn_normDist_T_152, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_160) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_8 = mux(_wnList_res_im_rawIn_normDist_T_153, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_161) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_16 = dshl(wnList_res_im_rawIn_fractIn_8, wnList_res_im_rawIn_normDist_8) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_17 = bits(_wnList_res_im_rawIn_subnormFract_T_16, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_8 = shl(_wnList_res_im_rawIn_subnormFract_T_17, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_40 = xor(wnList_res_im_rawIn_normDist_8, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_41 = mux(wnList_res_im_rawIn_isZeroExpIn_8, _wnList_res_im_rawIn_adjustedExp_T_40, wnList_res_im_rawIn_expIn_8) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_42 = mux(wnList_res_im_rawIn_isZeroExpIn_8, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_43 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_42) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_44 = add(_wnList_res_im_rawIn_adjustedExp_T_41, _wnList_res_im_rawIn_adjustedExp_T_43) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_8 = tail(_wnList_res_im_rawIn_adjustedExp_T_44, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_8 = and(wnList_res_im_rawIn_isZeroExpIn_8, wnList_res_im_rawIn_isZeroFractIn_8) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_8 = bits(wnList_res_im_rawIn_adjustedExp_8, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_8 = eq(_wnList_res_im_rawIn_isSpecial_T_8, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_8 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_8 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_16 = eq(wnList_res_im_rawIn_isZeroFractIn_8, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_17 = and(wnList_res_im_rawIn_isSpecial_8, _wnList_res_im_rawIn_out_isNaN_T_16) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_8.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_17 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_8 = and(wnList_res_im_rawIn_isSpecial_8, wnList_res_im_rawIn_isZeroFractIn_8) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_8.isInf <= _wnList_res_im_rawIn_out_isInf_T_8 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_8.isZero <= wnList_res_im_rawIn_isZero_8 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_8.sign <= wnList_res_im_rawIn_sign_8 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_16 = bits(wnList_res_im_rawIn_adjustedExp_8, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_17 = cvt(_wnList_res_im_rawIn_out_sExp_T_16) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_8.sExp <= _wnList_res_im_rawIn_out_sExp_T_17 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_24 = eq(wnList_res_im_rawIn_isZero_8, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_25 = mux(wnList_res_im_rawIn_isZeroExpIn_8, wnList_res_im_rawIn_subnormFract_8, wnList_res_im_rawIn_fractIn_8) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_8 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_24) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_26 = cat(wnList_res_im_rawIn_out_sig_hi_8, _wnList_res_im_rawIn_out_sig_T_25) @[Cat.scala 33:92]
    wnList_res_im_rawIn_8.sig <= _wnList_res_im_rawIn_out_sig_T_26 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_65 = bits(wnList_res_im_rawIn_8.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_66 = mux(wnList_res_im_rawIn_8.isZero, UInt<3>("h0"), _wnList_res_im_T_65) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_67 = mux(wnList_res_im_rawIn_8.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_68 = or(_wnList_res_im_T_66, _wnList_res_im_T_67) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_69 = bits(wnList_res_im_rawIn_8.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_70 = bits(wnList_res_im_rawIn_8.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_8 = cat(_wnList_res_im_T_69, _wnList_res_im_T_70) @[Cat.scala 33:92]
    node wnList_res_im_hi_8 = cat(wnList_res_im_rawIn_8.sign, _wnList_res_im_T_68) @[Cat.scala 33:92]
    node _wnList_res_im_T_71 = cat(wnList_res_im_hi_8, wnList_res_im_lo_8) @[Cat.scala 33:92]
    node _wnList_res_im_T_72 = asUInt(asSInt(UInt<16>("hba2f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_9 = bits(_wnList_res_im_T_72, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_9 = bits(_wnList_res_im_T_72, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_9 = bits(_wnList_res_im_T_72, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_9 = eq(wnList_res_im_rawIn_expIn_9, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_9 = eq(wnList_res_im_rawIn_fractIn_9, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_162 = bits(wnList_res_im_rawIn_fractIn_9, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_163 = bits(wnList_res_im_rawIn_fractIn_9, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_164 = bits(wnList_res_im_rawIn_fractIn_9, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_165 = bits(wnList_res_im_rawIn_fractIn_9, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_166 = bits(wnList_res_im_rawIn_fractIn_9, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_167 = bits(wnList_res_im_rawIn_fractIn_9, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_168 = bits(wnList_res_im_rawIn_fractIn_9, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_169 = bits(wnList_res_im_rawIn_fractIn_9, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_170 = bits(wnList_res_im_rawIn_fractIn_9, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_171 = bits(wnList_res_im_rawIn_fractIn_9, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_172 = mux(_wnList_res_im_rawIn_normDist_T_163, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_173 = mux(_wnList_res_im_rawIn_normDist_T_164, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_172) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_174 = mux(_wnList_res_im_rawIn_normDist_T_165, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_173) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_175 = mux(_wnList_res_im_rawIn_normDist_T_166, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_174) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_176 = mux(_wnList_res_im_rawIn_normDist_T_167, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_175) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_177 = mux(_wnList_res_im_rawIn_normDist_T_168, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_176) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_178 = mux(_wnList_res_im_rawIn_normDist_T_169, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_177) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_179 = mux(_wnList_res_im_rawIn_normDist_T_170, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_178) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_9 = mux(_wnList_res_im_rawIn_normDist_T_171, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_179) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_18 = dshl(wnList_res_im_rawIn_fractIn_9, wnList_res_im_rawIn_normDist_9) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_19 = bits(_wnList_res_im_rawIn_subnormFract_T_18, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_9 = shl(_wnList_res_im_rawIn_subnormFract_T_19, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_45 = xor(wnList_res_im_rawIn_normDist_9, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_46 = mux(wnList_res_im_rawIn_isZeroExpIn_9, _wnList_res_im_rawIn_adjustedExp_T_45, wnList_res_im_rawIn_expIn_9) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_47 = mux(wnList_res_im_rawIn_isZeroExpIn_9, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_48 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_47) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_49 = add(_wnList_res_im_rawIn_adjustedExp_T_46, _wnList_res_im_rawIn_adjustedExp_T_48) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_9 = tail(_wnList_res_im_rawIn_adjustedExp_T_49, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_9 = and(wnList_res_im_rawIn_isZeroExpIn_9, wnList_res_im_rawIn_isZeroFractIn_9) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_9 = bits(wnList_res_im_rawIn_adjustedExp_9, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_9 = eq(_wnList_res_im_rawIn_isSpecial_T_9, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_9 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_9 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_18 = eq(wnList_res_im_rawIn_isZeroFractIn_9, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_19 = and(wnList_res_im_rawIn_isSpecial_9, _wnList_res_im_rawIn_out_isNaN_T_18) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_9.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_19 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_9 = and(wnList_res_im_rawIn_isSpecial_9, wnList_res_im_rawIn_isZeroFractIn_9) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_9.isInf <= _wnList_res_im_rawIn_out_isInf_T_9 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_9.isZero <= wnList_res_im_rawIn_isZero_9 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_9.sign <= wnList_res_im_rawIn_sign_9 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_18 = bits(wnList_res_im_rawIn_adjustedExp_9, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_19 = cvt(_wnList_res_im_rawIn_out_sExp_T_18) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_9.sExp <= _wnList_res_im_rawIn_out_sExp_T_19 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_27 = eq(wnList_res_im_rawIn_isZero_9, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_28 = mux(wnList_res_im_rawIn_isZeroExpIn_9, wnList_res_im_rawIn_subnormFract_9, wnList_res_im_rawIn_fractIn_9) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_9 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_27) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_29 = cat(wnList_res_im_rawIn_out_sig_hi_9, _wnList_res_im_rawIn_out_sig_T_28) @[Cat.scala 33:92]
    wnList_res_im_rawIn_9.sig <= _wnList_res_im_rawIn_out_sig_T_29 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_73 = bits(wnList_res_im_rawIn_9.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_74 = mux(wnList_res_im_rawIn_9.isZero, UInt<3>("h0"), _wnList_res_im_T_73) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_75 = mux(wnList_res_im_rawIn_9.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_76 = or(_wnList_res_im_T_74, _wnList_res_im_T_75) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_77 = bits(wnList_res_im_rawIn_9.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_78 = bits(wnList_res_im_rawIn_9.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_9 = cat(_wnList_res_im_T_77, _wnList_res_im_T_78) @[Cat.scala 33:92]
    node wnList_res_im_hi_9 = cat(wnList_res_im_rawIn_9.sign, _wnList_res_im_T_76) @[Cat.scala 33:92]
    node _wnList_res_im_T_79 = cat(wnList_res_im_hi_9, wnList_res_im_lo_9) @[Cat.scala 33:92]
    node _wnList_res_im_T_80 = asUInt(asSInt(UInt<16>("hbaa6"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_10 = bits(_wnList_res_im_T_80, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_10 = bits(_wnList_res_im_T_80, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_10 = bits(_wnList_res_im_T_80, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_10 = eq(wnList_res_im_rawIn_expIn_10, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_10 = eq(wnList_res_im_rawIn_fractIn_10, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_180 = bits(wnList_res_im_rawIn_fractIn_10, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_181 = bits(wnList_res_im_rawIn_fractIn_10, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_182 = bits(wnList_res_im_rawIn_fractIn_10, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_183 = bits(wnList_res_im_rawIn_fractIn_10, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_184 = bits(wnList_res_im_rawIn_fractIn_10, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_185 = bits(wnList_res_im_rawIn_fractIn_10, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_186 = bits(wnList_res_im_rawIn_fractIn_10, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_187 = bits(wnList_res_im_rawIn_fractIn_10, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_188 = bits(wnList_res_im_rawIn_fractIn_10, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_189 = bits(wnList_res_im_rawIn_fractIn_10, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_190 = mux(_wnList_res_im_rawIn_normDist_T_181, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_191 = mux(_wnList_res_im_rawIn_normDist_T_182, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_190) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_192 = mux(_wnList_res_im_rawIn_normDist_T_183, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_191) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_193 = mux(_wnList_res_im_rawIn_normDist_T_184, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_192) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_194 = mux(_wnList_res_im_rawIn_normDist_T_185, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_193) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_195 = mux(_wnList_res_im_rawIn_normDist_T_186, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_194) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_196 = mux(_wnList_res_im_rawIn_normDist_T_187, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_195) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_197 = mux(_wnList_res_im_rawIn_normDist_T_188, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_196) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_10 = mux(_wnList_res_im_rawIn_normDist_T_189, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_197) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_20 = dshl(wnList_res_im_rawIn_fractIn_10, wnList_res_im_rawIn_normDist_10) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_21 = bits(_wnList_res_im_rawIn_subnormFract_T_20, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_10 = shl(_wnList_res_im_rawIn_subnormFract_T_21, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_50 = xor(wnList_res_im_rawIn_normDist_10, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_51 = mux(wnList_res_im_rawIn_isZeroExpIn_10, _wnList_res_im_rawIn_adjustedExp_T_50, wnList_res_im_rawIn_expIn_10) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_52 = mux(wnList_res_im_rawIn_isZeroExpIn_10, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_53 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_52) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_54 = add(_wnList_res_im_rawIn_adjustedExp_T_51, _wnList_res_im_rawIn_adjustedExp_T_53) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_10 = tail(_wnList_res_im_rawIn_adjustedExp_T_54, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_10 = and(wnList_res_im_rawIn_isZeroExpIn_10, wnList_res_im_rawIn_isZeroFractIn_10) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_10 = bits(wnList_res_im_rawIn_adjustedExp_10, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_10 = eq(_wnList_res_im_rawIn_isSpecial_T_10, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_10 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_10 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_20 = eq(wnList_res_im_rawIn_isZeroFractIn_10, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_21 = and(wnList_res_im_rawIn_isSpecial_10, _wnList_res_im_rawIn_out_isNaN_T_20) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_10.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_21 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_10 = and(wnList_res_im_rawIn_isSpecial_10, wnList_res_im_rawIn_isZeroFractIn_10) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_10.isInf <= _wnList_res_im_rawIn_out_isInf_T_10 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_10.isZero <= wnList_res_im_rawIn_isZero_10 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_10.sign <= wnList_res_im_rawIn_sign_10 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_20 = bits(wnList_res_im_rawIn_adjustedExp_10, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_21 = cvt(_wnList_res_im_rawIn_out_sExp_T_20) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_10.sExp <= _wnList_res_im_rawIn_out_sExp_T_21 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_30 = eq(wnList_res_im_rawIn_isZero_10, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_31 = mux(wnList_res_im_rawIn_isZeroExpIn_10, wnList_res_im_rawIn_subnormFract_10, wnList_res_im_rawIn_fractIn_10) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_10 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_30) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_32 = cat(wnList_res_im_rawIn_out_sig_hi_10, _wnList_res_im_rawIn_out_sig_T_31) @[Cat.scala 33:92]
    wnList_res_im_rawIn_10.sig <= _wnList_res_im_rawIn_out_sig_T_32 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_81 = bits(wnList_res_im_rawIn_10.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_82 = mux(wnList_res_im_rawIn_10.isZero, UInt<3>("h0"), _wnList_res_im_T_81) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_83 = mux(wnList_res_im_rawIn_10.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_84 = or(_wnList_res_im_T_82, _wnList_res_im_T_83) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_85 = bits(wnList_res_im_rawIn_10.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_86 = bits(wnList_res_im_rawIn_10.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_10 = cat(_wnList_res_im_T_85, _wnList_res_im_T_86) @[Cat.scala 33:92]
    node wnList_res_im_hi_10 = cat(wnList_res_im_rawIn_10.sign, _wnList_res_im_T_84) @[Cat.scala 33:92]
    node _wnList_res_im_T_87 = cat(wnList_res_im_hi_10, wnList_res_im_lo_10) @[Cat.scala 33:92]
    node _wnList_res_im_T_88 = asUInt(asSInt(UInt<16>("hbb0e"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_11 = bits(_wnList_res_im_T_88, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_11 = bits(_wnList_res_im_T_88, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_11 = bits(_wnList_res_im_T_88, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_11 = eq(wnList_res_im_rawIn_expIn_11, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_11 = eq(wnList_res_im_rawIn_fractIn_11, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_198 = bits(wnList_res_im_rawIn_fractIn_11, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_199 = bits(wnList_res_im_rawIn_fractIn_11, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_200 = bits(wnList_res_im_rawIn_fractIn_11, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_201 = bits(wnList_res_im_rawIn_fractIn_11, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_202 = bits(wnList_res_im_rawIn_fractIn_11, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_203 = bits(wnList_res_im_rawIn_fractIn_11, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_204 = bits(wnList_res_im_rawIn_fractIn_11, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_205 = bits(wnList_res_im_rawIn_fractIn_11, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_206 = bits(wnList_res_im_rawIn_fractIn_11, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_207 = bits(wnList_res_im_rawIn_fractIn_11, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_208 = mux(_wnList_res_im_rawIn_normDist_T_199, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_209 = mux(_wnList_res_im_rawIn_normDist_T_200, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_208) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_210 = mux(_wnList_res_im_rawIn_normDist_T_201, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_209) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_211 = mux(_wnList_res_im_rawIn_normDist_T_202, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_210) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_212 = mux(_wnList_res_im_rawIn_normDist_T_203, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_211) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_213 = mux(_wnList_res_im_rawIn_normDist_T_204, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_212) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_214 = mux(_wnList_res_im_rawIn_normDist_T_205, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_213) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_215 = mux(_wnList_res_im_rawIn_normDist_T_206, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_214) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_11 = mux(_wnList_res_im_rawIn_normDist_T_207, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_215) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_22 = dshl(wnList_res_im_rawIn_fractIn_11, wnList_res_im_rawIn_normDist_11) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_23 = bits(_wnList_res_im_rawIn_subnormFract_T_22, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_11 = shl(_wnList_res_im_rawIn_subnormFract_T_23, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_55 = xor(wnList_res_im_rawIn_normDist_11, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_56 = mux(wnList_res_im_rawIn_isZeroExpIn_11, _wnList_res_im_rawIn_adjustedExp_T_55, wnList_res_im_rawIn_expIn_11) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_57 = mux(wnList_res_im_rawIn_isZeroExpIn_11, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_58 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_57) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_59 = add(_wnList_res_im_rawIn_adjustedExp_T_56, _wnList_res_im_rawIn_adjustedExp_T_58) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_11 = tail(_wnList_res_im_rawIn_adjustedExp_T_59, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_11 = and(wnList_res_im_rawIn_isZeroExpIn_11, wnList_res_im_rawIn_isZeroFractIn_11) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_11 = bits(wnList_res_im_rawIn_adjustedExp_11, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_11 = eq(_wnList_res_im_rawIn_isSpecial_T_11, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_11 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_11 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_22 = eq(wnList_res_im_rawIn_isZeroFractIn_11, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_23 = and(wnList_res_im_rawIn_isSpecial_11, _wnList_res_im_rawIn_out_isNaN_T_22) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_11.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_23 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_11 = and(wnList_res_im_rawIn_isSpecial_11, wnList_res_im_rawIn_isZeroFractIn_11) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_11.isInf <= _wnList_res_im_rawIn_out_isInf_T_11 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_11.isZero <= wnList_res_im_rawIn_isZero_11 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_11.sign <= wnList_res_im_rawIn_sign_11 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_22 = bits(wnList_res_im_rawIn_adjustedExp_11, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_23 = cvt(_wnList_res_im_rawIn_out_sExp_T_22) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_11.sExp <= _wnList_res_im_rawIn_out_sExp_T_23 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_33 = eq(wnList_res_im_rawIn_isZero_11, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_34 = mux(wnList_res_im_rawIn_isZeroExpIn_11, wnList_res_im_rawIn_subnormFract_11, wnList_res_im_rawIn_fractIn_11) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_11 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_33) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_35 = cat(wnList_res_im_rawIn_out_sig_hi_11, _wnList_res_im_rawIn_out_sig_T_34) @[Cat.scala 33:92]
    wnList_res_im_rawIn_11.sig <= _wnList_res_im_rawIn_out_sig_T_35 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_89 = bits(wnList_res_im_rawIn_11.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_90 = mux(wnList_res_im_rawIn_11.isZero, UInt<3>("h0"), _wnList_res_im_T_89) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_91 = mux(wnList_res_im_rawIn_11.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_92 = or(_wnList_res_im_T_90, _wnList_res_im_T_91) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_93 = bits(wnList_res_im_rawIn_11.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_94 = bits(wnList_res_im_rawIn_11.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_11 = cat(_wnList_res_im_T_93, _wnList_res_im_T_94) @[Cat.scala 33:92]
    node wnList_res_im_hi_11 = cat(wnList_res_im_rawIn_11.sign, _wnList_res_im_T_92) @[Cat.scala 33:92]
    node _wnList_res_im_T_95 = cat(wnList_res_im_hi_11, wnList_res_im_lo_11) @[Cat.scala 33:92]
    node _wnList_res_im_T_96 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_12 = bits(_wnList_res_im_T_96, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_12 = bits(_wnList_res_im_T_96, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_12 = bits(_wnList_res_im_T_96, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_12 = eq(wnList_res_im_rawIn_expIn_12, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_12 = eq(wnList_res_im_rawIn_fractIn_12, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_216 = bits(wnList_res_im_rawIn_fractIn_12, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_217 = bits(wnList_res_im_rawIn_fractIn_12, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_218 = bits(wnList_res_im_rawIn_fractIn_12, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_219 = bits(wnList_res_im_rawIn_fractIn_12, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_220 = bits(wnList_res_im_rawIn_fractIn_12, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_221 = bits(wnList_res_im_rawIn_fractIn_12, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_222 = bits(wnList_res_im_rawIn_fractIn_12, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_223 = bits(wnList_res_im_rawIn_fractIn_12, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_224 = bits(wnList_res_im_rawIn_fractIn_12, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_225 = bits(wnList_res_im_rawIn_fractIn_12, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_226 = mux(_wnList_res_im_rawIn_normDist_T_217, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_227 = mux(_wnList_res_im_rawIn_normDist_T_218, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_226) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_228 = mux(_wnList_res_im_rawIn_normDist_T_219, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_227) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_229 = mux(_wnList_res_im_rawIn_normDist_T_220, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_228) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_230 = mux(_wnList_res_im_rawIn_normDist_T_221, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_229) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_231 = mux(_wnList_res_im_rawIn_normDist_T_222, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_230) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_232 = mux(_wnList_res_im_rawIn_normDist_T_223, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_231) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_233 = mux(_wnList_res_im_rawIn_normDist_T_224, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_232) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_12 = mux(_wnList_res_im_rawIn_normDist_T_225, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_233) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_24 = dshl(wnList_res_im_rawIn_fractIn_12, wnList_res_im_rawIn_normDist_12) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_25 = bits(_wnList_res_im_rawIn_subnormFract_T_24, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_12 = shl(_wnList_res_im_rawIn_subnormFract_T_25, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_60 = xor(wnList_res_im_rawIn_normDist_12, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_61 = mux(wnList_res_im_rawIn_isZeroExpIn_12, _wnList_res_im_rawIn_adjustedExp_T_60, wnList_res_im_rawIn_expIn_12) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_62 = mux(wnList_res_im_rawIn_isZeroExpIn_12, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_63 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_62) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_64 = add(_wnList_res_im_rawIn_adjustedExp_T_61, _wnList_res_im_rawIn_adjustedExp_T_63) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_12 = tail(_wnList_res_im_rawIn_adjustedExp_T_64, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_12 = and(wnList_res_im_rawIn_isZeroExpIn_12, wnList_res_im_rawIn_isZeroFractIn_12) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_12 = bits(wnList_res_im_rawIn_adjustedExp_12, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_12 = eq(_wnList_res_im_rawIn_isSpecial_T_12, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_12 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_12 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_24 = eq(wnList_res_im_rawIn_isZeroFractIn_12, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_25 = and(wnList_res_im_rawIn_isSpecial_12, _wnList_res_im_rawIn_out_isNaN_T_24) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_12.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_25 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_12 = and(wnList_res_im_rawIn_isSpecial_12, wnList_res_im_rawIn_isZeroFractIn_12) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_12.isInf <= _wnList_res_im_rawIn_out_isInf_T_12 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_12.isZero <= wnList_res_im_rawIn_isZero_12 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_12.sign <= wnList_res_im_rawIn_sign_12 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_24 = bits(wnList_res_im_rawIn_adjustedExp_12, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_25 = cvt(_wnList_res_im_rawIn_out_sExp_T_24) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_12.sExp <= _wnList_res_im_rawIn_out_sExp_T_25 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_36 = eq(wnList_res_im_rawIn_isZero_12, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_37 = mux(wnList_res_im_rawIn_isZeroExpIn_12, wnList_res_im_rawIn_subnormFract_12, wnList_res_im_rawIn_fractIn_12) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_12 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_36) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_38 = cat(wnList_res_im_rawIn_out_sig_hi_12, _wnList_res_im_rawIn_out_sig_T_37) @[Cat.scala 33:92]
    wnList_res_im_rawIn_12.sig <= _wnList_res_im_rawIn_out_sig_T_38 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_97 = bits(wnList_res_im_rawIn_12.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_98 = mux(wnList_res_im_rawIn_12.isZero, UInt<3>("h0"), _wnList_res_im_T_97) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_99 = mux(wnList_res_im_rawIn_12.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_100 = or(_wnList_res_im_T_98, _wnList_res_im_T_99) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_101 = bits(wnList_res_im_rawIn_12.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_102 = bits(wnList_res_im_rawIn_12.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_12 = cat(_wnList_res_im_T_101, _wnList_res_im_T_102) @[Cat.scala 33:92]
    node wnList_res_im_hi_12 = cat(wnList_res_im_rawIn_12.sign, _wnList_res_im_T_100) @[Cat.scala 33:92]
    node _wnList_res_im_T_103 = cat(wnList_res_im_hi_12, wnList_res_im_lo_12) @[Cat.scala 33:92]
    node _wnList_res_im_T_104 = asUInt(asSInt(UInt<16>("hbba7"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_13 = bits(_wnList_res_im_T_104, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_13 = bits(_wnList_res_im_T_104, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_13 = bits(_wnList_res_im_T_104, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_13 = eq(wnList_res_im_rawIn_expIn_13, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_13 = eq(wnList_res_im_rawIn_fractIn_13, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_234 = bits(wnList_res_im_rawIn_fractIn_13, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_235 = bits(wnList_res_im_rawIn_fractIn_13, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_236 = bits(wnList_res_im_rawIn_fractIn_13, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_237 = bits(wnList_res_im_rawIn_fractIn_13, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_238 = bits(wnList_res_im_rawIn_fractIn_13, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_239 = bits(wnList_res_im_rawIn_fractIn_13, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_240 = bits(wnList_res_im_rawIn_fractIn_13, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_241 = bits(wnList_res_im_rawIn_fractIn_13, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_242 = bits(wnList_res_im_rawIn_fractIn_13, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_243 = bits(wnList_res_im_rawIn_fractIn_13, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_244 = mux(_wnList_res_im_rawIn_normDist_T_235, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_245 = mux(_wnList_res_im_rawIn_normDist_T_236, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_244) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_246 = mux(_wnList_res_im_rawIn_normDist_T_237, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_245) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_247 = mux(_wnList_res_im_rawIn_normDist_T_238, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_246) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_248 = mux(_wnList_res_im_rawIn_normDist_T_239, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_247) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_249 = mux(_wnList_res_im_rawIn_normDist_T_240, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_248) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_250 = mux(_wnList_res_im_rawIn_normDist_T_241, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_249) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_251 = mux(_wnList_res_im_rawIn_normDist_T_242, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_250) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_13 = mux(_wnList_res_im_rawIn_normDist_T_243, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_251) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_26 = dshl(wnList_res_im_rawIn_fractIn_13, wnList_res_im_rawIn_normDist_13) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_27 = bits(_wnList_res_im_rawIn_subnormFract_T_26, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_13 = shl(_wnList_res_im_rawIn_subnormFract_T_27, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_65 = xor(wnList_res_im_rawIn_normDist_13, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_66 = mux(wnList_res_im_rawIn_isZeroExpIn_13, _wnList_res_im_rawIn_adjustedExp_T_65, wnList_res_im_rawIn_expIn_13) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_67 = mux(wnList_res_im_rawIn_isZeroExpIn_13, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_68 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_67) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_69 = add(_wnList_res_im_rawIn_adjustedExp_T_66, _wnList_res_im_rawIn_adjustedExp_T_68) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_13 = tail(_wnList_res_im_rawIn_adjustedExp_T_69, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_13 = and(wnList_res_im_rawIn_isZeroExpIn_13, wnList_res_im_rawIn_isZeroFractIn_13) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_13 = bits(wnList_res_im_rawIn_adjustedExp_13, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_13 = eq(_wnList_res_im_rawIn_isSpecial_T_13, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_13 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_13 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_26 = eq(wnList_res_im_rawIn_isZeroFractIn_13, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_27 = and(wnList_res_im_rawIn_isSpecial_13, _wnList_res_im_rawIn_out_isNaN_T_26) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_13.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_27 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_13 = and(wnList_res_im_rawIn_isSpecial_13, wnList_res_im_rawIn_isZeroFractIn_13) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_13.isInf <= _wnList_res_im_rawIn_out_isInf_T_13 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_13.isZero <= wnList_res_im_rawIn_isZero_13 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_13.sign <= wnList_res_im_rawIn_sign_13 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_26 = bits(wnList_res_im_rawIn_adjustedExp_13, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_27 = cvt(_wnList_res_im_rawIn_out_sExp_T_26) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_13.sExp <= _wnList_res_im_rawIn_out_sExp_T_27 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_39 = eq(wnList_res_im_rawIn_isZero_13, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_40 = mux(wnList_res_im_rawIn_isZeroExpIn_13, wnList_res_im_rawIn_subnormFract_13, wnList_res_im_rawIn_fractIn_13) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_13 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_39) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_41 = cat(wnList_res_im_rawIn_out_sig_hi_13, _wnList_res_im_rawIn_out_sig_T_40) @[Cat.scala 33:92]
    wnList_res_im_rawIn_13.sig <= _wnList_res_im_rawIn_out_sig_T_41 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_105 = bits(wnList_res_im_rawIn_13.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_106 = mux(wnList_res_im_rawIn_13.isZero, UInt<3>("h0"), _wnList_res_im_T_105) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_107 = mux(wnList_res_im_rawIn_13.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_108 = or(_wnList_res_im_T_106, _wnList_res_im_T_107) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_109 = bits(wnList_res_im_rawIn_13.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_110 = bits(wnList_res_im_rawIn_13.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_13 = cat(_wnList_res_im_T_109, _wnList_res_im_T_110) @[Cat.scala 33:92]
    node wnList_res_im_hi_13 = cat(wnList_res_im_rawIn_13.sign, _wnList_res_im_T_108) @[Cat.scala 33:92]
    node _wnList_res_im_T_111 = cat(wnList_res_im_hi_13, wnList_res_im_lo_13) @[Cat.scala 33:92]
    node _wnList_res_im_T_112 = asUInt(asSInt(UInt<16>("hbbd8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_14 = bits(_wnList_res_im_T_112, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_14 = bits(_wnList_res_im_T_112, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_14 = bits(_wnList_res_im_T_112, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_14 = eq(wnList_res_im_rawIn_expIn_14, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_14 = eq(wnList_res_im_rawIn_fractIn_14, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_252 = bits(wnList_res_im_rawIn_fractIn_14, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_253 = bits(wnList_res_im_rawIn_fractIn_14, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_254 = bits(wnList_res_im_rawIn_fractIn_14, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_255 = bits(wnList_res_im_rawIn_fractIn_14, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_256 = bits(wnList_res_im_rawIn_fractIn_14, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_257 = bits(wnList_res_im_rawIn_fractIn_14, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_258 = bits(wnList_res_im_rawIn_fractIn_14, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_259 = bits(wnList_res_im_rawIn_fractIn_14, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_260 = bits(wnList_res_im_rawIn_fractIn_14, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_261 = bits(wnList_res_im_rawIn_fractIn_14, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_262 = mux(_wnList_res_im_rawIn_normDist_T_253, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_263 = mux(_wnList_res_im_rawIn_normDist_T_254, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_262) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_264 = mux(_wnList_res_im_rawIn_normDist_T_255, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_263) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_265 = mux(_wnList_res_im_rawIn_normDist_T_256, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_264) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_266 = mux(_wnList_res_im_rawIn_normDist_T_257, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_265) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_267 = mux(_wnList_res_im_rawIn_normDist_T_258, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_266) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_268 = mux(_wnList_res_im_rawIn_normDist_T_259, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_267) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_269 = mux(_wnList_res_im_rawIn_normDist_T_260, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_268) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_14 = mux(_wnList_res_im_rawIn_normDist_T_261, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_269) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_28 = dshl(wnList_res_im_rawIn_fractIn_14, wnList_res_im_rawIn_normDist_14) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_29 = bits(_wnList_res_im_rawIn_subnormFract_T_28, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_14 = shl(_wnList_res_im_rawIn_subnormFract_T_29, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_70 = xor(wnList_res_im_rawIn_normDist_14, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_71 = mux(wnList_res_im_rawIn_isZeroExpIn_14, _wnList_res_im_rawIn_adjustedExp_T_70, wnList_res_im_rawIn_expIn_14) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_72 = mux(wnList_res_im_rawIn_isZeroExpIn_14, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_73 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_72) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_74 = add(_wnList_res_im_rawIn_adjustedExp_T_71, _wnList_res_im_rawIn_adjustedExp_T_73) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_14 = tail(_wnList_res_im_rawIn_adjustedExp_T_74, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_14 = and(wnList_res_im_rawIn_isZeroExpIn_14, wnList_res_im_rawIn_isZeroFractIn_14) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_14 = bits(wnList_res_im_rawIn_adjustedExp_14, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_14 = eq(_wnList_res_im_rawIn_isSpecial_T_14, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_14 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_14 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_28 = eq(wnList_res_im_rawIn_isZeroFractIn_14, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_29 = and(wnList_res_im_rawIn_isSpecial_14, _wnList_res_im_rawIn_out_isNaN_T_28) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_14.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_29 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_14 = and(wnList_res_im_rawIn_isSpecial_14, wnList_res_im_rawIn_isZeroFractIn_14) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_14.isInf <= _wnList_res_im_rawIn_out_isInf_T_14 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_14.isZero <= wnList_res_im_rawIn_isZero_14 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_14.sign <= wnList_res_im_rawIn_sign_14 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_28 = bits(wnList_res_im_rawIn_adjustedExp_14, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_29 = cvt(_wnList_res_im_rawIn_out_sExp_T_28) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_14.sExp <= _wnList_res_im_rawIn_out_sExp_T_29 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_42 = eq(wnList_res_im_rawIn_isZero_14, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_43 = mux(wnList_res_im_rawIn_isZeroExpIn_14, wnList_res_im_rawIn_subnormFract_14, wnList_res_im_rawIn_fractIn_14) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_14 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_42) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_44 = cat(wnList_res_im_rawIn_out_sig_hi_14, _wnList_res_im_rawIn_out_sig_T_43) @[Cat.scala 33:92]
    wnList_res_im_rawIn_14.sig <= _wnList_res_im_rawIn_out_sig_T_44 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_113 = bits(wnList_res_im_rawIn_14.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_114 = mux(wnList_res_im_rawIn_14.isZero, UInt<3>("h0"), _wnList_res_im_T_113) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_115 = mux(wnList_res_im_rawIn_14.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_116 = or(_wnList_res_im_T_114, _wnList_res_im_T_115) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_117 = bits(wnList_res_im_rawIn_14.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_118 = bits(wnList_res_im_rawIn_14.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_14 = cat(_wnList_res_im_T_117, _wnList_res_im_T_118) @[Cat.scala 33:92]
    node wnList_res_im_hi_14 = cat(wnList_res_im_rawIn_14.sign, _wnList_res_im_T_116) @[Cat.scala 33:92]
    node _wnList_res_im_T_119 = cat(wnList_res_im_hi_14, wnList_res_im_lo_14) @[Cat.scala 33:92]
    node _wnList_res_im_T_120 = asUInt(asSInt(UInt<16>("hbbf6"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_15 = bits(_wnList_res_im_T_120, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_15 = bits(_wnList_res_im_T_120, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_15 = bits(_wnList_res_im_T_120, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_15 = eq(wnList_res_im_rawIn_expIn_15, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_15 = eq(wnList_res_im_rawIn_fractIn_15, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_270 = bits(wnList_res_im_rawIn_fractIn_15, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_271 = bits(wnList_res_im_rawIn_fractIn_15, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_272 = bits(wnList_res_im_rawIn_fractIn_15, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_273 = bits(wnList_res_im_rawIn_fractIn_15, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_274 = bits(wnList_res_im_rawIn_fractIn_15, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_275 = bits(wnList_res_im_rawIn_fractIn_15, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_276 = bits(wnList_res_im_rawIn_fractIn_15, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_277 = bits(wnList_res_im_rawIn_fractIn_15, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_278 = bits(wnList_res_im_rawIn_fractIn_15, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_279 = bits(wnList_res_im_rawIn_fractIn_15, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_280 = mux(_wnList_res_im_rawIn_normDist_T_271, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_281 = mux(_wnList_res_im_rawIn_normDist_T_272, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_280) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_282 = mux(_wnList_res_im_rawIn_normDist_T_273, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_281) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_283 = mux(_wnList_res_im_rawIn_normDist_T_274, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_282) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_284 = mux(_wnList_res_im_rawIn_normDist_T_275, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_283) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_285 = mux(_wnList_res_im_rawIn_normDist_T_276, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_284) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_286 = mux(_wnList_res_im_rawIn_normDist_T_277, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_285) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_287 = mux(_wnList_res_im_rawIn_normDist_T_278, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_286) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_15 = mux(_wnList_res_im_rawIn_normDist_T_279, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_287) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_30 = dshl(wnList_res_im_rawIn_fractIn_15, wnList_res_im_rawIn_normDist_15) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_31 = bits(_wnList_res_im_rawIn_subnormFract_T_30, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_15 = shl(_wnList_res_im_rawIn_subnormFract_T_31, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_75 = xor(wnList_res_im_rawIn_normDist_15, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_76 = mux(wnList_res_im_rawIn_isZeroExpIn_15, _wnList_res_im_rawIn_adjustedExp_T_75, wnList_res_im_rawIn_expIn_15) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_77 = mux(wnList_res_im_rawIn_isZeroExpIn_15, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_78 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_77) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_79 = add(_wnList_res_im_rawIn_adjustedExp_T_76, _wnList_res_im_rawIn_adjustedExp_T_78) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_15 = tail(_wnList_res_im_rawIn_adjustedExp_T_79, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_15 = and(wnList_res_im_rawIn_isZeroExpIn_15, wnList_res_im_rawIn_isZeroFractIn_15) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_15 = bits(wnList_res_im_rawIn_adjustedExp_15, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_15 = eq(_wnList_res_im_rawIn_isSpecial_T_15, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_15 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_15 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_30 = eq(wnList_res_im_rawIn_isZeroFractIn_15, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_31 = and(wnList_res_im_rawIn_isSpecial_15, _wnList_res_im_rawIn_out_isNaN_T_30) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_15.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_31 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_15 = and(wnList_res_im_rawIn_isSpecial_15, wnList_res_im_rawIn_isZeroFractIn_15) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_15.isInf <= _wnList_res_im_rawIn_out_isInf_T_15 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_15.isZero <= wnList_res_im_rawIn_isZero_15 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_15.sign <= wnList_res_im_rawIn_sign_15 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_30 = bits(wnList_res_im_rawIn_adjustedExp_15, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_31 = cvt(_wnList_res_im_rawIn_out_sExp_T_30) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_15.sExp <= _wnList_res_im_rawIn_out_sExp_T_31 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_45 = eq(wnList_res_im_rawIn_isZero_15, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_46 = mux(wnList_res_im_rawIn_isZeroExpIn_15, wnList_res_im_rawIn_subnormFract_15, wnList_res_im_rawIn_fractIn_15) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_15 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_45) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_47 = cat(wnList_res_im_rawIn_out_sig_hi_15, _wnList_res_im_rawIn_out_sig_T_46) @[Cat.scala 33:92]
    wnList_res_im_rawIn_15.sig <= _wnList_res_im_rawIn_out_sig_T_47 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_121 = bits(wnList_res_im_rawIn_15.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_122 = mux(wnList_res_im_rawIn_15.isZero, UInt<3>("h0"), _wnList_res_im_T_121) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_123 = mux(wnList_res_im_rawIn_15.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_124 = or(_wnList_res_im_T_122, _wnList_res_im_T_123) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_125 = bits(wnList_res_im_rawIn_15.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_126 = bits(wnList_res_im_rawIn_15.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_15 = cat(_wnList_res_im_T_125, _wnList_res_im_T_126) @[Cat.scala 33:92]
    node wnList_res_im_hi_15 = cat(wnList_res_im_rawIn_15.sign, _wnList_res_im_T_124) @[Cat.scala 33:92]
    node _wnList_res_im_T_127 = cat(wnList_res_im_hi_15, wnList_res_im_lo_15) @[Cat.scala 33:92]
    node _wnList_res_im_T_128 = asUInt(asSInt(UInt<16>("hbc00"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_16 = bits(_wnList_res_im_T_128, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_16 = bits(_wnList_res_im_T_128, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_16 = bits(_wnList_res_im_T_128, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_16 = eq(wnList_res_im_rawIn_expIn_16, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_16 = eq(wnList_res_im_rawIn_fractIn_16, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_288 = bits(wnList_res_im_rawIn_fractIn_16, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_289 = bits(wnList_res_im_rawIn_fractIn_16, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_290 = bits(wnList_res_im_rawIn_fractIn_16, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_291 = bits(wnList_res_im_rawIn_fractIn_16, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_292 = bits(wnList_res_im_rawIn_fractIn_16, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_293 = bits(wnList_res_im_rawIn_fractIn_16, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_294 = bits(wnList_res_im_rawIn_fractIn_16, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_295 = bits(wnList_res_im_rawIn_fractIn_16, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_296 = bits(wnList_res_im_rawIn_fractIn_16, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_297 = bits(wnList_res_im_rawIn_fractIn_16, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_298 = mux(_wnList_res_im_rawIn_normDist_T_289, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_299 = mux(_wnList_res_im_rawIn_normDist_T_290, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_298) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_300 = mux(_wnList_res_im_rawIn_normDist_T_291, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_299) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_301 = mux(_wnList_res_im_rawIn_normDist_T_292, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_300) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_302 = mux(_wnList_res_im_rawIn_normDist_T_293, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_301) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_303 = mux(_wnList_res_im_rawIn_normDist_T_294, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_302) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_304 = mux(_wnList_res_im_rawIn_normDist_T_295, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_303) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_305 = mux(_wnList_res_im_rawIn_normDist_T_296, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_304) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_16 = mux(_wnList_res_im_rawIn_normDist_T_297, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_305) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_32 = dshl(wnList_res_im_rawIn_fractIn_16, wnList_res_im_rawIn_normDist_16) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_33 = bits(_wnList_res_im_rawIn_subnormFract_T_32, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_16 = shl(_wnList_res_im_rawIn_subnormFract_T_33, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_80 = xor(wnList_res_im_rawIn_normDist_16, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_81 = mux(wnList_res_im_rawIn_isZeroExpIn_16, _wnList_res_im_rawIn_adjustedExp_T_80, wnList_res_im_rawIn_expIn_16) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_82 = mux(wnList_res_im_rawIn_isZeroExpIn_16, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_83 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_82) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_84 = add(_wnList_res_im_rawIn_adjustedExp_T_81, _wnList_res_im_rawIn_adjustedExp_T_83) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_16 = tail(_wnList_res_im_rawIn_adjustedExp_T_84, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_16 = and(wnList_res_im_rawIn_isZeroExpIn_16, wnList_res_im_rawIn_isZeroFractIn_16) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_16 = bits(wnList_res_im_rawIn_adjustedExp_16, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_16 = eq(_wnList_res_im_rawIn_isSpecial_T_16, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_16 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_16 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_32 = eq(wnList_res_im_rawIn_isZeroFractIn_16, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_33 = and(wnList_res_im_rawIn_isSpecial_16, _wnList_res_im_rawIn_out_isNaN_T_32) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_16.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_33 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_16 = and(wnList_res_im_rawIn_isSpecial_16, wnList_res_im_rawIn_isZeroFractIn_16) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_16.isInf <= _wnList_res_im_rawIn_out_isInf_T_16 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_16.isZero <= wnList_res_im_rawIn_isZero_16 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_16.sign <= wnList_res_im_rawIn_sign_16 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_32 = bits(wnList_res_im_rawIn_adjustedExp_16, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_33 = cvt(_wnList_res_im_rawIn_out_sExp_T_32) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_16.sExp <= _wnList_res_im_rawIn_out_sExp_T_33 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_48 = eq(wnList_res_im_rawIn_isZero_16, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_49 = mux(wnList_res_im_rawIn_isZeroExpIn_16, wnList_res_im_rawIn_subnormFract_16, wnList_res_im_rawIn_fractIn_16) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_16 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_48) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_50 = cat(wnList_res_im_rawIn_out_sig_hi_16, _wnList_res_im_rawIn_out_sig_T_49) @[Cat.scala 33:92]
    wnList_res_im_rawIn_16.sig <= _wnList_res_im_rawIn_out_sig_T_50 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_129 = bits(wnList_res_im_rawIn_16.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_130 = mux(wnList_res_im_rawIn_16.isZero, UInt<3>("h0"), _wnList_res_im_T_129) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_131 = mux(wnList_res_im_rawIn_16.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_132 = or(_wnList_res_im_T_130, _wnList_res_im_T_131) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_133 = bits(wnList_res_im_rawIn_16.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_134 = bits(wnList_res_im_rawIn_16.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_16 = cat(_wnList_res_im_T_133, _wnList_res_im_T_134) @[Cat.scala 33:92]
    node wnList_res_im_hi_16 = cat(wnList_res_im_rawIn_16.sign, _wnList_res_im_T_132) @[Cat.scala 33:92]
    node _wnList_res_im_T_135 = cat(wnList_res_im_hi_16, wnList_res_im_lo_16) @[Cat.scala 33:92]
    node _wnList_res_im_T_136 = asUInt(asSInt(UInt<16>("hbbf6"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_17 = bits(_wnList_res_im_T_136, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_17 = bits(_wnList_res_im_T_136, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_17 = bits(_wnList_res_im_T_136, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_17 = eq(wnList_res_im_rawIn_expIn_17, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_17 = eq(wnList_res_im_rawIn_fractIn_17, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_306 = bits(wnList_res_im_rawIn_fractIn_17, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_307 = bits(wnList_res_im_rawIn_fractIn_17, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_308 = bits(wnList_res_im_rawIn_fractIn_17, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_309 = bits(wnList_res_im_rawIn_fractIn_17, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_310 = bits(wnList_res_im_rawIn_fractIn_17, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_311 = bits(wnList_res_im_rawIn_fractIn_17, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_312 = bits(wnList_res_im_rawIn_fractIn_17, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_313 = bits(wnList_res_im_rawIn_fractIn_17, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_314 = bits(wnList_res_im_rawIn_fractIn_17, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_315 = bits(wnList_res_im_rawIn_fractIn_17, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_316 = mux(_wnList_res_im_rawIn_normDist_T_307, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_317 = mux(_wnList_res_im_rawIn_normDist_T_308, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_316) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_318 = mux(_wnList_res_im_rawIn_normDist_T_309, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_317) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_319 = mux(_wnList_res_im_rawIn_normDist_T_310, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_318) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_320 = mux(_wnList_res_im_rawIn_normDist_T_311, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_319) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_321 = mux(_wnList_res_im_rawIn_normDist_T_312, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_320) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_322 = mux(_wnList_res_im_rawIn_normDist_T_313, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_321) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_323 = mux(_wnList_res_im_rawIn_normDist_T_314, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_322) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_17 = mux(_wnList_res_im_rawIn_normDist_T_315, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_323) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_34 = dshl(wnList_res_im_rawIn_fractIn_17, wnList_res_im_rawIn_normDist_17) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_35 = bits(_wnList_res_im_rawIn_subnormFract_T_34, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_17 = shl(_wnList_res_im_rawIn_subnormFract_T_35, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_85 = xor(wnList_res_im_rawIn_normDist_17, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_86 = mux(wnList_res_im_rawIn_isZeroExpIn_17, _wnList_res_im_rawIn_adjustedExp_T_85, wnList_res_im_rawIn_expIn_17) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_87 = mux(wnList_res_im_rawIn_isZeroExpIn_17, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_88 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_87) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_89 = add(_wnList_res_im_rawIn_adjustedExp_T_86, _wnList_res_im_rawIn_adjustedExp_T_88) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_17 = tail(_wnList_res_im_rawIn_adjustedExp_T_89, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_17 = and(wnList_res_im_rawIn_isZeroExpIn_17, wnList_res_im_rawIn_isZeroFractIn_17) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_17 = bits(wnList_res_im_rawIn_adjustedExp_17, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_17 = eq(_wnList_res_im_rawIn_isSpecial_T_17, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_17 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_17 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_34 = eq(wnList_res_im_rawIn_isZeroFractIn_17, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_35 = and(wnList_res_im_rawIn_isSpecial_17, _wnList_res_im_rawIn_out_isNaN_T_34) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_17.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_35 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_17 = and(wnList_res_im_rawIn_isSpecial_17, wnList_res_im_rawIn_isZeroFractIn_17) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_17.isInf <= _wnList_res_im_rawIn_out_isInf_T_17 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_17.isZero <= wnList_res_im_rawIn_isZero_17 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_17.sign <= wnList_res_im_rawIn_sign_17 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_34 = bits(wnList_res_im_rawIn_adjustedExp_17, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_35 = cvt(_wnList_res_im_rawIn_out_sExp_T_34) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_17.sExp <= _wnList_res_im_rawIn_out_sExp_T_35 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_51 = eq(wnList_res_im_rawIn_isZero_17, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_52 = mux(wnList_res_im_rawIn_isZeroExpIn_17, wnList_res_im_rawIn_subnormFract_17, wnList_res_im_rawIn_fractIn_17) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_17 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_51) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_53 = cat(wnList_res_im_rawIn_out_sig_hi_17, _wnList_res_im_rawIn_out_sig_T_52) @[Cat.scala 33:92]
    wnList_res_im_rawIn_17.sig <= _wnList_res_im_rawIn_out_sig_T_53 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_137 = bits(wnList_res_im_rawIn_17.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_138 = mux(wnList_res_im_rawIn_17.isZero, UInt<3>("h0"), _wnList_res_im_T_137) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_139 = mux(wnList_res_im_rawIn_17.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_140 = or(_wnList_res_im_T_138, _wnList_res_im_T_139) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_141 = bits(wnList_res_im_rawIn_17.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_142 = bits(wnList_res_im_rawIn_17.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_17 = cat(_wnList_res_im_T_141, _wnList_res_im_T_142) @[Cat.scala 33:92]
    node wnList_res_im_hi_17 = cat(wnList_res_im_rawIn_17.sign, _wnList_res_im_T_140) @[Cat.scala 33:92]
    node _wnList_res_im_T_143 = cat(wnList_res_im_hi_17, wnList_res_im_lo_17) @[Cat.scala 33:92]
    node _wnList_res_im_T_144 = asUInt(asSInt(UInt<16>("hbbd8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_18 = bits(_wnList_res_im_T_144, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_18 = bits(_wnList_res_im_T_144, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_18 = bits(_wnList_res_im_T_144, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_18 = eq(wnList_res_im_rawIn_expIn_18, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_18 = eq(wnList_res_im_rawIn_fractIn_18, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_324 = bits(wnList_res_im_rawIn_fractIn_18, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_325 = bits(wnList_res_im_rawIn_fractIn_18, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_326 = bits(wnList_res_im_rawIn_fractIn_18, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_327 = bits(wnList_res_im_rawIn_fractIn_18, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_328 = bits(wnList_res_im_rawIn_fractIn_18, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_329 = bits(wnList_res_im_rawIn_fractIn_18, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_330 = bits(wnList_res_im_rawIn_fractIn_18, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_331 = bits(wnList_res_im_rawIn_fractIn_18, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_332 = bits(wnList_res_im_rawIn_fractIn_18, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_333 = bits(wnList_res_im_rawIn_fractIn_18, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_334 = mux(_wnList_res_im_rawIn_normDist_T_325, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_335 = mux(_wnList_res_im_rawIn_normDist_T_326, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_334) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_336 = mux(_wnList_res_im_rawIn_normDist_T_327, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_335) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_337 = mux(_wnList_res_im_rawIn_normDist_T_328, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_336) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_338 = mux(_wnList_res_im_rawIn_normDist_T_329, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_337) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_339 = mux(_wnList_res_im_rawIn_normDist_T_330, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_338) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_340 = mux(_wnList_res_im_rawIn_normDist_T_331, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_339) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_341 = mux(_wnList_res_im_rawIn_normDist_T_332, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_340) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_18 = mux(_wnList_res_im_rawIn_normDist_T_333, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_341) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_36 = dshl(wnList_res_im_rawIn_fractIn_18, wnList_res_im_rawIn_normDist_18) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_37 = bits(_wnList_res_im_rawIn_subnormFract_T_36, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_18 = shl(_wnList_res_im_rawIn_subnormFract_T_37, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_90 = xor(wnList_res_im_rawIn_normDist_18, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_91 = mux(wnList_res_im_rawIn_isZeroExpIn_18, _wnList_res_im_rawIn_adjustedExp_T_90, wnList_res_im_rawIn_expIn_18) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_92 = mux(wnList_res_im_rawIn_isZeroExpIn_18, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_93 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_92) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_94 = add(_wnList_res_im_rawIn_adjustedExp_T_91, _wnList_res_im_rawIn_adjustedExp_T_93) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_18 = tail(_wnList_res_im_rawIn_adjustedExp_T_94, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_18 = and(wnList_res_im_rawIn_isZeroExpIn_18, wnList_res_im_rawIn_isZeroFractIn_18) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_18 = bits(wnList_res_im_rawIn_adjustedExp_18, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_18 = eq(_wnList_res_im_rawIn_isSpecial_T_18, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_18 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_18 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_36 = eq(wnList_res_im_rawIn_isZeroFractIn_18, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_37 = and(wnList_res_im_rawIn_isSpecial_18, _wnList_res_im_rawIn_out_isNaN_T_36) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_18.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_37 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_18 = and(wnList_res_im_rawIn_isSpecial_18, wnList_res_im_rawIn_isZeroFractIn_18) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_18.isInf <= _wnList_res_im_rawIn_out_isInf_T_18 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_18.isZero <= wnList_res_im_rawIn_isZero_18 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_18.sign <= wnList_res_im_rawIn_sign_18 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_36 = bits(wnList_res_im_rawIn_adjustedExp_18, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_37 = cvt(_wnList_res_im_rawIn_out_sExp_T_36) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_18.sExp <= _wnList_res_im_rawIn_out_sExp_T_37 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_54 = eq(wnList_res_im_rawIn_isZero_18, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_55 = mux(wnList_res_im_rawIn_isZeroExpIn_18, wnList_res_im_rawIn_subnormFract_18, wnList_res_im_rawIn_fractIn_18) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_18 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_54) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_56 = cat(wnList_res_im_rawIn_out_sig_hi_18, _wnList_res_im_rawIn_out_sig_T_55) @[Cat.scala 33:92]
    wnList_res_im_rawIn_18.sig <= _wnList_res_im_rawIn_out_sig_T_56 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_145 = bits(wnList_res_im_rawIn_18.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_146 = mux(wnList_res_im_rawIn_18.isZero, UInt<3>("h0"), _wnList_res_im_T_145) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_147 = mux(wnList_res_im_rawIn_18.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_148 = or(_wnList_res_im_T_146, _wnList_res_im_T_147) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_149 = bits(wnList_res_im_rawIn_18.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_150 = bits(wnList_res_im_rawIn_18.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_18 = cat(_wnList_res_im_T_149, _wnList_res_im_T_150) @[Cat.scala 33:92]
    node wnList_res_im_hi_18 = cat(wnList_res_im_rawIn_18.sign, _wnList_res_im_T_148) @[Cat.scala 33:92]
    node _wnList_res_im_T_151 = cat(wnList_res_im_hi_18, wnList_res_im_lo_18) @[Cat.scala 33:92]
    node _wnList_res_im_T_152 = asUInt(asSInt(UInt<16>("hbba7"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_19 = bits(_wnList_res_im_T_152, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_19 = bits(_wnList_res_im_T_152, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_19 = bits(_wnList_res_im_T_152, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_19 = eq(wnList_res_im_rawIn_expIn_19, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_19 = eq(wnList_res_im_rawIn_fractIn_19, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_342 = bits(wnList_res_im_rawIn_fractIn_19, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_343 = bits(wnList_res_im_rawIn_fractIn_19, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_344 = bits(wnList_res_im_rawIn_fractIn_19, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_345 = bits(wnList_res_im_rawIn_fractIn_19, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_346 = bits(wnList_res_im_rawIn_fractIn_19, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_347 = bits(wnList_res_im_rawIn_fractIn_19, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_348 = bits(wnList_res_im_rawIn_fractIn_19, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_349 = bits(wnList_res_im_rawIn_fractIn_19, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_350 = bits(wnList_res_im_rawIn_fractIn_19, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_351 = bits(wnList_res_im_rawIn_fractIn_19, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_352 = mux(_wnList_res_im_rawIn_normDist_T_343, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_353 = mux(_wnList_res_im_rawIn_normDist_T_344, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_352) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_354 = mux(_wnList_res_im_rawIn_normDist_T_345, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_353) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_355 = mux(_wnList_res_im_rawIn_normDist_T_346, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_354) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_356 = mux(_wnList_res_im_rawIn_normDist_T_347, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_355) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_357 = mux(_wnList_res_im_rawIn_normDist_T_348, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_356) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_358 = mux(_wnList_res_im_rawIn_normDist_T_349, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_357) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_359 = mux(_wnList_res_im_rawIn_normDist_T_350, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_358) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_19 = mux(_wnList_res_im_rawIn_normDist_T_351, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_359) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_38 = dshl(wnList_res_im_rawIn_fractIn_19, wnList_res_im_rawIn_normDist_19) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_39 = bits(_wnList_res_im_rawIn_subnormFract_T_38, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_19 = shl(_wnList_res_im_rawIn_subnormFract_T_39, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_95 = xor(wnList_res_im_rawIn_normDist_19, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_96 = mux(wnList_res_im_rawIn_isZeroExpIn_19, _wnList_res_im_rawIn_adjustedExp_T_95, wnList_res_im_rawIn_expIn_19) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_97 = mux(wnList_res_im_rawIn_isZeroExpIn_19, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_98 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_97) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_99 = add(_wnList_res_im_rawIn_adjustedExp_T_96, _wnList_res_im_rawIn_adjustedExp_T_98) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_19 = tail(_wnList_res_im_rawIn_adjustedExp_T_99, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_19 = and(wnList_res_im_rawIn_isZeroExpIn_19, wnList_res_im_rawIn_isZeroFractIn_19) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_19 = bits(wnList_res_im_rawIn_adjustedExp_19, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_19 = eq(_wnList_res_im_rawIn_isSpecial_T_19, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_19 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_19 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_38 = eq(wnList_res_im_rawIn_isZeroFractIn_19, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_39 = and(wnList_res_im_rawIn_isSpecial_19, _wnList_res_im_rawIn_out_isNaN_T_38) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_19.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_39 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_19 = and(wnList_res_im_rawIn_isSpecial_19, wnList_res_im_rawIn_isZeroFractIn_19) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_19.isInf <= _wnList_res_im_rawIn_out_isInf_T_19 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_19.isZero <= wnList_res_im_rawIn_isZero_19 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_19.sign <= wnList_res_im_rawIn_sign_19 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_38 = bits(wnList_res_im_rawIn_adjustedExp_19, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_39 = cvt(_wnList_res_im_rawIn_out_sExp_T_38) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_19.sExp <= _wnList_res_im_rawIn_out_sExp_T_39 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_57 = eq(wnList_res_im_rawIn_isZero_19, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_58 = mux(wnList_res_im_rawIn_isZeroExpIn_19, wnList_res_im_rawIn_subnormFract_19, wnList_res_im_rawIn_fractIn_19) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_19 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_57) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_59 = cat(wnList_res_im_rawIn_out_sig_hi_19, _wnList_res_im_rawIn_out_sig_T_58) @[Cat.scala 33:92]
    wnList_res_im_rawIn_19.sig <= _wnList_res_im_rawIn_out_sig_T_59 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_153 = bits(wnList_res_im_rawIn_19.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_154 = mux(wnList_res_im_rawIn_19.isZero, UInt<3>("h0"), _wnList_res_im_T_153) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_155 = mux(wnList_res_im_rawIn_19.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_156 = or(_wnList_res_im_T_154, _wnList_res_im_T_155) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_157 = bits(wnList_res_im_rawIn_19.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_158 = bits(wnList_res_im_rawIn_19.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_19 = cat(_wnList_res_im_T_157, _wnList_res_im_T_158) @[Cat.scala 33:92]
    node wnList_res_im_hi_19 = cat(wnList_res_im_rawIn_19.sign, _wnList_res_im_T_156) @[Cat.scala 33:92]
    node _wnList_res_im_T_159 = cat(wnList_res_im_hi_19, wnList_res_im_lo_19) @[Cat.scala 33:92]
    node _wnList_res_im_T_160 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_20 = bits(_wnList_res_im_T_160, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_20 = bits(_wnList_res_im_T_160, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_20 = bits(_wnList_res_im_T_160, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_20 = eq(wnList_res_im_rawIn_expIn_20, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_20 = eq(wnList_res_im_rawIn_fractIn_20, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_360 = bits(wnList_res_im_rawIn_fractIn_20, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_361 = bits(wnList_res_im_rawIn_fractIn_20, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_362 = bits(wnList_res_im_rawIn_fractIn_20, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_363 = bits(wnList_res_im_rawIn_fractIn_20, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_364 = bits(wnList_res_im_rawIn_fractIn_20, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_365 = bits(wnList_res_im_rawIn_fractIn_20, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_366 = bits(wnList_res_im_rawIn_fractIn_20, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_367 = bits(wnList_res_im_rawIn_fractIn_20, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_368 = bits(wnList_res_im_rawIn_fractIn_20, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_369 = bits(wnList_res_im_rawIn_fractIn_20, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_370 = mux(_wnList_res_im_rawIn_normDist_T_361, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_371 = mux(_wnList_res_im_rawIn_normDist_T_362, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_370) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_372 = mux(_wnList_res_im_rawIn_normDist_T_363, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_371) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_373 = mux(_wnList_res_im_rawIn_normDist_T_364, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_372) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_374 = mux(_wnList_res_im_rawIn_normDist_T_365, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_373) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_375 = mux(_wnList_res_im_rawIn_normDist_T_366, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_374) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_376 = mux(_wnList_res_im_rawIn_normDist_T_367, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_375) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_377 = mux(_wnList_res_im_rawIn_normDist_T_368, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_376) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_20 = mux(_wnList_res_im_rawIn_normDist_T_369, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_377) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_40 = dshl(wnList_res_im_rawIn_fractIn_20, wnList_res_im_rawIn_normDist_20) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_41 = bits(_wnList_res_im_rawIn_subnormFract_T_40, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_20 = shl(_wnList_res_im_rawIn_subnormFract_T_41, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_100 = xor(wnList_res_im_rawIn_normDist_20, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_101 = mux(wnList_res_im_rawIn_isZeroExpIn_20, _wnList_res_im_rawIn_adjustedExp_T_100, wnList_res_im_rawIn_expIn_20) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_102 = mux(wnList_res_im_rawIn_isZeroExpIn_20, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_103 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_102) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_104 = add(_wnList_res_im_rawIn_adjustedExp_T_101, _wnList_res_im_rawIn_adjustedExp_T_103) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_20 = tail(_wnList_res_im_rawIn_adjustedExp_T_104, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_20 = and(wnList_res_im_rawIn_isZeroExpIn_20, wnList_res_im_rawIn_isZeroFractIn_20) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_20 = bits(wnList_res_im_rawIn_adjustedExp_20, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_20 = eq(_wnList_res_im_rawIn_isSpecial_T_20, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_20 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_20 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_40 = eq(wnList_res_im_rawIn_isZeroFractIn_20, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_41 = and(wnList_res_im_rawIn_isSpecial_20, _wnList_res_im_rawIn_out_isNaN_T_40) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_20.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_41 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_20 = and(wnList_res_im_rawIn_isSpecial_20, wnList_res_im_rawIn_isZeroFractIn_20) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_20.isInf <= _wnList_res_im_rawIn_out_isInf_T_20 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_20.isZero <= wnList_res_im_rawIn_isZero_20 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_20.sign <= wnList_res_im_rawIn_sign_20 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_40 = bits(wnList_res_im_rawIn_adjustedExp_20, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_41 = cvt(_wnList_res_im_rawIn_out_sExp_T_40) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_20.sExp <= _wnList_res_im_rawIn_out_sExp_T_41 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_60 = eq(wnList_res_im_rawIn_isZero_20, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_61 = mux(wnList_res_im_rawIn_isZeroExpIn_20, wnList_res_im_rawIn_subnormFract_20, wnList_res_im_rawIn_fractIn_20) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_20 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_60) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_62 = cat(wnList_res_im_rawIn_out_sig_hi_20, _wnList_res_im_rawIn_out_sig_T_61) @[Cat.scala 33:92]
    wnList_res_im_rawIn_20.sig <= _wnList_res_im_rawIn_out_sig_T_62 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_161 = bits(wnList_res_im_rawIn_20.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_162 = mux(wnList_res_im_rawIn_20.isZero, UInt<3>("h0"), _wnList_res_im_T_161) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_163 = mux(wnList_res_im_rawIn_20.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_164 = or(_wnList_res_im_T_162, _wnList_res_im_T_163) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_165 = bits(wnList_res_im_rawIn_20.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_166 = bits(wnList_res_im_rawIn_20.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_20 = cat(_wnList_res_im_T_165, _wnList_res_im_T_166) @[Cat.scala 33:92]
    node wnList_res_im_hi_20 = cat(wnList_res_im_rawIn_20.sign, _wnList_res_im_T_164) @[Cat.scala 33:92]
    node _wnList_res_im_T_167 = cat(wnList_res_im_hi_20, wnList_res_im_lo_20) @[Cat.scala 33:92]
    node _wnList_res_im_T_168 = asUInt(asSInt(UInt<16>("hbb0e"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_21 = bits(_wnList_res_im_T_168, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_21 = bits(_wnList_res_im_T_168, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_21 = bits(_wnList_res_im_T_168, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_21 = eq(wnList_res_im_rawIn_expIn_21, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_21 = eq(wnList_res_im_rawIn_fractIn_21, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_378 = bits(wnList_res_im_rawIn_fractIn_21, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_379 = bits(wnList_res_im_rawIn_fractIn_21, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_380 = bits(wnList_res_im_rawIn_fractIn_21, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_381 = bits(wnList_res_im_rawIn_fractIn_21, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_382 = bits(wnList_res_im_rawIn_fractIn_21, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_383 = bits(wnList_res_im_rawIn_fractIn_21, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_384 = bits(wnList_res_im_rawIn_fractIn_21, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_385 = bits(wnList_res_im_rawIn_fractIn_21, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_386 = bits(wnList_res_im_rawIn_fractIn_21, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_387 = bits(wnList_res_im_rawIn_fractIn_21, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_388 = mux(_wnList_res_im_rawIn_normDist_T_379, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_389 = mux(_wnList_res_im_rawIn_normDist_T_380, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_388) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_390 = mux(_wnList_res_im_rawIn_normDist_T_381, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_389) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_391 = mux(_wnList_res_im_rawIn_normDist_T_382, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_390) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_392 = mux(_wnList_res_im_rawIn_normDist_T_383, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_391) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_393 = mux(_wnList_res_im_rawIn_normDist_T_384, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_392) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_394 = mux(_wnList_res_im_rawIn_normDist_T_385, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_393) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_395 = mux(_wnList_res_im_rawIn_normDist_T_386, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_394) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_21 = mux(_wnList_res_im_rawIn_normDist_T_387, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_395) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_42 = dshl(wnList_res_im_rawIn_fractIn_21, wnList_res_im_rawIn_normDist_21) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_43 = bits(_wnList_res_im_rawIn_subnormFract_T_42, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_21 = shl(_wnList_res_im_rawIn_subnormFract_T_43, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_105 = xor(wnList_res_im_rawIn_normDist_21, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_106 = mux(wnList_res_im_rawIn_isZeroExpIn_21, _wnList_res_im_rawIn_adjustedExp_T_105, wnList_res_im_rawIn_expIn_21) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_107 = mux(wnList_res_im_rawIn_isZeroExpIn_21, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_108 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_107) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_109 = add(_wnList_res_im_rawIn_adjustedExp_T_106, _wnList_res_im_rawIn_adjustedExp_T_108) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_21 = tail(_wnList_res_im_rawIn_adjustedExp_T_109, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_21 = and(wnList_res_im_rawIn_isZeroExpIn_21, wnList_res_im_rawIn_isZeroFractIn_21) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_21 = bits(wnList_res_im_rawIn_adjustedExp_21, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_21 = eq(_wnList_res_im_rawIn_isSpecial_T_21, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_21 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_21 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_42 = eq(wnList_res_im_rawIn_isZeroFractIn_21, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_43 = and(wnList_res_im_rawIn_isSpecial_21, _wnList_res_im_rawIn_out_isNaN_T_42) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_21.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_43 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_21 = and(wnList_res_im_rawIn_isSpecial_21, wnList_res_im_rawIn_isZeroFractIn_21) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_21.isInf <= _wnList_res_im_rawIn_out_isInf_T_21 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_21.isZero <= wnList_res_im_rawIn_isZero_21 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_21.sign <= wnList_res_im_rawIn_sign_21 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_42 = bits(wnList_res_im_rawIn_adjustedExp_21, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_43 = cvt(_wnList_res_im_rawIn_out_sExp_T_42) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_21.sExp <= _wnList_res_im_rawIn_out_sExp_T_43 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_63 = eq(wnList_res_im_rawIn_isZero_21, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_64 = mux(wnList_res_im_rawIn_isZeroExpIn_21, wnList_res_im_rawIn_subnormFract_21, wnList_res_im_rawIn_fractIn_21) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_21 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_63) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_65 = cat(wnList_res_im_rawIn_out_sig_hi_21, _wnList_res_im_rawIn_out_sig_T_64) @[Cat.scala 33:92]
    wnList_res_im_rawIn_21.sig <= _wnList_res_im_rawIn_out_sig_T_65 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_169 = bits(wnList_res_im_rawIn_21.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_170 = mux(wnList_res_im_rawIn_21.isZero, UInt<3>("h0"), _wnList_res_im_T_169) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_171 = mux(wnList_res_im_rawIn_21.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_172 = or(_wnList_res_im_T_170, _wnList_res_im_T_171) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_173 = bits(wnList_res_im_rawIn_21.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_174 = bits(wnList_res_im_rawIn_21.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_21 = cat(_wnList_res_im_T_173, _wnList_res_im_T_174) @[Cat.scala 33:92]
    node wnList_res_im_hi_21 = cat(wnList_res_im_rawIn_21.sign, _wnList_res_im_T_172) @[Cat.scala 33:92]
    node _wnList_res_im_T_175 = cat(wnList_res_im_hi_21, wnList_res_im_lo_21) @[Cat.scala 33:92]
    node _wnList_res_im_T_176 = asUInt(asSInt(UInt<16>("hbaa6"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_22 = bits(_wnList_res_im_T_176, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_22 = bits(_wnList_res_im_T_176, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_22 = bits(_wnList_res_im_T_176, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_22 = eq(wnList_res_im_rawIn_expIn_22, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_22 = eq(wnList_res_im_rawIn_fractIn_22, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_396 = bits(wnList_res_im_rawIn_fractIn_22, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_397 = bits(wnList_res_im_rawIn_fractIn_22, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_398 = bits(wnList_res_im_rawIn_fractIn_22, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_399 = bits(wnList_res_im_rawIn_fractIn_22, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_400 = bits(wnList_res_im_rawIn_fractIn_22, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_401 = bits(wnList_res_im_rawIn_fractIn_22, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_402 = bits(wnList_res_im_rawIn_fractIn_22, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_403 = bits(wnList_res_im_rawIn_fractIn_22, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_404 = bits(wnList_res_im_rawIn_fractIn_22, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_405 = bits(wnList_res_im_rawIn_fractIn_22, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_406 = mux(_wnList_res_im_rawIn_normDist_T_397, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_407 = mux(_wnList_res_im_rawIn_normDist_T_398, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_406) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_408 = mux(_wnList_res_im_rawIn_normDist_T_399, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_407) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_409 = mux(_wnList_res_im_rawIn_normDist_T_400, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_408) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_410 = mux(_wnList_res_im_rawIn_normDist_T_401, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_409) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_411 = mux(_wnList_res_im_rawIn_normDist_T_402, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_410) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_412 = mux(_wnList_res_im_rawIn_normDist_T_403, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_411) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_413 = mux(_wnList_res_im_rawIn_normDist_T_404, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_412) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_22 = mux(_wnList_res_im_rawIn_normDist_T_405, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_413) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_44 = dshl(wnList_res_im_rawIn_fractIn_22, wnList_res_im_rawIn_normDist_22) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_45 = bits(_wnList_res_im_rawIn_subnormFract_T_44, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_22 = shl(_wnList_res_im_rawIn_subnormFract_T_45, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_110 = xor(wnList_res_im_rawIn_normDist_22, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_111 = mux(wnList_res_im_rawIn_isZeroExpIn_22, _wnList_res_im_rawIn_adjustedExp_T_110, wnList_res_im_rawIn_expIn_22) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_112 = mux(wnList_res_im_rawIn_isZeroExpIn_22, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_113 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_112) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_114 = add(_wnList_res_im_rawIn_adjustedExp_T_111, _wnList_res_im_rawIn_adjustedExp_T_113) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_22 = tail(_wnList_res_im_rawIn_adjustedExp_T_114, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_22 = and(wnList_res_im_rawIn_isZeroExpIn_22, wnList_res_im_rawIn_isZeroFractIn_22) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_22 = bits(wnList_res_im_rawIn_adjustedExp_22, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_22 = eq(_wnList_res_im_rawIn_isSpecial_T_22, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_22 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_22 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_44 = eq(wnList_res_im_rawIn_isZeroFractIn_22, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_45 = and(wnList_res_im_rawIn_isSpecial_22, _wnList_res_im_rawIn_out_isNaN_T_44) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_22.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_45 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_22 = and(wnList_res_im_rawIn_isSpecial_22, wnList_res_im_rawIn_isZeroFractIn_22) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_22.isInf <= _wnList_res_im_rawIn_out_isInf_T_22 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_22.isZero <= wnList_res_im_rawIn_isZero_22 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_22.sign <= wnList_res_im_rawIn_sign_22 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_44 = bits(wnList_res_im_rawIn_adjustedExp_22, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_45 = cvt(_wnList_res_im_rawIn_out_sExp_T_44) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_22.sExp <= _wnList_res_im_rawIn_out_sExp_T_45 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_66 = eq(wnList_res_im_rawIn_isZero_22, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_67 = mux(wnList_res_im_rawIn_isZeroExpIn_22, wnList_res_im_rawIn_subnormFract_22, wnList_res_im_rawIn_fractIn_22) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_22 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_66) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_68 = cat(wnList_res_im_rawIn_out_sig_hi_22, _wnList_res_im_rawIn_out_sig_T_67) @[Cat.scala 33:92]
    wnList_res_im_rawIn_22.sig <= _wnList_res_im_rawIn_out_sig_T_68 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_177 = bits(wnList_res_im_rawIn_22.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_178 = mux(wnList_res_im_rawIn_22.isZero, UInt<3>("h0"), _wnList_res_im_T_177) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_179 = mux(wnList_res_im_rawIn_22.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_180 = or(_wnList_res_im_T_178, _wnList_res_im_T_179) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_181 = bits(wnList_res_im_rawIn_22.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_182 = bits(wnList_res_im_rawIn_22.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_22 = cat(_wnList_res_im_T_181, _wnList_res_im_T_182) @[Cat.scala 33:92]
    node wnList_res_im_hi_22 = cat(wnList_res_im_rawIn_22.sign, _wnList_res_im_T_180) @[Cat.scala 33:92]
    node _wnList_res_im_T_183 = cat(wnList_res_im_hi_22, wnList_res_im_lo_22) @[Cat.scala 33:92]
    node _wnList_res_im_T_184 = asUInt(asSInt(UInt<16>("hba2f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_23 = bits(_wnList_res_im_T_184, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_23 = bits(_wnList_res_im_T_184, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_23 = bits(_wnList_res_im_T_184, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_23 = eq(wnList_res_im_rawIn_expIn_23, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_23 = eq(wnList_res_im_rawIn_fractIn_23, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_414 = bits(wnList_res_im_rawIn_fractIn_23, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_415 = bits(wnList_res_im_rawIn_fractIn_23, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_416 = bits(wnList_res_im_rawIn_fractIn_23, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_417 = bits(wnList_res_im_rawIn_fractIn_23, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_418 = bits(wnList_res_im_rawIn_fractIn_23, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_419 = bits(wnList_res_im_rawIn_fractIn_23, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_420 = bits(wnList_res_im_rawIn_fractIn_23, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_421 = bits(wnList_res_im_rawIn_fractIn_23, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_422 = bits(wnList_res_im_rawIn_fractIn_23, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_423 = bits(wnList_res_im_rawIn_fractIn_23, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_424 = mux(_wnList_res_im_rawIn_normDist_T_415, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_425 = mux(_wnList_res_im_rawIn_normDist_T_416, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_424) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_426 = mux(_wnList_res_im_rawIn_normDist_T_417, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_425) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_427 = mux(_wnList_res_im_rawIn_normDist_T_418, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_426) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_428 = mux(_wnList_res_im_rawIn_normDist_T_419, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_427) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_429 = mux(_wnList_res_im_rawIn_normDist_T_420, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_428) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_430 = mux(_wnList_res_im_rawIn_normDist_T_421, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_429) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_431 = mux(_wnList_res_im_rawIn_normDist_T_422, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_430) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_23 = mux(_wnList_res_im_rawIn_normDist_T_423, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_431) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_46 = dshl(wnList_res_im_rawIn_fractIn_23, wnList_res_im_rawIn_normDist_23) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_47 = bits(_wnList_res_im_rawIn_subnormFract_T_46, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_23 = shl(_wnList_res_im_rawIn_subnormFract_T_47, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_115 = xor(wnList_res_im_rawIn_normDist_23, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_116 = mux(wnList_res_im_rawIn_isZeroExpIn_23, _wnList_res_im_rawIn_adjustedExp_T_115, wnList_res_im_rawIn_expIn_23) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_117 = mux(wnList_res_im_rawIn_isZeroExpIn_23, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_118 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_117) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_119 = add(_wnList_res_im_rawIn_adjustedExp_T_116, _wnList_res_im_rawIn_adjustedExp_T_118) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_23 = tail(_wnList_res_im_rawIn_adjustedExp_T_119, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_23 = and(wnList_res_im_rawIn_isZeroExpIn_23, wnList_res_im_rawIn_isZeroFractIn_23) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_23 = bits(wnList_res_im_rawIn_adjustedExp_23, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_23 = eq(_wnList_res_im_rawIn_isSpecial_T_23, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_23 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_23 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_46 = eq(wnList_res_im_rawIn_isZeroFractIn_23, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_47 = and(wnList_res_im_rawIn_isSpecial_23, _wnList_res_im_rawIn_out_isNaN_T_46) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_23.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_47 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_23 = and(wnList_res_im_rawIn_isSpecial_23, wnList_res_im_rawIn_isZeroFractIn_23) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_23.isInf <= _wnList_res_im_rawIn_out_isInf_T_23 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_23.isZero <= wnList_res_im_rawIn_isZero_23 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_23.sign <= wnList_res_im_rawIn_sign_23 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_46 = bits(wnList_res_im_rawIn_adjustedExp_23, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_47 = cvt(_wnList_res_im_rawIn_out_sExp_T_46) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_23.sExp <= _wnList_res_im_rawIn_out_sExp_T_47 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_69 = eq(wnList_res_im_rawIn_isZero_23, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_70 = mux(wnList_res_im_rawIn_isZeroExpIn_23, wnList_res_im_rawIn_subnormFract_23, wnList_res_im_rawIn_fractIn_23) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_23 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_69) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_71 = cat(wnList_res_im_rawIn_out_sig_hi_23, _wnList_res_im_rawIn_out_sig_T_70) @[Cat.scala 33:92]
    wnList_res_im_rawIn_23.sig <= _wnList_res_im_rawIn_out_sig_T_71 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_185 = bits(wnList_res_im_rawIn_23.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_186 = mux(wnList_res_im_rawIn_23.isZero, UInt<3>("h0"), _wnList_res_im_T_185) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_187 = mux(wnList_res_im_rawIn_23.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_188 = or(_wnList_res_im_T_186, _wnList_res_im_T_187) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_189 = bits(wnList_res_im_rawIn_23.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_190 = bits(wnList_res_im_rawIn_23.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_23 = cat(_wnList_res_im_T_189, _wnList_res_im_T_190) @[Cat.scala 33:92]
    node wnList_res_im_hi_23 = cat(wnList_res_im_rawIn_23.sign, _wnList_res_im_T_188) @[Cat.scala 33:92]
    node _wnList_res_im_T_191 = cat(wnList_res_im_hi_23, wnList_res_im_lo_23) @[Cat.scala 33:92]
    node _wnList_res_im_T_192 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_24 = bits(_wnList_res_im_T_192, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_24 = bits(_wnList_res_im_T_192, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_24 = bits(_wnList_res_im_T_192, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_24 = eq(wnList_res_im_rawIn_expIn_24, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_24 = eq(wnList_res_im_rawIn_fractIn_24, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_432 = bits(wnList_res_im_rawIn_fractIn_24, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_433 = bits(wnList_res_im_rawIn_fractIn_24, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_434 = bits(wnList_res_im_rawIn_fractIn_24, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_435 = bits(wnList_res_im_rawIn_fractIn_24, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_436 = bits(wnList_res_im_rawIn_fractIn_24, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_437 = bits(wnList_res_im_rawIn_fractIn_24, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_438 = bits(wnList_res_im_rawIn_fractIn_24, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_439 = bits(wnList_res_im_rawIn_fractIn_24, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_440 = bits(wnList_res_im_rawIn_fractIn_24, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_441 = bits(wnList_res_im_rawIn_fractIn_24, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_442 = mux(_wnList_res_im_rawIn_normDist_T_433, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_443 = mux(_wnList_res_im_rawIn_normDist_T_434, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_442) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_444 = mux(_wnList_res_im_rawIn_normDist_T_435, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_443) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_445 = mux(_wnList_res_im_rawIn_normDist_T_436, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_444) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_446 = mux(_wnList_res_im_rawIn_normDist_T_437, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_445) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_447 = mux(_wnList_res_im_rawIn_normDist_T_438, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_446) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_448 = mux(_wnList_res_im_rawIn_normDist_T_439, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_447) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_449 = mux(_wnList_res_im_rawIn_normDist_T_440, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_448) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_24 = mux(_wnList_res_im_rawIn_normDist_T_441, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_449) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_48 = dshl(wnList_res_im_rawIn_fractIn_24, wnList_res_im_rawIn_normDist_24) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_49 = bits(_wnList_res_im_rawIn_subnormFract_T_48, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_24 = shl(_wnList_res_im_rawIn_subnormFract_T_49, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_120 = xor(wnList_res_im_rawIn_normDist_24, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_121 = mux(wnList_res_im_rawIn_isZeroExpIn_24, _wnList_res_im_rawIn_adjustedExp_T_120, wnList_res_im_rawIn_expIn_24) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_122 = mux(wnList_res_im_rawIn_isZeroExpIn_24, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_123 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_122) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_124 = add(_wnList_res_im_rawIn_adjustedExp_T_121, _wnList_res_im_rawIn_adjustedExp_T_123) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_24 = tail(_wnList_res_im_rawIn_adjustedExp_T_124, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_24 = and(wnList_res_im_rawIn_isZeroExpIn_24, wnList_res_im_rawIn_isZeroFractIn_24) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_24 = bits(wnList_res_im_rawIn_adjustedExp_24, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_24 = eq(_wnList_res_im_rawIn_isSpecial_T_24, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_24 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_24 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_48 = eq(wnList_res_im_rawIn_isZeroFractIn_24, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_49 = and(wnList_res_im_rawIn_isSpecial_24, _wnList_res_im_rawIn_out_isNaN_T_48) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_24.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_49 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_24 = and(wnList_res_im_rawIn_isSpecial_24, wnList_res_im_rawIn_isZeroFractIn_24) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_24.isInf <= _wnList_res_im_rawIn_out_isInf_T_24 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_24.isZero <= wnList_res_im_rawIn_isZero_24 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_24.sign <= wnList_res_im_rawIn_sign_24 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_48 = bits(wnList_res_im_rawIn_adjustedExp_24, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_49 = cvt(_wnList_res_im_rawIn_out_sExp_T_48) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_24.sExp <= _wnList_res_im_rawIn_out_sExp_T_49 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_72 = eq(wnList_res_im_rawIn_isZero_24, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_73 = mux(wnList_res_im_rawIn_isZeroExpIn_24, wnList_res_im_rawIn_subnormFract_24, wnList_res_im_rawIn_fractIn_24) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_24 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_72) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_74 = cat(wnList_res_im_rawIn_out_sig_hi_24, _wnList_res_im_rawIn_out_sig_T_73) @[Cat.scala 33:92]
    wnList_res_im_rawIn_24.sig <= _wnList_res_im_rawIn_out_sig_T_74 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_193 = bits(wnList_res_im_rawIn_24.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_194 = mux(wnList_res_im_rawIn_24.isZero, UInt<3>("h0"), _wnList_res_im_T_193) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_195 = mux(wnList_res_im_rawIn_24.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_196 = or(_wnList_res_im_T_194, _wnList_res_im_T_195) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_197 = bits(wnList_res_im_rawIn_24.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_198 = bits(wnList_res_im_rawIn_24.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_24 = cat(_wnList_res_im_T_197, _wnList_res_im_T_198) @[Cat.scala 33:92]
    node wnList_res_im_hi_24 = cat(wnList_res_im_rawIn_24.sign, _wnList_res_im_T_196) @[Cat.scala 33:92]
    node _wnList_res_im_T_199 = cat(wnList_res_im_hi_24, wnList_res_im_lo_24) @[Cat.scala 33:92]
    node _wnList_res_im_T_200 = asUInt(asSInt(UInt<16>("hb913"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_25 = bits(_wnList_res_im_T_200, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_25 = bits(_wnList_res_im_T_200, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_25 = bits(_wnList_res_im_T_200, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_25 = eq(wnList_res_im_rawIn_expIn_25, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_25 = eq(wnList_res_im_rawIn_fractIn_25, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_450 = bits(wnList_res_im_rawIn_fractIn_25, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_451 = bits(wnList_res_im_rawIn_fractIn_25, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_452 = bits(wnList_res_im_rawIn_fractIn_25, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_453 = bits(wnList_res_im_rawIn_fractIn_25, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_454 = bits(wnList_res_im_rawIn_fractIn_25, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_455 = bits(wnList_res_im_rawIn_fractIn_25, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_456 = bits(wnList_res_im_rawIn_fractIn_25, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_457 = bits(wnList_res_im_rawIn_fractIn_25, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_458 = bits(wnList_res_im_rawIn_fractIn_25, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_459 = bits(wnList_res_im_rawIn_fractIn_25, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_460 = mux(_wnList_res_im_rawIn_normDist_T_451, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_461 = mux(_wnList_res_im_rawIn_normDist_T_452, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_460) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_462 = mux(_wnList_res_im_rawIn_normDist_T_453, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_461) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_463 = mux(_wnList_res_im_rawIn_normDist_T_454, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_462) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_464 = mux(_wnList_res_im_rawIn_normDist_T_455, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_463) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_465 = mux(_wnList_res_im_rawIn_normDist_T_456, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_464) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_466 = mux(_wnList_res_im_rawIn_normDist_T_457, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_465) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_467 = mux(_wnList_res_im_rawIn_normDist_T_458, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_466) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_25 = mux(_wnList_res_im_rawIn_normDist_T_459, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_467) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_50 = dshl(wnList_res_im_rawIn_fractIn_25, wnList_res_im_rawIn_normDist_25) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_51 = bits(_wnList_res_im_rawIn_subnormFract_T_50, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_25 = shl(_wnList_res_im_rawIn_subnormFract_T_51, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_125 = xor(wnList_res_im_rawIn_normDist_25, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_126 = mux(wnList_res_im_rawIn_isZeroExpIn_25, _wnList_res_im_rawIn_adjustedExp_T_125, wnList_res_im_rawIn_expIn_25) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_127 = mux(wnList_res_im_rawIn_isZeroExpIn_25, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_128 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_127) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_129 = add(_wnList_res_im_rawIn_adjustedExp_T_126, _wnList_res_im_rawIn_adjustedExp_T_128) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_25 = tail(_wnList_res_im_rawIn_adjustedExp_T_129, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_25 = and(wnList_res_im_rawIn_isZeroExpIn_25, wnList_res_im_rawIn_isZeroFractIn_25) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_25 = bits(wnList_res_im_rawIn_adjustedExp_25, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_25 = eq(_wnList_res_im_rawIn_isSpecial_T_25, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_25 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_25 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_50 = eq(wnList_res_im_rawIn_isZeroFractIn_25, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_51 = and(wnList_res_im_rawIn_isSpecial_25, _wnList_res_im_rawIn_out_isNaN_T_50) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_25.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_51 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_25 = and(wnList_res_im_rawIn_isSpecial_25, wnList_res_im_rawIn_isZeroFractIn_25) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_25.isInf <= _wnList_res_im_rawIn_out_isInf_T_25 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_25.isZero <= wnList_res_im_rawIn_isZero_25 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_25.sign <= wnList_res_im_rawIn_sign_25 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_50 = bits(wnList_res_im_rawIn_adjustedExp_25, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_51 = cvt(_wnList_res_im_rawIn_out_sExp_T_50) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_25.sExp <= _wnList_res_im_rawIn_out_sExp_T_51 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_75 = eq(wnList_res_im_rawIn_isZero_25, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_76 = mux(wnList_res_im_rawIn_isZeroExpIn_25, wnList_res_im_rawIn_subnormFract_25, wnList_res_im_rawIn_fractIn_25) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_25 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_75) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_77 = cat(wnList_res_im_rawIn_out_sig_hi_25, _wnList_res_im_rawIn_out_sig_T_76) @[Cat.scala 33:92]
    wnList_res_im_rawIn_25.sig <= _wnList_res_im_rawIn_out_sig_T_77 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_201 = bits(wnList_res_im_rawIn_25.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_202 = mux(wnList_res_im_rawIn_25.isZero, UInt<3>("h0"), _wnList_res_im_T_201) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_203 = mux(wnList_res_im_rawIn_25.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_204 = or(_wnList_res_im_T_202, _wnList_res_im_T_203) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_205 = bits(wnList_res_im_rawIn_25.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_206 = bits(wnList_res_im_rawIn_25.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_25 = cat(_wnList_res_im_T_205, _wnList_res_im_T_206) @[Cat.scala 33:92]
    node wnList_res_im_hi_25 = cat(wnList_res_im_rawIn_25.sign, _wnList_res_im_T_204) @[Cat.scala 33:92]
    node _wnList_res_im_T_207 = cat(wnList_res_im_hi_25, wnList_res_im_lo_25) @[Cat.scala 33:92]
    node _wnList_res_im_T_208 = asUInt(asSInt(UInt<16>("hb871"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_26 = bits(_wnList_res_im_T_208, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_26 = bits(_wnList_res_im_T_208, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_26 = bits(_wnList_res_im_T_208, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_26 = eq(wnList_res_im_rawIn_expIn_26, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_26 = eq(wnList_res_im_rawIn_fractIn_26, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_468 = bits(wnList_res_im_rawIn_fractIn_26, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_469 = bits(wnList_res_im_rawIn_fractIn_26, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_470 = bits(wnList_res_im_rawIn_fractIn_26, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_471 = bits(wnList_res_im_rawIn_fractIn_26, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_472 = bits(wnList_res_im_rawIn_fractIn_26, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_473 = bits(wnList_res_im_rawIn_fractIn_26, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_474 = bits(wnList_res_im_rawIn_fractIn_26, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_475 = bits(wnList_res_im_rawIn_fractIn_26, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_476 = bits(wnList_res_im_rawIn_fractIn_26, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_477 = bits(wnList_res_im_rawIn_fractIn_26, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_478 = mux(_wnList_res_im_rawIn_normDist_T_469, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_479 = mux(_wnList_res_im_rawIn_normDist_T_470, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_478) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_480 = mux(_wnList_res_im_rawIn_normDist_T_471, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_479) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_481 = mux(_wnList_res_im_rawIn_normDist_T_472, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_480) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_482 = mux(_wnList_res_im_rawIn_normDist_T_473, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_481) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_483 = mux(_wnList_res_im_rawIn_normDist_T_474, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_482) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_484 = mux(_wnList_res_im_rawIn_normDist_T_475, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_483) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_485 = mux(_wnList_res_im_rawIn_normDist_T_476, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_484) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_26 = mux(_wnList_res_im_rawIn_normDist_T_477, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_485) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_52 = dshl(wnList_res_im_rawIn_fractIn_26, wnList_res_im_rawIn_normDist_26) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_53 = bits(_wnList_res_im_rawIn_subnormFract_T_52, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_26 = shl(_wnList_res_im_rawIn_subnormFract_T_53, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_130 = xor(wnList_res_im_rawIn_normDist_26, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_131 = mux(wnList_res_im_rawIn_isZeroExpIn_26, _wnList_res_im_rawIn_adjustedExp_T_130, wnList_res_im_rawIn_expIn_26) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_132 = mux(wnList_res_im_rawIn_isZeroExpIn_26, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_133 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_132) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_134 = add(_wnList_res_im_rawIn_adjustedExp_T_131, _wnList_res_im_rawIn_adjustedExp_T_133) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_26 = tail(_wnList_res_im_rawIn_adjustedExp_T_134, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_26 = and(wnList_res_im_rawIn_isZeroExpIn_26, wnList_res_im_rawIn_isZeroFractIn_26) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_26 = bits(wnList_res_im_rawIn_adjustedExp_26, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_26 = eq(_wnList_res_im_rawIn_isSpecial_T_26, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_26 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_26 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_52 = eq(wnList_res_im_rawIn_isZeroFractIn_26, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_53 = and(wnList_res_im_rawIn_isSpecial_26, _wnList_res_im_rawIn_out_isNaN_T_52) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_26.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_53 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_26 = and(wnList_res_im_rawIn_isSpecial_26, wnList_res_im_rawIn_isZeroFractIn_26) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_26.isInf <= _wnList_res_im_rawIn_out_isInf_T_26 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_26.isZero <= wnList_res_im_rawIn_isZero_26 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_26.sign <= wnList_res_im_rawIn_sign_26 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_52 = bits(wnList_res_im_rawIn_adjustedExp_26, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_53 = cvt(_wnList_res_im_rawIn_out_sExp_T_52) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_26.sExp <= _wnList_res_im_rawIn_out_sExp_T_53 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_78 = eq(wnList_res_im_rawIn_isZero_26, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_79 = mux(wnList_res_im_rawIn_isZeroExpIn_26, wnList_res_im_rawIn_subnormFract_26, wnList_res_im_rawIn_fractIn_26) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_26 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_78) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_80 = cat(wnList_res_im_rawIn_out_sig_hi_26, _wnList_res_im_rawIn_out_sig_T_79) @[Cat.scala 33:92]
    wnList_res_im_rawIn_26.sig <= _wnList_res_im_rawIn_out_sig_T_80 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_209 = bits(wnList_res_im_rawIn_26.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_210 = mux(wnList_res_im_rawIn_26.isZero, UInt<3>("h0"), _wnList_res_im_T_209) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_211 = mux(wnList_res_im_rawIn_26.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_212 = or(_wnList_res_im_T_210, _wnList_res_im_T_211) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_213 = bits(wnList_res_im_rawIn_26.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_214 = bits(wnList_res_im_rawIn_26.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_26 = cat(_wnList_res_im_T_213, _wnList_res_im_T_214) @[Cat.scala 33:92]
    node wnList_res_im_hi_26 = cat(wnList_res_im_rawIn_26.sign, _wnList_res_im_T_212) @[Cat.scala 33:92]
    node _wnList_res_im_T_215 = cat(wnList_res_im_hi_26, wnList_res_im_lo_26) @[Cat.scala 33:92]
    node _wnList_res_im_T_216 = asUInt(asSInt(UInt<16>("hb78a"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_27 = bits(_wnList_res_im_T_216, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_27 = bits(_wnList_res_im_T_216, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_27 = bits(_wnList_res_im_T_216, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_27 = eq(wnList_res_im_rawIn_expIn_27, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_27 = eq(wnList_res_im_rawIn_fractIn_27, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_486 = bits(wnList_res_im_rawIn_fractIn_27, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_487 = bits(wnList_res_im_rawIn_fractIn_27, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_488 = bits(wnList_res_im_rawIn_fractIn_27, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_489 = bits(wnList_res_im_rawIn_fractIn_27, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_490 = bits(wnList_res_im_rawIn_fractIn_27, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_491 = bits(wnList_res_im_rawIn_fractIn_27, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_492 = bits(wnList_res_im_rawIn_fractIn_27, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_493 = bits(wnList_res_im_rawIn_fractIn_27, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_494 = bits(wnList_res_im_rawIn_fractIn_27, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_495 = bits(wnList_res_im_rawIn_fractIn_27, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_496 = mux(_wnList_res_im_rawIn_normDist_T_487, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_497 = mux(_wnList_res_im_rawIn_normDist_T_488, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_496) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_498 = mux(_wnList_res_im_rawIn_normDist_T_489, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_497) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_499 = mux(_wnList_res_im_rawIn_normDist_T_490, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_498) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_500 = mux(_wnList_res_im_rawIn_normDist_T_491, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_499) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_501 = mux(_wnList_res_im_rawIn_normDist_T_492, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_500) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_502 = mux(_wnList_res_im_rawIn_normDist_T_493, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_501) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_503 = mux(_wnList_res_im_rawIn_normDist_T_494, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_502) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_27 = mux(_wnList_res_im_rawIn_normDist_T_495, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_503) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_54 = dshl(wnList_res_im_rawIn_fractIn_27, wnList_res_im_rawIn_normDist_27) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_55 = bits(_wnList_res_im_rawIn_subnormFract_T_54, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_27 = shl(_wnList_res_im_rawIn_subnormFract_T_55, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_135 = xor(wnList_res_im_rawIn_normDist_27, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_136 = mux(wnList_res_im_rawIn_isZeroExpIn_27, _wnList_res_im_rawIn_adjustedExp_T_135, wnList_res_im_rawIn_expIn_27) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_137 = mux(wnList_res_im_rawIn_isZeroExpIn_27, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_138 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_137) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_139 = add(_wnList_res_im_rawIn_adjustedExp_T_136, _wnList_res_im_rawIn_adjustedExp_T_138) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_27 = tail(_wnList_res_im_rawIn_adjustedExp_T_139, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_27 = and(wnList_res_im_rawIn_isZeroExpIn_27, wnList_res_im_rawIn_isZeroFractIn_27) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_27 = bits(wnList_res_im_rawIn_adjustedExp_27, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_27 = eq(_wnList_res_im_rawIn_isSpecial_T_27, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_27 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_27 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_54 = eq(wnList_res_im_rawIn_isZeroFractIn_27, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_55 = and(wnList_res_im_rawIn_isSpecial_27, _wnList_res_im_rawIn_out_isNaN_T_54) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_27.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_55 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_27 = and(wnList_res_im_rawIn_isSpecial_27, wnList_res_im_rawIn_isZeroFractIn_27) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_27.isInf <= _wnList_res_im_rawIn_out_isInf_T_27 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_27.isZero <= wnList_res_im_rawIn_isZero_27 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_27.sign <= wnList_res_im_rawIn_sign_27 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_54 = bits(wnList_res_im_rawIn_adjustedExp_27, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_55 = cvt(_wnList_res_im_rawIn_out_sExp_T_54) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_27.sExp <= _wnList_res_im_rawIn_out_sExp_T_55 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_81 = eq(wnList_res_im_rawIn_isZero_27, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_82 = mux(wnList_res_im_rawIn_isZeroExpIn_27, wnList_res_im_rawIn_subnormFract_27, wnList_res_im_rawIn_fractIn_27) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_27 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_81) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_83 = cat(wnList_res_im_rawIn_out_sig_hi_27, _wnList_res_im_rawIn_out_sig_T_82) @[Cat.scala 33:92]
    wnList_res_im_rawIn_27.sig <= _wnList_res_im_rawIn_out_sig_T_83 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_217 = bits(wnList_res_im_rawIn_27.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_218 = mux(wnList_res_im_rawIn_27.isZero, UInt<3>("h0"), _wnList_res_im_T_217) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_219 = mux(wnList_res_im_rawIn_27.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_220 = or(_wnList_res_im_T_218, _wnList_res_im_T_219) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_221 = bits(wnList_res_im_rawIn_27.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_222 = bits(wnList_res_im_rawIn_27.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_27 = cat(_wnList_res_im_T_221, _wnList_res_im_T_222) @[Cat.scala 33:92]
    node wnList_res_im_hi_27 = cat(wnList_res_im_rawIn_27.sign, _wnList_res_im_T_220) @[Cat.scala 33:92]
    node _wnList_res_im_T_223 = cat(wnList_res_im_hi_27, wnList_res_im_lo_27) @[Cat.scala 33:92]
    node _wnList_res_im_T_224 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_28 = bits(_wnList_res_im_T_224, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_28 = bits(_wnList_res_im_T_224, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_28 = bits(_wnList_res_im_T_224, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_28 = eq(wnList_res_im_rawIn_expIn_28, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_28 = eq(wnList_res_im_rawIn_fractIn_28, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_504 = bits(wnList_res_im_rawIn_fractIn_28, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_505 = bits(wnList_res_im_rawIn_fractIn_28, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_506 = bits(wnList_res_im_rawIn_fractIn_28, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_507 = bits(wnList_res_im_rawIn_fractIn_28, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_508 = bits(wnList_res_im_rawIn_fractIn_28, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_509 = bits(wnList_res_im_rawIn_fractIn_28, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_510 = bits(wnList_res_im_rawIn_fractIn_28, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_511 = bits(wnList_res_im_rawIn_fractIn_28, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_512 = bits(wnList_res_im_rawIn_fractIn_28, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_513 = bits(wnList_res_im_rawIn_fractIn_28, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_514 = mux(_wnList_res_im_rawIn_normDist_T_505, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_515 = mux(_wnList_res_im_rawIn_normDist_T_506, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_514) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_516 = mux(_wnList_res_im_rawIn_normDist_T_507, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_515) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_517 = mux(_wnList_res_im_rawIn_normDist_T_508, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_516) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_518 = mux(_wnList_res_im_rawIn_normDist_T_509, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_517) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_519 = mux(_wnList_res_im_rawIn_normDist_T_510, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_518) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_520 = mux(_wnList_res_im_rawIn_normDist_T_511, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_519) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_521 = mux(_wnList_res_im_rawIn_normDist_T_512, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_520) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_28 = mux(_wnList_res_im_rawIn_normDist_T_513, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_521) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_56 = dshl(wnList_res_im_rawIn_fractIn_28, wnList_res_im_rawIn_normDist_28) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_57 = bits(_wnList_res_im_rawIn_subnormFract_T_56, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_28 = shl(_wnList_res_im_rawIn_subnormFract_T_57, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_140 = xor(wnList_res_im_rawIn_normDist_28, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_141 = mux(wnList_res_im_rawIn_isZeroExpIn_28, _wnList_res_im_rawIn_adjustedExp_T_140, wnList_res_im_rawIn_expIn_28) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_142 = mux(wnList_res_im_rawIn_isZeroExpIn_28, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_143 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_142) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_144 = add(_wnList_res_im_rawIn_adjustedExp_T_141, _wnList_res_im_rawIn_adjustedExp_T_143) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_28 = tail(_wnList_res_im_rawIn_adjustedExp_T_144, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_28 = and(wnList_res_im_rawIn_isZeroExpIn_28, wnList_res_im_rawIn_isZeroFractIn_28) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_28 = bits(wnList_res_im_rawIn_adjustedExp_28, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_28 = eq(_wnList_res_im_rawIn_isSpecial_T_28, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_28 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_28 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_56 = eq(wnList_res_im_rawIn_isZeroFractIn_28, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_57 = and(wnList_res_im_rawIn_isSpecial_28, _wnList_res_im_rawIn_out_isNaN_T_56) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_28.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_57 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_28 = and(wnList_res_im_rawIn_isSpecial_28, wnList_res_im_rawIn_isZeroFractIn_28) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_28.isInf <= _wnList_res_im_rawIn_out_isInf_T_28 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_28.isZero <= wnList_res_im_rawIn_isZero_28 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_28.sign <= wnList_res_im_rawIn_sign_28 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_56 = bits(wnList_res_im_rawIn_adjustedExp_28, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_57 = cvt(_wnList_res_im_rawIn_out_sExp_T_56) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_28.sExp <= _wnList_res_im_rawIn_out_sExp_T_57 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_84 = eq(wnList_res_im_rawIn_isZero_28, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_85 = mux(wnList_res_im_rawIn_isZeroExpIn_28, wnList_res_im_rawIn_subnormFract_28, wnList_res_im_rawIn_fractIn_28) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_28 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_84) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_86 = cat(wnList_res_im_rawIn_out_sig_hi_28, _wnList_res_im_rawIn_out_sig_T_85) @[Cat.scala 33:92]
    wnList_res_im_rawIn_28.sig <= _wnList_res_im_rawIn_out_sig_T_86 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_225 = bits(wnList_res_im_rawIn_28.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_226 = mux(wnList_res_im_rawIn_28.isZero, UInt<3>("h0"), _wnList_res_im_T_225) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_227 = mux(wnList_res_im_rawIn_28.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_228 = or(_wnList_res_im_T_226, _wnList_res_im_T_227) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_229 = bits(wnList_res_im_rawIn_28.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_230 = bits(wnList_res_im_rawIn_28.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_28 = cat(_wnList_res_im_T_229, _wnList_res_im_T_230) @[Cat.scala 33:92]
    node wnList_res_im_hi_28 = cat(wnList_res_im_rawIn_28.sign, _wnList_res_im_T_228) @[Cat.scala 33:92]
    node _wnList_res_im_T_231 = cat(wnList_res_im_hi_28, wnList_res_im_lo_28) @[Cat.scala 33:92]
    node _wnList_res_im_T_232 = asUInt(asSInt(UInt<16>("hb4a5"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_29 = bits(_wnList_res_im_T_232, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_29 = bits(_wnList_res_im_T_232, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_29 = bits(_wnList_res_im_T_232, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_29 = eq(wnList_res_im_rawIn_expIn_29, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_29 = eq(wnList_res_im_rawIn_fractIn_29, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_522 = bits(wnList_res_im_rawIn_fractIn_29, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_523 = bits(wnList_res_im_rawIn_fractIn_29, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_524 = bits(wnList_res_im_rawIn_fractIn_29, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_525 = bits(wnList_res_im_rawIn_fractIn_29, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_526 = bits(wnList_res_im_rawIn_fractIn_29, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_527 = bits(wnList_res_im_rawIn_fractIn_29, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_528 = bits(wnList_res_im_rawIn_fractIn_29, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_529 = bits(wnList_res_im_rawIn_fractIn_29, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_530 = bits(wnList_res_im_rawIn_fractIn_29, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_531 = bits(wnList_res_im_rawIn_fractIn_29, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_532 = mux(_wnList_res_im_rawIn_normDist_T_523, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_533 = mux(_wnList_res_im_rawIn_normDist_T_524, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_532) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_534 = mux(_wnList_res_im_rawIn_normDist_T_525, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_533) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_535 = mux(_wnList_res_im_rawIn_normDist_T_526, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_534) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_536 = mux(_wnList_res_im_rawIn_normDist_T_527, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_535) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_537 = mux(_wnList_res_im_rawIn_normDist_T_528, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_536) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_538 = mux(_wnList_res_im_rawIn_normDist_T_529, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_537) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_539 = mux(_wnList_res_im_rawIn_normDist_T_530, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_538) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_29 = mux(_wnList_res_im_rawIn_normDist_T_531, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_539) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_58 = dshl(wnList_res_im_rawIn_fractIn_29, wnList_res_im_rawIn_normDist_29) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_59 = bits(_wnList_res_im_rawIn_subnormFract_T_58, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_29 = shl(_wnList_res_im_rawIn_subnormFract_T_59, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_145 = xor(wnList_res_im_rawIn_normDist_29, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_146 = mux(wnList_res_im_rawIn_isZeroExpIn_29, _wnList_res_im_rawIn_adjustedExp_T_145, wnList_res_im_rawIn_expIn_29) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_147 = mux(wnList_res_im_rawIn_isZeroExpIn_29, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_148 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_147) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_149 = add(_wnList_res_im_rawIn_adjustedExp_T_146, _wnList_res_im_rawIn_adjustedExp_T_148) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_29 = tail(_wnList_res_im_rawIn_adjustedExp_T_149, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_29 = and(wnList_res_im_rawIn_isZeroExpIn_29, wnList_res_im_rawIn_isZeroFractIn_29) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_29 = bits(wnList_res_im_rawIn_adjustedExp_29, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_29 = eq(_wnList_res_im_rawIn_isSpecial_T_29, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_29 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_29 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_58 = eq(wnList_res_im_rawIn_isZeroFractIn_29, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_59 = and(wnList_res_im_rawIn_isSpecial_29, _wnList_res_im_rawIn_out_isNaN_T_58) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_29.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_59 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_29 = and(wnList_res_im_rawIn_isSpecial_29, wnList_res_im_rawIn_isZeroFractIn_29) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_29.isInf <= _wnList_res_im_rawIn_out_isInf_T_29 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_29.isZero <= wnList_res_im_rawIn_isZero_29 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_29.sign <= wnList_res_im_rawIn_sign_29 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_58 = bits(wnList_res_im_rawIn_adjustedExp_29, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_59 = cvt(_wnList_res_im_rawIn_out_sExp_T_58) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_29.sExp <= _wnList_res_im_rawIn_out_sExp_T_59 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_87 = eq(wnList_res_im_rawIn_isZero_29, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_88 = mux(wnList_res_im_rawIn_isZeroExpIn_29, wnList_res_im_rawIn_subnormFract_29, wnList_res_im_rawIn_fractIn_29) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_29 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_87) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_89 = cat(wnList_res_im_rawIn_out_sig_hi_29, _wnList_res_im_rawIn_out_sig_T_88) @[Cat.scala 33:92]
    wnList_res_im_rawIn_29.sig <= _wnList_res_im_rawIn_out_sig_T_89 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_233 = bits(wnList_res_im_rawIn_29.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_234 = mux(wnList_res_im_rawIn_29.isZero, UInt<3>("h0"), _wnList_res_im_T_233) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_235 = mux(wnList_res_im_rawIn_29.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_236 = or(_wnList_res_im_T_234, _wnList_res_im_T_235) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_237 = bits(wnList_res_im_rawIn_29.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_238 = bits(wnList_res_im_rawIn_29.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_29 = cat(_wnList_res_im_T_237, _wnList_res_im_T_238) @[Cat.scala 33:92]
    node wnList_res_im_hi_29 = cat(wnList_res_im_rawIn_29.sign, _wnList_res_im_T_236) @[Cat.scala 33:92]
    node _wnList_res_im_T_239 = cat(wnList_res_im_hi_29, wnList_res_im_lo_29) @[Cat.scala 33:92]
    node _wnList_res_im_T_240 = asUInt(asSInt(UInt<16>("hb23e"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_30 = bits(_wnList_res_im_T_240, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_30 = bits(_wnList_res_im_T_240, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_30 = bits(_wnList_res_im_T_240, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_30 = eq(wnList_res_im_rawIn_expIn_30, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_30 = eq(wnList_res_im_rawIn_fractIn_30, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_540 = bits(wnList_res_im_rawIn_fractIn_30, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_541 = bits(wnList_res_im_rawIn_fractIn_30, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_542 = bits(wnList_res_im_rawIn_fractIn_30, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_543 = bits(wnList_res_im_rawIn_fractIn_30, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_544 = bits(wnList_res_im_rawIn_fractIn_30, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_545 = bits(wnList_res_im_rawIn_fractIn_30, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_546 = bits(wnList_res_im_rawIn_fractIn_30, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_547 = bits(wnList_res_im_rawIn_fractIn_30, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_548 = bits(wnList_res_im_rawIn_fractIn_30, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_549 = bits(wnList_res_im_rawIn_fractIn_30, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_550 = mux(_wnList_res_im_rawIn_normDist_T_541, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_551 = mux(_wnList_res_im_rawIn_normDist_T_542, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_550) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_552 = mux(_wnList_res_im_rawIn_normDist_T_543, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_551) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_553 = mux(_wnList_res_im_rawIn_normDist_T_544, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_552) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_554 = mux(_wnList_res_im_rawIn_normDist_T_545, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_553) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_555 = mux(_wnList_res_im_rawIn_normDist_T_546, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_554) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_556 = mux(_wnList_res_im_rawIn_normDist_T_547, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_555) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_557 = mux(_wnList_res_im_rawIn_normDist_T_548, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_556) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_30 = mux(_wnList_res_im_rawIn_normDist_T_549, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_557) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_60 = dshl(wnList_res_im_rawIn_fractIn_30, wnList_res_im_rawIn_normDist_30) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_61 = bits(_wnList_res_im_rawIn_subnormFract_T_60, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_30 = shl(_wnList_res_im_rawIn_subnormFract_T_61, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_150 = xor(wnList_res_im_rawIn_normDist_30, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_151 = mux(wnList_res_im_rawIn_isZeroExpIn_30, _wnList_res_im_rawIn_adjustedExp_T_150, wnList_res_im_rawIn_expIn_30) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_152 = mux(wnList_res_im_rawIn_isZeroExpIn_30, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_153 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_152) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_154 = add(_wnList_res_im_rawIn_adjustedExp_T_151, _wnList_res_im_rawIn_adjustedExp_T_153) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_30 = tail(_wnList_res_im_rawIn_adjustedExp_T_154, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_30 = and(wnList_res_im_rawIn_isZeroExpIn_30, wnList_res_im_rawIn_isZeroFractIn_30) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_30 = bits(wnList_res_im_rawIn_adjustedExp_30, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_30 = eq(_wnList_res_im_rawIn_isSpecial_T_30, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_30 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_30 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_60 = eq(wnList_res_im_rawIn_isZeroFractIn_30, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_61 = and(wnList_res_im_rawIn_isSpecial_30, _wnList_res_im_rawIn_out_isNaN_T_60) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_30.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_61 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_30 = and(wnList_res_im_rawIn_isSpecial_30, wnList_res_im_rawIn_isZeroFractIn_30) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_30.isInf <= _wnList_res_im_rawIn_out_isInf_T_30 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_30.isZero <= wnList_res_im_rawIn_isZero_30 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_30.sign <= wnList_res_im_rawIn_sign_30 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_60 = bits(wnList_res_im_rawIn_adjustedExp_30, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_61 = cvt(_wnList_res_im_rawIn_out_sExp_T_60) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_30.sExp <= _wnList_res_im_rawIn_out_sExp_T_61 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_90 = eq(wnList_res_im_rawIn_isZero_30, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_91 = mux(wnList_res_im_rawIn_isZeroExpIn_30, wnList_res_im_rawIn_subnormFract_30, wnList_res_im_rawIn_fractIn_30) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_30 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_90) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_92 = cat(wnList_res_im_rawIn_out_sig_hi_30, _wnList_res_im_rawIn_out_sig_T_91) @[Cat.scala 33:92]
    wnList_res_im_rawIn_30.sig <= _wnList_res_im_rawIn_out_sig_T_92 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_241 = bits(wnList_res_im_rawIn_30.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_242 = mux(wnList_res_im_rawIn_30.isZero, UInt<3>("h0"), _wnList_res_im_T_241) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_243 = mux(wnList_res_im_rawIn_30.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_244 = or(_wnList_res_im_T_242, _wnList_res_im_T_243) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_245 = bits(wnList_res_im_rawIn_30.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_246 = bits(wnList_res_im_rawIn_30.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_30 = cat(_wnList_res_im_T_245, _wnList_res_im_T_246) @[Cat.scala 33:92]
    node wnList_res_im_hi_30 = cat(wnList_res_im_rawIn_30.sign, _wnList_res_im_T_244) @[Cat.scala 33:92]
    node _wnList_res_im_T_247 = cat(wnList_res_im_hi_30, wnList_res_im_lo_30) @[Cat.scala 33:92]
    node _wnList_res_im_T_248 = asUInt(asSInt(UInt<16>("hae45"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_31 = bits(_wnList_res_im_T_248, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_31 = bits(_wnList_res_im_T_248, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_31 = bits(_wnList_res_im_T_248, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_31 = eq(wnList_res_im_rawIn_expIn_31, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_31 = eq(wnList_res_im_rawIn_fractIn_31, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_558 = bits(wnList_res_im_rawIn_fractIn_31, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_559 = bits(wnList_res_im_rawIn_fractIn_31, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_560 = bits(wnList_res_im_rawIn_fractIn_31, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_561 = bits(wnList_res_im_rawIn_fractIn_31, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_562 = bits(wnList_res_im_rawIn_fractIn_31, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_563 = bits(wnList_res_im_rawIn_fractIn_31, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_564 = bits(wnList_res_im_rawIn_fractIn_31, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_565 = bits(wnList_res_im_rawIn_fractIn_31, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_566 = bits(wnList_res_im_rawIn_fractIn_31, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_567 = bits(wnList_res_im_rawIn_fractIn_31, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_568 = mux(_wnList_res_im_rawIn_normDist_T_559, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_569 = mux(_wnList_res_im_rawIn_normDist_T_560, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_568) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_570 = mux(_wnList_res_im_rawIn_normDist_T_561, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_569) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_571 = mux(_wnList_res_im_rawIn_normDist_T_562, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_570) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_572 = mux(_wnList_res_im_rawIn_normDist_T_563, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_571) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_573 = mux(_wnList_res_im_rawIn_normDist_T_564, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_572) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_574 = mux(_wnList_res_im_rawIn_normDist_T_565, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_573) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_575 = mux(_wnList_res_im_rawIn_normDist_T_566, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_574) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_31 = mux(_wnList_res_im_rawIn_normDist_T_567, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_575) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_62 = dshl(wnList_res_im_rawIn_fractIn_31, wnList_res_im_rawIn_normDist_31) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_63 = bits(_wnList_res_im_rawIn_subnormFract_T_62, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_31 = shl(_wnList_res_im_rawIn_subnormFract_T_63, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_155 = xor(wnList_res_im_rawIn_normDist_31, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_156 = mux(wnList_res_im_rawIn_isZeroExpIn_31, _wnList_res_im_rawIn_adjustedExp_T_155, wnList_res_im_rawIn_expIn_31) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_157 = mux(wnList_res_im_rawIn_isZeroExpIn_31, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_158 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_157) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_159 = add(_wnList_res_im_rawIn_adjustedExp_T_156, _wnList_res_im_rawIn_adjustedExp_T_158) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_31 = tail(_wnList_res_im_rawIn_adjustedExp_T_159, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_31 = and(wnList_res_im_rawIn_isZeroExpIn_31, wnList_res_im_rawIn_isZeroFractIn_31) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_31 = bits(wnList_res_im_rawIn_adjustedExp_31, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_31 = eq(_wnList_res_im_rawIn_isSpecial_T_31, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_31 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_31 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_62 = eq(wnList_res_im_rawIn_isZeroFractIn_31, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_63 = and(wnList_res_im_rawIn_isSpecial_31, _wnList_res_im_rawIn_out_isNaN_T_62) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_31.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_63 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_31 = and(wnList_res_im_rawIn_isSpecial_31, wnList_res_im_rawIn_isZeroFractIn_31) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_31.isInf <= _wnList_res_im_rawIn_out_isInf_T_31 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_31.isZero <= wnList_res_im_rawIn_isZero_31 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_31.sign <= wnList_res_im_rawIn_sign_31 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_62 = bits(wnList_res_im_rawIn_adjustedExp_31, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_63 = cvt(_wnList_res_im_rawIn_out_sExp_T_62) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_31.sExp <= _wnList_res_im_rawIn_out_sExp_T_63 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_93 = eq(wnList_res_im_rawIn_isZero_31, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_94 = mux(wnList_res_im_rawIn_isZeroExpIn_31, wnList_res_im_rawIn_subnormFract_31, wnList_res_im_rawIn_fractIn_31) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_31 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_93) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_95 = cat(wnList_res_im_rawIn_out_sig_hi_31, _wnList_res_im_rawIn_out_sig_T_94) @[Cat.scala 33:92]
    wnList_res_im_rawIn_31.sig <= _wnList_res_im_rawIn_out_sig_T_95 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_249 = bits(wnList_res_im_rawIn_31.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_250 = mux(wnList_res_im_rawIn_31.isZero, UInt<3>("h0"), _wnList_res_im_T_249) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_251 = mux(wnList_res_im_rawIn_31.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_252 = or(_wnList_res_im_T_250, _wnList_res_im_T_251) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_253 = bits(wnList_res_im_rawIn_31.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_254 = bits(wnList_res_im_rawIn_31.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_31 = cat(_wnList_res_im_T_253, _wnList_res_im_T_254) @[Cat.scala 33:92]
    node wnList_res_im_hi_31 = cat(wnList_res_im_rawIn_31.sign, _wnList_res_im_T_252) @[Cat.scala 33:92]
    node _wnList_res_im_T_255 = cat(wnList_res_im_hi_31, wnList_res_im_lo_31) @[Cat.scala 33:92]
    wire _wnList_res_im_WIRE : UInt<17>[32] @[FFT.scala 88:12]
    _wnList_res_im_WIRE[0] <= _wnList_res_im_T_7 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[1] <= _wnList_res_im_T_15 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[2] <= _wnList_res_im_T_23 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[3] <= _wnList_res_im_T_31 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[4] <= _wnList_res_im_T_39 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[5] <= _wnList_res_im_T_47 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[6] <= _wnList_res_im_T_55 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[7] <= _wnList_res_im_T_63 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[8] <= _wnList_res_im_T_71 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[9] <= _wnList_res_im_T_79 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[10] <= _wnList_res_im_T_87 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[11] <= _wnList_res_im_T_95 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[12] <= _wnList_res_im_T_103 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[13] <= _wnList_res_im_T_111 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[14] <= _wnList_res_im_T_119 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[15] <= _wnList_res_im_T_127 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[16] <= _wnList_res_im_T_135 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[17] <= _wnList_res_im_T_143 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[18] <= _wnList_res_im_T_151 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[19] <= _wnList_res_im_T_159 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[20] <= _wnList_res_im_T_167 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[21] <= _wnList_res_im_T_175 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[22] <= _wnList_res_im_T_183 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[23] <= _wnList_res_im_T_191 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[24] <= _wnList_res_im_T_199 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[25] <= _wnList_res_im_T_207 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[26] <= _wnList_res_im_T_215 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[27] <= _wnList_res_im_T_223 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[28] <= _wnList_res_im_T_231 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[29] <= _wnList_res_im_T_239 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[30] <= _wnList_res_im_T_247 @[FFT.scala 88:12]
    _wnList_res_im_WIRE[31] <= _wnList_res_im_T_255 @[FFT.scala 88:12]
    wnList_0.im <= _wnList_res_im_WIRE[_wnList_T_1] @[FFT.scala 105:12]
    inst inst of ButterflyMul @[Modules.scala 287:22]
    inst.clock <= clock
    inst.reset <= reset
    inst.io.in[0].im <= data1_0_0[0].im @[Modules.scala 288:16]
    inst.io.in[0].re <= data1_0_0[0].re @[Modules.scala 288:16]
    inst.io.in[1].im <= data1_0_0[1].im @[Modules.scala 288:16]
    inst.io.in[1].re <= data1_0_0[1].re @[Modules.scala 288:16]
    inst.io.wn[0].im <= wnList_0.im @[Modules.scala 289:16]
    inst.io.wn[0].re <= wnList_0.re @[Modules.scala 289:16]
    data2_0_0 <= inst.io.out @[FFT.scala 136:19]
    node wnCtrl_1 = bits(cnt_0, 3, 0) @[FFT.scala 131:23]
    node _wnList_T_2 = add(UInt<1>("h0"), wnCtrl_1) @[FFT.scala 135:96]
    node _wnList_T_3 = tail(_wnList_T_2, 1) @[FFT.scala 135:96]
    wire wnList_0_1 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 103:19]
    node _wnList_res_re_T_256 = asUInt(asSInt(UInt<16>("h3c00"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_32 = bits(_wnList_res_re_T_256, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_32 = bits(_wnList_res_re_T_256, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_32 = bits(_wnList_res_re_T_256, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_32 = eq(wnList_res_re_rawIn_expIn_32, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_32 = eq(wnList_res_re_rawIn_fractIn_32, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_576 = bits(wnList_res_re_rawIn_fractIn_32, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_577 = bits(wnList_res_re_rawIn_fractIn_32, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_578 = bits(wnList_res_re_rawIn_fractIn_32, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_579 = bits(wnList_res_re_rawIn_fractIn_32, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_580 = bits(wnList_res_re_rawIn_fractIn_32, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_581 = bits(wnList_res_re_rawIn_fractIn_32, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_582 = bits(wnList_res_re_rawIn_fractIn_32, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_583 = bits(wnList_res_re_rawIn_fractIn_32, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_584 = bits(wnList_res_re_rawIn_fractIn_32, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_585 = bits(wnList_res_re_rawIn_fractIn_32, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_586 = mux(_wnList_res_re_rawIn_normDist_T_577, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_587 = mux(_wnList_res_re_rawIn_normDist_T_578, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_586) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_588 = mux(_wnList_res_re_rawIn_normDist_T_579, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_587) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_589 = mux(_wnList_res_re_rawIn_normDist_T_580, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_588) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_590 = mux(_wnList_res_re_rawIn_normDist_T_581, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_589) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_591 = mux(_wnList_res_re_rawIn_normDist_T_582, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_590) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_592 = mux(_wnList_res_re_rawIn_normDist_T_583, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_591) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_593 = mux(_wnList_res_re_rawIn_normDist_T_584, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_592) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_32 = mux(_wnList_res_re_rawIn_normDist_T_585, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_593) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_64 = dshl(wnList_res_re_rawIn_fractIn_32, wnList_res_re_rawIn_normDist_32) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_65 = bits(_wnList_res_re_rawIn_subnormFract_T_64, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_32 = shl(_wnList_res_re_rawIn_subnormFract_T_65, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_160 = xor(wnList_res_re_rawIn_normDist_32, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_161 = mux(wnList_res_re_rawIn_isZeroExpIn_32, _wnList_res_re_rawIn_adjustedExp_T_160, wnList_res_re_rawIn_expIn_32) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_162 = mux(wnList_res_re_rawIn_isZeroExpIn_32, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_163 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_162) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_164 = add(_wnList_res_re_rawIn_adjustedExp_T_161, _wnList_res_re_rawIn_adjustedExp_T_163) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_32 = tail(_wnList_res_re_rawIn_adjustedExp_T_164, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_32 = and(wnList_res_re_rawIn_isZeroExpIn_32, wnList_res_re_rawIn_isZeroFractIn_32) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_32 = bits(wnList_res_re_rawIn_adjustedExp_32, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_32 = eq(_wnList_res_re_rawIn_isSpecial_T_32, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_32 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_32 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_64 = eq(wnList_res_re_rawIn_isZeroFractIn_32, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_65 = and(wnList_res_re_rawIn_isSpecial_32, _wnList_res_re_rawIn_out_isNaN_T_64) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_32.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_65 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_32 = and(wnList_res_re_rawIn_isSpecial_32, wnList_res_re_rawIn_isZeroFractIn_32) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_32.isInf <= _wnList_res_re_rawIn_out_isInf_T_32 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_32.isZero <= wnList_res_re_rawIn_isZero_32 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_32.sign <= wnList_res_re_rawIn_sign_32 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_64 = bits(wnList_res_re_rawIn_adjustedExp_32, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_65 = cvt(_wnList_res_re_rawIn_out_sExp_T_64) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_32.sExp <= _wnList_res_re_rawIn_out_sExp_T_65 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_96 = eq(wnList_res_re_rawIn_isZero_32, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_97 = mux(wnList_res_re_rawIn_isZeroExpIn_32, wnList_res_re_rawIn_subnormFract_32, wnList_res_re_rawIn_fractIn_32) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_32 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_96) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_98 = cat(wnList_res_re_rawIn_out_sig_hi_32, _wnList_res_re_rawIn_out_sig_T_97) @[Cat.scala 33:92]
    wnList_res_re_rawIn_32.sig <= _wnList_res_re_rawIn_out_sig_T_98 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_257 = bits(wnList_res_re_rawIn_32.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_258 = mux(wnList_res_re_rawIn_32.isZero, UInt<3>("h0"), _wnList_res_re_T_257) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_259 = mux(wnList_res_re_rawIn_32.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_260 = or(_wnList_res_re_T_258, _wnList_res_re_T_259) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_261 = bits(wnList_res_re_rawIn_32.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_262 = bits(wnList_res_re_rawIn_32.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_32 = cat(_wnList_res_re_T_261, _wnList_res_re_T_262) @[Cat.scala 33:92]
    node wnList_res_re_hi_32 = cat(wnList_res_re_rawIn_32.sign, _wnList_res_re_T_260) @[Cat.scala 33:92]
    node _wnList_res_re_T_263 = cat(wnList_res_re_hi_32, wnList_res_re_lo_32) @[Cat.scala 33:92]
    node _wnList_res_re_T_264 = asUInt(asSInt(UInt<16>("h3bd8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_33 = bits(_wnList_res_re_T_264, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_33 = bits(_wnList_res_re_T_264, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_33 = bits(_wnList_res_re_T_264, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_33 = eq(wnList_res_re_rawIn_expIn_33, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_33 = eq(wnList_res_re_rawIn_fractIn_33, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_594 = bits(wnList_res_re_rawIn_fractIn_33, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_595 = bits(wnList_res_re_rawIn_fractIn_33, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_596 = bits(wnList_res_re_rawIn_fractIn_33, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_597 = bits(wnList_res_re_rawIn_fractIn_33, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_598 = bits(wnList_res_re_rawIn_fractIn_33, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_599 = bits(wnList_res_re_rawIn_fractIn_33, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_600 = bits(wnList_res_re_rawIn_fractIn_33, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_601 = bits(wnList_res_re_rawIn_fractIn_33, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_602 = bits(wnList_res_re_rawIn_fractIn_33, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_603 = bits(wnList_res_re_rawIn_fractIn_33, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_604 = mux(_wnList_res_re_rawIn_normDist_T_595, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_605 = mux(_wnList_res_re_rawIn_normDist_T_596, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_604) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_606 = mux(_wnList_res_re_rawIn_normDist_T_597, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_605) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_607 = mux(_wnList_res_re_rawIn_normDist_T_598, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_606) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_608 = mux(_wnList_res_re_rawIn_normDist_T_599, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_607) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_609 = mux(_wnList_res_re_rawIn_normDist_T_600, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_608) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_610 = mux(_wnList_res_re_rawIn_normDist_T_601, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_609) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_611 = mux(_wnList_res_re_rawIn_normDist_T_602, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_610) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_33 = mux(_wnList_res_re_rawIn_normDist_T_603, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_611) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_66 = dshl(wnList_res_re_rawIn_fractIn_33, wnList_res_re_rawIn_normDist_33) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_67 = bits(_wnList_res_re_rawIn_subnormFract_T_66, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_33 = shl(_wnList_res_re_rawIn_subnormFract_T_67, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_165 = xor(wnList_res_re_rawIn_normDist_33, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_166 = mux(wnList_res_re_rawIn_isZeroExpIn_33, _wnList_res_re_rawIn_adjustedExp_T_165, wnList_res_re_rawIn_expIn_33) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_167 = mux(wnList_res_re_rawIn_isZeroExpIn_33, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_168 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_167) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_169 = add(_wnList_res_re_rawIn_adjustedExp_T_166, _wnList_res_re_rawIn_adjustedExp_T_168) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_33 = tail(_wnList_res_re_rawIn_adjustedExp_T_169, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_33 = and(wnList_res_re_rawIn_isZeroExpIn_33, wnList_res_re_rawIn_isZeroFractIn_33) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_33 = bits(wnList_res_re_rawIn_adjustedExp_33, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_33 = eq(_wnList_res_re_rawIn_isSpecial_T_33, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_33 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_33 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_66 = eq(wnList_res_re_rawIn_isZeroFractIn_33, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_67 = and(wnList_res_re_rawIn_isSpecial_33, _wnList_res_re_rawIn_out_isNaN_T_66) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_33.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_67 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_33 = and(wnList_res_re_rawIn_isSpecial_33, wnList_res_re_rawIn_isZeroFractIn_33) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_33.isInf <= _wnList_res_re_rawIn_out_isInf_T_33 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_33.isZero <= wnList_res_re_rawIn_isZero_33 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_33.sign <= wnList_res_re_rawIn_sign_33 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_66 = bits(wnList_res_re_rawIn_adjustedExp_33, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_67 = cvt(_wnList_res_re_rawIn_out_sExp_T_66) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_33.sExp <= _wnList_res_re_rawIn_out_sExp_T_67 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_99 = eq(wnList_res_re_rawIn_isZero_33, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_100 = mux(wnList_res_re_rawIn_isZeroExpIn_33, wnList_res_re_rawIn_subnormFract_33, wnList_res_re_rawIn_fractIn_33) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_33 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_99) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_101 = cat(wnList_res_re_rawIn_out_sig_hi_33, _wnList_res_re_rawIn_out_sig_T_100) @[Cat.scala 33:92]
    wnList_res_re_rawIn_33.sig <= _wnList_res_re_rawIn_out_sig_T_101 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_265 = bits(wnList_res_re_rawIn_33.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_266 = mux(wnList_res_re_rawIn_33.isZero, UInt<3>("h0"), _wnList_res_re_T_265) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_267 = mux(wnList_res_re_rawIn_33.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_268 = or(_wnList_res_re_T_266, _wnList_res_re_T_267) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_269 = bits(wnList_res_re_rawIn_33.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_270 = bits(wnList_res_re_rawIn_33.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_33 = cat(_wnList_res_re_T_269, _wnList_res_re_T_270) @[Cat.scala 33:92]
    node wnList_res_re_hi_33 = cat(wnList_res_re_rawIn_33.sign, _wnList_res_re_T_268) @[Cat.scala 33:92]
    node _wnList_res_re_T_271 = cat(wnList_res_re_hi_33, wnList_res_re_lo_33) @[Cat.scala 33:92]
    node _wnList_res_re_T_272 = asUInt(asSInt(UInt<16>("h3b64"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_34 = bits(_wnList_res_re_T_272, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_34 = bits(_wnList_res_re_T_272, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_34 = bits(_wnList_res_re_T_272, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_34 = eq(wnList_res_re_rawIn_expIn_34, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_34 = eq(wnList_res_re_rawIn_fractIn_34, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_612 = bits(wnList_res_re_rawIn_fractIn_34, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_613 = bits(wnList_res_re_rawIn_fractIn_34, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_614 = bits(wnList_res_re_rawIn_fractIn_34, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_615 = bits(wnList_res_re_rawIn_fractIn_34, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_616 = bits(wnList_res_re_rawIn_fractIn_34, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_617 = bits(wnList_res_re_rawIn_fractIn_34, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_618 = bits(wnList_res_re_rawIn_fractIn_34, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_619 = bits(wnList_res_re_rawIn_fractIn_34, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_620 = bits(wnList_res_re_rawIn_fractIn_34, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_621 = bits(wnList_res_re_rawIn_fractIn_34, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_622 = mux(_wnList_res_re_rawIn_normDist_T_613, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_623 = mux(_wnList_res_re_rawIn_normDist_T_614, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_622) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_624 = mux(_wnList_res_re_rawIn_normDist_T_615, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_623) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_625 = mux(_wnList_res_re_rawIn_normDist_T_616, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_624) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_626 = mux(_wnList_res_re_rawIn_normDist_T_617, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_625) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_627 = mux(_wnList_res_re_rawIn_normDist_T_618, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_626) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_628 = mux(_wnList_res_re_rawIn_normDist_T_619, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_627) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_629 = mux(_wnList_res_re_rawIn_normDist_T_620, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_628) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_34 = mux(_wnList_res_re_rawIn_normDist_T_621, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_629) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_68 = dshl(wnList_res_re_rawIn_fractIn_34, wnList_res_re_rawIn_normDist_34) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_69 = bits(_wnList_res_re_rawIn_subnormFract_T_68, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_34 = shl(_wnList_res_re_rawIn_subnormFract_T_69, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_170 = xor(wnList_res_re_rawIn_normDist_34, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_171 = mux(wnList_res_re_rawIn_isZeroExpIn_34, _wnList_res_re_rawIn_adjustedExp_T_170, wnList_res_re_rawIn_expIn_34) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_172 = mux(wnList_res_re_rawIn_isZeroExpIn_34, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_173 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_172) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_174 = add(_wnList_res_re_rawIn_adjustedExp_T_171, _wnList_res_re_rawIn_adjustedExp_T_173) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_34 = tail(_wnList_res_re_rawIn_adjustedExp_T_174, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_34 = and(wnList_res_re_rawIn_isZeroExpIn_34, wnList_res_re_rawIn_isZeroFractIn_34) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_34 = bits(wnList_res_re_rawIn_adjustedExp_34, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_34 = eq(_wnList_res_re_rawIn_isSpecial_T_34, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_34 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_34 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_68 = eq(wnList_res_re_rawIn_isZeroFractIn_34, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_69 = and(wnList_res_re_rawIn_isSpecial_34, _wnList_res_re_rawIn_out_isNaN_T_68) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_34.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_69 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_34 = and(wnList_res_re_rawIn_isSpecial_34, wnList_res_re_rawIn_isZeroFractIn_34) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_34.isInf <= _wnList_res_re_rawIn_out_isInf_T_34 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_34.isZero <= wnList_res_re_rawIn_isZero_34 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_34.sign <= wnList_res_re_rawIn_sign_34 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_68 = bits(wnList_res_re_rawIn_adjustedExp_34, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_69 = cvt(_wnList_res_re_rawIn_out_sExp_T_68) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_34.sExp <= _wnList_res_re_rawIn_out_sExp_T_69 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_102 = eq(wnList_res_re_rawIn_isZero_34, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_103 = mux(wnList_res_re_rawIn_isZeroExpIn_34, wnList_res_re_rawIn_subnormFract_34, wnList_res_re_rawIn_fractIn_34) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_34 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_102) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_104 = cat(wnList_res_re_rawIn_out_sig_hi_34, _wnList_res_re_rawIn_out_sig_T_103) @[Cat.scala 33:92]
    wnList_res_re_rawIn_34.sig <= _wnList_res_re_rawIn_out_sig_T_104 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_273 = bits(wnList_res_re_rawIn_34.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_274 = mux(wnList_res_re_rawIn_34.isZero, UInt<3>("h0"), _wnList_res_re_T_273) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_275 = mux(wnList_res_re_rawIn_34.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_276 = or(_wnList_res_re_T_274, _wnList_res_re_T_275) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_277 = bits(wnList_res_re_rawIn_34.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_278 = bits(wnList_res_re_rawIn_34.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_34 = cat(_wnList_res_re_T_277, _wnList_res_re_T_278) @[Cat.scala 33:92]
    node wnList_res_re_hi_34 = cat(wnList_res_re_rawIn_34.sign, _wnList_res_re_T_276) @[Cat.scala 33:92]
    node _wnList_res_re_T_279 = cat(wnList_res_re_hi_34, wnList_res_re_lo_34) @[Cat.scala 33:92]
    node _wnList_res_re_T_280 = asUInt(asSInt(UInt<16>("h3aa6"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_35 = bits(_wnList_res_re_T_280, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_35 = bits(_wnList_res_re_T_280, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_35 = bits(_wnList_res_re_T_280, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_35 = eq(wnList_res_re_rawIn_expIn_35, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_35 = eq(wnList_res_re_rawIn_fractIn_35, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_630 = bits(wnList_res_re_rawIn_fractIn_35, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_631 = bits(wnList_res_re_rawIn_fractIn_35, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_632 = bits(wnList_res_re_rawIn_fractIn_35, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_633 = bits(wnList_res_re_rawIn_fractIn_35, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_634 = bits(wnList_res_re_rawIn_fractIn_35, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_635 = bits(wnList_res_re_rawIn_fractIn_35, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_636 = bits(wnList_res_re_rawIn_fractIn_35, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_637 = bits(wnList_res_re_rawIn_fractIn_35, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_638 = bits(wnList_res_re_rawIn_fractIn_35, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_639 = bits(wnList_res_re_rawIn_fractIn_35, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_640 = mux(_wnList_res_re_rawIn_normDist_T_631, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_641 = mux(_wnList_res_re_rawIn_normDist_T_632, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_640) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_642 = mux(_wnList_res_re_rawIn_normDist_T_633, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_641) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_643 = mux(_wnList_res_re_rawIn_normDist_T_634, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_642) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_644 = mux(_wnList_res_re_rawIn_normDist_T_635, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_643) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_645 = mux(_wnList_res_re_rawIn_normDist_T_636, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_644) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_646 = mux(_wnList_res_re_rawIn_normDist_T_637, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_645) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_647 = mux(_wnList_res_re_rawIn_normDist_T_638, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_646) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_35 = mux(_wnList_res_re_rawIn_normDist_T_639, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_647) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_70 = dshl(wnList_res_re_rawIn_fractIn_35, wnList_res_re_rawIn_normDist_35) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_71 = bits(_wnList_res_re_rawIn_subnormFract_T_70, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_35 = shl(_wnList_res_re_rawIn_subnormFract_T_71, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_175 = xor(wnList_res_re_rawIn_normDist_35, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_176 = mux(wnList_res_re_rawIn_isZeroExpIn_35, _wnList_res_re_rawIn_adjustedExp_T_175, wnList_res_re_rawIn_expIn_35) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_177 = mux(wnList_res_re_rawIn_isZeroExpIn_35, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_178 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_177) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_179 = add(_wnList_res_re_rawIn_adjustedExp_T_176, _wnList_res_re_rawIn_adjustedExp_T_178) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_35 = tail(_wnList_res_re_rawIn_adjustedExp_T_179, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_35 = and(wnList_res_re_rawIn_isZeroExpIn_35, wnList_res_re_rawIn_isZeroFractIn_35) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_35 = bits(wnList_res_re_rawIn_adjustedExp_35, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_35 = eq(_wnList_res_re_rawIn_isSpecial_T_35, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_35 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_35 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_70 = eq(wnList_res_re_rawIn_isZeroFractIn_35, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_71 = and(wnList_res_re_rawIn_isSpecial_35, _wnList_res_re_rawIn_out_isNaN_T_70) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_35.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_71 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_35 = and(wnList_res_re_rawIn_isSpecial_35, wnList_res_re_rawIn_isZeroFractIn_35) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_35.isInf <= _wnList_res_re_rawIn_out_isInf_T_35 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_35.isZero <= wnList_res_re_rawIn_isZero_35 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_35.sign <= wnList_res_re_rawIn_sign_35 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_70 = bits(wnList_res_re_rawIn_adjustedExp_35, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_71 = cvt(_wnList_res_re_rawIn_out_sExp_T_70) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_35.sExp <= _wnList_res_re_rawIn_out_sExp_T_71 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_105 = eq(wnList_res_re_rawIn_isZero_35, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_106 = mux(wnList_res_re_rawIn_isZeroExpIn_35, wnList_res_re_rawIn_subnormFract_35, wnList_res_re_rawIn_fractIn_35) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_35 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_105) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_107 = cat(wnList_res_re_rawIn_out_sig_hi_35, _wnList_res_re_rawIn_out_sig_T_106) @[Cat.scala 33:92]
    wnList_res_re_rawIn_35.sig <= _wnList_res_re_rawIn_out_sig_T_107 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_281 = bits(wnList_res_re_rawIn_35.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_282 = mux(wnList_res_re_rawIn_35.isZero, UInt<3>("h0"), _wnList_res_re_T_281) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_283 = mux(wnList_res_re_rawIn_35.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_284 = or(_wnList_res_re_T_282, _wnList_res_re_T_283) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_285 = bits(wnList_res_re_rawIn_35.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_286 = bits(wnList_res_re_rawIn_35.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_35 = cat(_wnList_res_re_T_285, _wnList_res_re_T_286) @[Cat.scala 33:92]
    node wnList_res_re_hi_35 = cat(wnList_res_re_rawIn_35.sign, _wnList_res_re_T_284) @[Cat.scala 33:92]
    node _wnList_res_re_T_287 = cat(wnList_res_re_hi_35, wnList_res_re_lo_35) @[Cat.scala 33:92]
    node _wnList_res_re_T_288 = asUInt(asSInt(UInt<16>("h39a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_36 = bits(_wnList_res_re_T_288, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_36 = bits(_wnList_res_re_T_288, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_36 = bits(_wnList_res_re_T_288, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_36 = eq(wnList_res_re_rawIn_expIn_36, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_36 = eq(wnList_res_re_rawIn_fractIn_36, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_648 = bits(wnList_res_re_rawIn_fractIn_36, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_649 = bits(wnList_res_re_rawIn_fractIn_36, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_650 = bits(wnList_res_re_rawIn_fractIn_36, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_651 = bits(wnList_res_re_rawIn_fractIn_36, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_652 = bits(wnList_res_re_rawIn_fractIn_36, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_653 = bits(wnList_res_re_rawIn_fractIn_36, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_654 = bits(wnList_res_re_rawIn_fractIn_36, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_655 = bits(wnList_res_re_rawIn_fractIn_36, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_656 = bits(wnList_res_re_rawIn_fractIn_36, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_657 = bits(wnList_res_re_rawIn_fractIn_36, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_658 = mux(_wnList_res_re_rawIn_normDist_T_649, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_659 = mux(_wnList_res_re_rawIn_normDist_T_650, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_658) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_660 = mux(_wnList_res_re_rawIn_normDist_T_651, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_659) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_661 = mux(_wnList_res_re_rawIn_normDist_T_652, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_660) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_662 = mux(_wnList_res_re_rawIn_normDist_T_653, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_661) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_663 = mux(_wnList_res_re_rawIn_normDist_T_654, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_662) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_664 = mux(_wnList_res_re_rawIn_normDist_T_655, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_663) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_665 = mux(_wnList_res_re_rawIn_normDist_T_656, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_664) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_36 = mux(_wnList_res_re_rawIn_normDist_T_657, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_665) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_72 = dshl(wnList_res_re_rawIn_fractIn_36, wnList_res_re_rawIn_normDist_36) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_73 = bits(_wnList_res_re_rawIn_subnormFract_T_72, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_36 = shl(_wnList_res_re_rawIn_subnormFract_T_73, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_180 = xor(wnList_res_re_rawIn_normDist_36, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_181 = mux(wnList_res_re_rawIn_isZeroExpIn_36, _wnList_res_re_rawIn_adjustedExp_T_180, wnList_res_re_rawIn_expIn_36) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_182 = mux(wnList_res_re_rawIn_isZeroExpIn_36, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_183 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_182) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_184 = add(_wnList_res_re_rawIn_adjustedExp_T_181, _wnList_res_re_rawIn_adjustedExp_T_183) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_36 = tail(_wnList_res_re_rawIn_adjustedExp_T_184, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_36 = and(wnList_res_re_rawIn_isZeroExpIn_36, wnList_res_re_rawIn_isZeroFractIn_36) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_36 = bits(wnList_res_re_rawIn_adjustedExp_36, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_36 = eq(_wnList_res_re_rawIn_isSpecial_T_36, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_36 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_36 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_72 = eq(wnList_res_re_rawIn_isZeroFractIn_36, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_73 = and(wnList_res_re_rawIn_isSpecial_36, _wnList_res_re_rawIn_out_isNaN_T_72) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_36.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_73 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_36 = and(wnList_res_re_rawIn_isSpecial_36, wnList_res_re_rawIn_isZeroFractIn_36) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_36.isInf <= _wnList_res_re_rawIn_out_isInf_T_36 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_36.isZero <= wnList_res_re_rawIn_isZero_36 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_36.sign <= wnList_res_re_rawIn_sign_36 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_72 = bits(wnList_res_re_rawIn_adjustedExp_36, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_73 = cvt(_wnList_res_re_rawIn_out_sExp_T_72) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_36.sExp <= _wnList_res_re_rawIn_out_sExp_T_73 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_108 = eq(wnList_res_re_rawIn_isZero_36, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_109 = mux(wnList_res_re_rawIn_isZeroExpIn_36, wnList_res_re_rawIn_subnormFract_36, wnList_res_re_rawIn_fractIn_36) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_36 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_108) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_110 = cat(wnList_res_re_rawIn_out_sig_hi_36, _wnList_res_re_rawIn_out_sig_T_109) @[Cat.scala 33:92]
    wnList_res_re_rawIn_36.sig <= _wnList_res_re_rawIn_out_sig_T_110 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_289 = bits(wnList_res_re_rawIn_36.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_290 = mux(wnList_res_re_rawIn_36.isZero, UInt<3>("h0"), _wnList_res_re_T_289) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_291 = mux(wnList_res_re_rawIn_36.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_292 = or(_wnList_res_re_T_290, _wnList_res_re_T_291) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_293 = bits(wnList_res_re_rawIn_36.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_294 = bits(wnList_res_re_rawIn_36.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_36 = cat(_wnList_res_re_T_293, _wnList_res_re_T_294) @[Cat.scala 33:92]
    node wnList_res_re_hi_36 = cat(wnList_res_re_rawIn_36.sign, _wnList_res_re_T_292) @[Cat.scala 33:92]
    node _wnList_res_re_T_295 = cat(wnList_res_re_hi_36, wnList_res_re_lo_36) @[Cat.scala 33:92]
    node _wnList_res_re_T_296 = asUInt(asSInt(UInt<16>("h3871"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_37 = bits(_wnList_res_re_T_296, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_37 = bits(_wnList_res_re_T_296, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_37 = bits(_wnList_res_re_T_296, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_37 = eq(wnList_res_re_rawIn_expIn_37, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_37 = eq(wnList_res_re_rawIn_fractIn_37, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_666 = bits(wnList_res_re_rawIn_fractIn_37, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_667 = bits(wnList_res_re_rawIn_fractIn_37, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_668 = bits(wnList_res_re_rawIn_fractIn_37, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_669 = bits(wnList_res_re_rawIn_fractIn_37, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_670 = bits(wnList_res_re_rawIn_fractIn_37, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_671 = bits(wnList_res_re_rawIn_fractIn_37, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_672 = bits(wnList_res_re_rawIn_fractIn_37, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_673 = bits(wnList_res_re_rawIn_fractIn_37, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_674 = bits(wnList_res_re_rawIn_fractIn_37, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_675 = bits(wnList_res_re_rawIn_fractIn_37, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_676 = mux(_wnList_res_re_rawIn_normDist_T_667, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_677 = mux(_wnList_res_re_rawIn_normDist_T_668, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_676) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_678 = mux(_wnList_res_re_rawIn_normDist_T_669, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_677) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_679 = mux(_wnList_res_re_rawIn_normDist_T_670, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_678) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_680 = mux(_wnList_res_re_rawIn_normDist_T_671, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_679) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_681 = mux(_wnList_res_re_rawIn_normDist_T_672, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_680) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_682 = mux(_wnList_res_re_rawIn_normDist_T_673, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_681) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_683 = mux(_wnList_res_re_rawIn_normDist_T_674, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_682) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_37 = mux(_wnList_res_re_rawIn_normDist_T_675, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_683) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_74 = dshl(wnList_res_re_rawIn_fractIn_37, wnList_res_re_rawIn_normDist_37) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_75 = bits(_wnList_res_re_rawIn_subnormFract_T_74, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_37 = shl(_wnList_res_re_rawIn_subnormFract_T_75, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_185 = xor(wnList_res_re_rawIn_normDist_37, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_186 = mux(wnList_res_re_rawIn_isZeroExpIn_37, _wnList_res_re_rawIn_adjustedExp_T_185, wnList_res_re_rawIn_expIn_37) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_187 = mux(wnList_res_re_rawIn_isZeroExpIn_37, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_188 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_187) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_189 = add(_wnList_res_re_rawIn_adjustedExp_T_186, _wnList_res_re_rawIn_adjustedExp_T_188) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_37 = tail(_wnList_res_re_rawIn_adjustedExp_T_189, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_37 = and(wnList_res_re_rawIn_isZeroExpIn_37, wnList_res_re_rawIn_isZeroFractIn_37) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_37 = bits(wnList_res_re_rawIn_adjustedExp_37, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_37 = eq(_wnList_res_re_rawIn_isSpecial_T_37, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_37 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_37 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_74 = eq(wnList_res_re_rawIn_isZeroFractIn_37, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_75 = and(wnList_res_re_rawIn_isSpecial_37, _wnList_res_re_rawIn_out_isNaN_T_74) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_37.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_75 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_37 = and(wnList_res_re_rawIn_isSpecial_37, wnList_res_re_rawIn_isZeroFractIn_37) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_37.isInf <= _wnList_res_re_rawIn_out_isInf_T_37 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_37.isZero <= wnList_res_re_rawIn_isZero_37 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_37.sign <= wnList_res_re_rawIn_sign_37 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_74 = bits(wnList_res_re_rawIn_adjustedExp_37, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_75 = cvt(_wnList_res_re_rawIn_out_sExp_T_74) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_37.sExp <= _wnList_res_re_rawIn_out_sExp_T_75 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_111 = eq(wnList_res_re_rawIn_isZero_37, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_112 = mux(wnList_res_re_rawIn_isZeroExpIn_37, wnList_res_re_rawIn_subnormFract_37, wnList_res_re_rawIn_fractIn_37) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_37 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_111) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_113 = cat(wnList_res_re_rawIn_out_sig_hi_37, _wnList_res_re_rawIn_out_sig_T_112) @[Cat.scala 33:92]
    wnList_res_re_rawIn_37.sig <= _wnList_res_re_rawIn_out_sig_T_113 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_297 = bits(wnList_res_re_rawIn_37.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_298 = mux(wnList_res_re_rawIn_37.isZero, UInt<3>("h0"), _wnList_res_re_T_297) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_299 = mux(wnList_res_re_rawIn_37.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_300 = or(_wnList_res_re_T_298, _wnList_res_re_T_299) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_301 = bits(wnList_res_re_rawIn_37.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_302 = bits(wnList_res_re_rawIn_37.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_37 = cat(_wnList_res_re_T_301, _wnList_res_re_T_302) @[Cat.scala 33:92]
    node wnList_res_re_hi_37 = cat(wnList_res_re_rawIn_37.sign, _wnList_res_re_T_300) @[Cat.scala 33:92]
    node _wnList_res_re_T_303 = cat(wnList_res_re_hi_37, wnList_res_re_lo_37) @[Cat.scala 33:92]
    node _wnList_res_re_T_304 = asUInt(asSInt(UInt<16>("h361f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_38 = bits(_wnList_res_re_T_304, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_38 = bits(_wnList_res_re_T_304, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_38 = bits(_wnList_res_re_T_304, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_38 = eq(wnList_res_re_rawIn_expIn_38, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_38 = eq(wnList_res_re_rawIn_fractIn_38, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_684 = bits(wnList_res_re_rawIn_fractIn_38, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_685 = bits(wnList_res_re_rawIn_fractIn_38, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_686 = bits(wnList_res_re_rawIn_fractIn_38, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_687 = bits(wnList_res_re_rawIn_fractIn_38, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_688 = bits(wnList_res_re_rawIn_fractIn_38, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_689 = bits(wnList_res_re_rawIn_fractIn_38, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_690 = bits(wnList_res_re_rawIn_fractIn_38, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_691 = bits(wnList_res_re_rawIn_fractIn_38, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_692 = bits(wnList_res_re_rawIn_fractIn_38, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_693 = bits(wnList_res_re_rawIn_fractIn_38, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_694 = mux(_wnList_res_re_rawIn_normDist_T_685, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_695 = mux(_wnList_res_re_rawIn_normDist_T_686, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_694) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_696 = mux(_wnList_res_re_rawIn_normDist_T_687, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_695) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_697 = mux(_wnList_res_re_rawIn_normDist_T_688, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_696) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_698 = mux(_wnList_res_re_rawIn_normDist_T_689, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_697) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_699 = mux(_wnList_res_re_rawIn_normDist_T_690, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_698) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_700 = mux(_wnList_res_re_rawIn_normDist_T_691, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_699) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_701 = mux(_wnList_res_re_rawIn_normDist_T_692, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_700) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_38 = mux(_wnList_res_re_rawIn_normDist_T_693, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_701) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_76 = dshl(wnList_res_re_rawIn_fractIn_38, wnList_res_re_rawIn_normDist_38) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_77 = bits(_wnList_res_re_rawIn_subnormFract_T_76, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_38 = shl(_wnList_res_re_rawIn_subnormFract_T_77, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_190 = xor(wnList_res_re_rawIn_normDist_38, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_191 = mux(wnList_res_re_rawIn_isZeroExpIn_38, _wnList_res_re_rawIn_adjustedExp_T_190, wnList_res_re_rawIn_expIn_38) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_192 = mux(wnList_res_re_rawIn_isZeroExpIn_38, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_193 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_192) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_194 = add(_wnList_res_re_rawIn_adjustedExp_T_191, _wnList_res_re_rawIn_adjustedExp_T_193) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_38 = tail(_wnList_res_re_rawIn_adjustedExp_T_194, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_38 = and(wnList_res_re_rawIn_isZeroExpIn_38, wnList_res_re_rawIn_isZeroFractIn_38) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_38 = bits(wnList_res_re_rawIn_adjustedExp_38, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_38 = eq(_wnList_res_re_rawIn_isSpecial_T_38, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_38 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_38 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_76 = eq(wnList_res_re_rawIn_isZeroFractIn_38, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_77 = and(wnList_res_re_rawIn_isSpecial_38, _wnList_res_re_rawIn_out_isNaN_T_76) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_38.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_77 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_38 = and(wnList_res_re_rawIn_isSpecial_38, wnList_res_re_rawIn_isZeroFractIn_38) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_38.isInf <= _wnList_res_re_rawIn_out_isInf_T_38 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_38.isZero <= wnList_res_re_rawIn_isZero_38 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_38.sign <= wnList_res_re_rawIn_sign_38 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_76 = bits(wnList_res_re_rawIn_adjustedExp_38, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_77 = cvt(_wnList_res_re_rawIn_out_sExp_T_76) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_38.sExp <= _wnList_res_re_rawIn_out_sExp_T_77 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_114 = eq(wnList_res_re_rawIn_isZero_38, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_115 = mux(wnList_res_re_rawIn_isZeroExpIn_38, wnList_res_re_rawIn_subnormFract_38, wnList_res_re_rawIn_fractIn_38) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_38 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_114) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_116 = cat(wnList_res_re_rawIn_out_sig_hi_38, _wnList_res_re_rawIn_out_sig_T_115) @[Cat.scala 33:92]
    wnList_res_re_rawIn_38.sig <= _wnList_res_re_rawIn_out_sig_T_116 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_305 = bits(wnList_res_re_rawIn_38.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_306 = mux(wnList_res_re_rawIn_38.isZero, UInt<3>("h0"), _wnList_res_re_T_305) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_307 = mux(wnList_res_re_rawIn_38.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_308 = or(_wnList_res_re_T_306, _wnList_res_re_T_307) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_309 = bits(wnList_res_re_rawIn_38.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_310 = bits(wnList_res_re_rawIn_38.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_38 = cat(_wnList_res_re_T_309, _wnList_res_re_T_310) @[Cat.scala 33:92]
    node wnList_res_re_hi_38 = cat(wnList_res_re_rawIn_38.sign, _wnList_res_re_T_308) @[Cat.scala 33:92]
    node _wnList_res_re_T_311 = cat(wnList_res_re_hi_38, wnList_res_re_lo_38) @[Cat.scala 33:92]
    node _wnList_res_re_T_312 = asUInt(asSInt(UInt<16>("h323e"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_39 = bits(_wnList_res_re_T_312, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_39 = bits(_wnList_res_re_T_312, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_39 = bits(_wnList_res_re_T_312, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_39 = eq(wnList_res_re_rawIn_expIn_39, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_39 = eq(wnList_res_re_rawIn_fractIn_39, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_702 = bits(wnList_res_re_rawIn_fractIn_39, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_703 = bits(wnList_res_re_rawIn_fractIn_39, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_704 = bits(wnList_res_re_rawIn_fractIn_39, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_705 = bits(wnList_res_re_rawIn_fractIn_39, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_706 = bits(wnList_res_re_rawIn_fractIn_39, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_707 = bits(wnList_res_re_rawIn_fractIn_39, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_708 = bits(wnList_res_re_rawIn_fractIn_39, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_709 = bits(wnList_res_re_rawIn_fractIn_39, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_710 = bits(wnList_res_re_rawIn_fractIn_39, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_711 = bits(wnList_res_re_rawIn_fractIn_39, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_712 = mux(_wnList_res_re_rawIn_normDist_T_703, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_713 = mux(_wnList_res_re_rawIn_normDist_T_704, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_712) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_714 = mux(_wnList_res_re_rawIn_normDist_T_705, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_713) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_715 = mux(_wnList_res_re_rawIn_normDist_T_706, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_714) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_716 = mux(_wnList_res_re_rawIn_normDist_T_707, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_715) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_717 = mux(_wnList_res_re_rawIn_normDist_T_708, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_716) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_718 = mux(_wnList_res_re_rawIn_normDist_T_709, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_717) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_719 = mux(_wnList_res_re_rawIn_normDist_T_710, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_718) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_39 = mux(_wnList_res_re_rawIn_normDist_T_711, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_719) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_78 = dshl(wnList_res_re_rawIn_fractIn_39, wnList_res_re_rawIn_normDist_39) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_79 = bits(_wnList_res_re_rawIn_subnormFract_T_78, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_39 = shl(_wnList_res_re_rawIn_subnormFract_T_79, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_195 = xor(wnList_res_re_rawIn_normDist_39, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_196 = mux(wnList_res_re_rawIn_isZeroExpIn_39, _wnList_res_re_rawIn_adjustedExp_T_195, wnList_res_re_rawIn_expIn_39) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_197 = mux(wnList_res_re_rawIn_isZeroExpIn_39, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_198 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_197) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_199 = add(_wnList_res_re_rawIn_adjustedExp_T_196, _wnList_res_re_rawIn_adjustedExp_T_198) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_39 = tail(_wnList_res_re_rawIn_adjustedExp_T_199, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_39 = and(wnList_res_re_rawIn_isZeroExpIn_39, wnList_res_re_rawIn_isZeroFractIn_39) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_39 = bits(wnList_res_re_rawIn_adjustedExp_39, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_39 = eq(_wnList_res_re_rawIn_isSpecial_T_39, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_39 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_39 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_78 = eq(wnList_res_re_rawIn_isZeroFractIn_39, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_79 = and(wnList_res_re_rawIn_isSpecial_39, _wnList_res_re_rawIn_out_isNaN_T_78) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_39.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_79 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_39 = and(wnList_res_re_rawIn_isSpecial_39, wnList_res_re_rawIn_isZeroFractIn_39) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_39.isInf <= _wnList_res_re_rawIn_out_isInf_T_39 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_39.isZero <= wnList_res_re_rawIn_isZero_39 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_39.sign <= wnList_res_re_rawIn_sign_39 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_78 = bits(wnList_res_re_rawIn_adjustedExp_39, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_79 = cvt(_wnList_res_re_rawIn_out_sExp_T_78) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_39.sExp <= _wnList_res_re_rawIn_out_sExp_T_79 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_117 = eq(wnList_res_re_rawIn_isZero_39, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_118 = mux(wnList_res_re_rawIn_isZeroExpIn_39, wnList_res_re_rawIn_subnormFract_39, wnList_res_re_rawIn_fractIn_39) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_39 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_117) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_119 = cat(wnList_res_re_rawIn_out_sig_hi_39, _wnList_res_re_rawIn_out_sig_T_118) @[Cat.scala 33:92]
    wnList_res_re_rawIn_39.sig <= _wnList_res_re_rawIn_out_sig_T_119 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_313 = bits(wnList_res_re_rawIn_39.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_314 = mux(wnList_res_re_rawIn_39.isZero, UInt<3>("h0"), _wnList_res_re_T_313) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_315 = mux(wnList_res_re_rawIn_39.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_316 = or(_wnList_res_re_T_314, _wnList_res_re_T_315) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_317 = bits(wnList_res_re_rawIn_39.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_318 = bits(wnList_res_re_rawIn_39.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_39 = cat(_wnList_res_re_T_317, _wnList_res_re_T_318) @[Cat.scala 33:92]
    node wnList_res_re_hi_39 = cat(wnList_res_re_rawIn_39.sign, _wnList_res_re_T_316) @[Cat.scala 33:92]
    node _wnList_res_re_T_319 = cat(wnList_res_re_hi_39, wnList_res_re_lo_39) @[Cat.scala 33:92]
    node _wnList_res_re_T_320 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_40 = bits(_wnList_res_re_T_320, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_40 = bits(_wnList_res_re_T_320, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_40 = bits(_wnList_res_re_T_320, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_40 = eq(wnList_res_re_rawIn_expIn_40, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_40 = eq(wnList_res_re_rawIn_fractIn_40, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_720 = bits(wnList_res_re_rawIn_fractIn_40, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_721 = bits(wnList_res_re_rawIn_fractIn_40, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_722 = bits(wnList_res_re_rawIn_fractIn_40, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_723 = bits(wnList_res_re_rawIn_fractIn_40, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_724 = bits(wnList_res_re_rawIn_fractIn_40, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_725 = bits(wnList_res_re_rawIn_fractIn_40, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_726 = bits(wnList_res_re_rawIn_fractIn_40, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_727 = bits(wnList_res_re_rawIn_fractIn_40, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_728 = bits(wnList_res_re_rawIn_fractIn_40, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_729 = bits(wnList_res_re_rawIn_fractIn_40, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_730 = mux(_wnList_res_re_rawIn_normDist_T_721, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_731 = mux(_wnList_res_re_rawIn_normDist_T_722, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_730) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_732 = mux(_wnList_res_re_rawIn_normDist_T_723, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_731) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_733 = mux(_wnList_res_re_rawIn_normDist_T_724, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_732) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_734 = mux(_wnList_res_re_rawIn_normDist_T_725, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_733) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_735 = mux(_wnList_res_re_rawIn_normDist_T_726, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_734) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_736 = mux(_wnList_res_re_rawIn_normDist_T_727, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_735) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_737 = mux(_wnList_res_re_rawIn_normDist_T_728, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_736) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_40 = mux(_wnList_res_re_rawIn_normDist_T_729, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_737) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_80 = dshl(wnList_res_re_rawIn_fractIn_40, wnList_res_re_rawIn_normDist_40) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_81 = bits(_wnList_res_re_rawIn_subnormFract_T_80, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_40 = shl(_wnList_res_re_rawIn_subnormFract_T_81, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_200 = xor(wnList_res_re_rawIn_normDist_40, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_201 = mux(wnList_res_re_rawIn_isZeroExpIn_40, _wnList_res_re_rawIn_adjustedExp_T_200, wnList_res_re_rawIn_expIn_40) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_202 = mux(wnList_res_re_rawIn_isZeroExpIn_40, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_203 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_202) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_204 = add(_wnList_res_re_rawIn_adjustedExp_T_201, _wnList_res_re_rawIn_adjustedExp_T_203) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_40 = tail(_wnList_res_re_rawIn_adjustedExp_T_204, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_40 = and(wnList_res_re_rawIn_isZeroExpIn_40, wnList_res_re_rawIn_isZeroFractIn_40) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_40 = bits(wnList_res_re_rawIn_adjustedExp_40, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_40 = eq(_wnList_res_re_rawIn_isSpecial_T_40, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_40 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_40 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_80 = eq(wnList_res_re_rawIn_isZeroFractIn_40, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_81 = and(wnList_res_re_rawIn_isSpecial_40, _wnList_res_re_rawIn_out_isNaN_T_80) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_40.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_81 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_40 = and(wnList_res_re_rawIn_isSpecial_40, wnList_res_re_rawIn_isZeroFractIn_40) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_40.isInf <= _wnList_res_re_rawIn_out_isInf_T_40 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_40.isZero <= wnList_res_re_rawIn_isZero_40 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_40.sign <= wnList_res_re_rawIn_sign_40 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_80 = bits(wnList_res_re_rawIn_adjustedExp_40, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_81 = cvt(_wnList_res_re_rawIn_out_sExp_T_80) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_40.sExp <= _wnList_res_re_rawIn_out_sExp_T_81 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_120 = eq(wnList_res_re_rawIn_isZero_40, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_121 = mux(wnList_res_re_rawIn_isZeroExpIn_40, wnList_res_re_rawIn_subnormFract_40, wnList_res_re_rawIn_fractIn_40) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_40 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_120) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_122 = cat(wnList_res_re_rawIn_out_sig_hi_40, _wnList_res_re_rawIn_out_sig_T_121) @[Cat.scala 33:92]
    wnList_res_re_rawIn_40.sig <= _wnList_res_re_rawIn_out_sig_T_122 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_321 = bits(wnList_res_re_rawIn_40.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_322 = mux(wnList_res_re_rawIn_40.isZero, UInt<3>("h0"), _wnList_res_re_T_321) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_323 = mux(wnList_res_re_rawIn_40.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_324 = or(_wnList_res_re_T_322, _wnList_res_re_T_323) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_325 = bits(wnList_res_re_rawIn_40.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_326 = bits(wnList_res_re_rawIn_40.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_40 = cat(_wnList_res_re_T_325, _wnList_res_re_T_326) @[Cat.scala 33:92]
    node wnList_res_re_hi_40 = cat(wnList_res_re_rawIn_40.sign, _wnList_res_re_T_324) @[Cat.scala 33:92]
    node _wnList_res_re_T_327 = cat(wnList_res_re_hi_40, wnList_res_re_lo_40) @[Cat.scala 33:92]
    node _wnList_res_re_T_328 = asUInt(asSInt(UInt<16>("hb23e"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_41 = bits(_wnList_res_re_T_328, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_41 = bits(_wnList_res_re_T_328, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_41 = bits(_wnList_res_re_T_328, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_41 = eq(wnList_res_re_rawIn_expIn_41, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_41 = eq(wnList_res_re_rawIn_fractIn_41, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_738 = bits(wnList_res_re_rawIn_fractIn_41, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_739 = bits(wnList_res_re_rawIn_fractIn_41, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_740 = bits(wnList_res_re_rawIn_fractIn_41, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_741 = bits(wnList_res_re_rawIn_fractIn_41, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_742 = bits(wnList_res_re_rawIn_fractIn_41, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_743 = bits(wnList_res_re_rawIn_fractIn_41, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_744 = bits(wnList_res_re_rawIn_fractIn_41, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_745 = bits(wnList_res_re_rawIn_fractIn_41, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_746 = bits(wnList_res_re_rawIn_fractIn_41, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_747 = bits(wnList_res_re_rawIn_fractIn_41, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_748 = mux(_wnList_res_re_rawIn_normDist_T_739, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_749 = mux(_wnList_res_re_rawIn_normDist_T_740, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_748) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_750 = mux(_wnList_res_re_rawIn_normDist_T_741, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_749) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_751 = mux(_wnList_res_re_rawIn_normDist_T_742, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_750) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_752 = mux(_wnList_res_re_rawIn_normDist_T_743, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_751) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_753 = mux(_wnList_res_re_rawIn_normDist_T_744, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_752) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_754 = mux(_wnList_res_re_rawIn_normDist_T_745, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_753) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_755 = mux(_wnList_res_re_rawIn_normDist_T_746, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_754) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_41 = mux(_wnList_res_re_rawIn_normDist_T_747, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_755) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_82 = dshl(wnList_res_re_rawIn_fractIn_41, wnList_res_re_rawIn_normDist_41) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_83 = bits(_wnList_res_re_rawIn_subnormFract_T_82, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_41 = shl(_wnList_res_re_rawIn_subnormFract_T_83, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_205 = xor(wnList_res_re_rawIn_normDist_41, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_206 = mux(wnList_res_re_rawIn_isZeroExpIn_41, _wnList_res_re_rawIn_adjustedExp_T_205, wnList_res_re_rawIn_expIn_41) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_207 = mux(wnList_res_re_rawIn_isZeroExpIn_41, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_208 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_207) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_209 = add(_wnList_res_re_rawIn_adjustedExp_T_206, _wnList_res_re_rawIn_adjustedExp_T_208) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_41 = tail(_wnList_res_re_rawIn_adjustedExp_T_209, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_41 = and(wnList_res_re_rawIn_isZeroExpIn_41, wnList_res_re_rawIn_isZeroFractIn_41) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_41 = bits(wnList_res_re_rawIn_adjustedExp_41, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_41 = eq(_wnList_res_re_rawIn_isSpecial_T_41, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_41 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_41 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_82 = eq(wnList_res_re_rawIn_isZeroFractIn_41, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_83 = and(wnList_res_re_rawIn_isSpecial_41, _wnList_res_re_rawIn_out_isNaN_T_82) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_41.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_83 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_41 = and(wnList_res_re_rawIn_isSpecial_41, wnList_res_re_rawIn_isZeroFractIn_41) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_41.isInf <= _wnList_res_re_rawIn_out_isInf_T_41 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_41.isZero <= wnList_res_re_rawIn_isZero_41 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_41.sign <= wnList_res_re_rawIn_sign_41 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_82 = bits(wnList_res_re_rawIn_adjustedExp_41, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_83 = cvt(_wnList_res_re_rawIn_out_sExp_T_82) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_41.sExp <= _wnList_res_re_rawIn_out_sExp_T_83 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_123 = eq(wnList_res_re_rawIn_isZero_41, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_124 = mux(wnList_res_re_rawIn_isZeroExpIn_41, wnList_res_re_rawIn_subnormFract_41, wnList_res_re_rawIn_fractIn_41) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_41 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_123) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_125 = cat(wnList_res_re_rawIn_out_sig_hi_41, _wnList_res_re_rawIn_out_sig_T_124) @[Cat.scala 33:92]
    wnList_res_re_rawIn_41.sig <= _wnList_res_re_rawIn_out_sig_T_125 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_329 = bits(wnList_res_re_rawIn_41.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_330 = mux(wnList_res_re_rawIn_41.isZero, UInt<3>("h0"), _wnList_res_re_T_329) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_331 = mux(wnList_res_re_rawIn_41.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_332 = or(_wnList_res_re_T_330, _wnList_res_re_T_331) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_333 = bits(wnList_res_re_rawIn_41.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_334 = bits(wnList_res_re_rawIn_41.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_41 = cat(_wnList_res_re_T_333, _wnList_res_re_T_334) @[Cat.scala 33:92]
    node wnList_res_re_hi_41 = cat(wnList_res_re_rawIn_41.sign, _wnList_res_re_T_332) @[Cat.scala 33:92]
    node _wnList_res_re_T_335 = cat(wnList_res_re_hi_41, wnList_res_re_lo_41) @[Cat.scala 33:92]
    node _wnList_res_re_T_336 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_42 = bits(_wnList_res_re_T_336, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_42 = bits(_wnList_res_re_T_336, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_42 = bits(_wnList_res_re_T_336, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_42 = eq(wnList_res_re_rawIn_expIn_42, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_42 = eq(wnList_res_re_rawIn_fractIn_42, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_756 = bits(wnList_res_re_rawIn_fractIn_42, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_757 = bits(wnList_res_re_rawIn_fractIn_42, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_758 = bits(wnList_res_re_rawIn_fractIn_42, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_759 = bits(wnList_res_re_rawIn_fractIn_42, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_760 = bits(wnList_res_re_rawIn_fractIn_42, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_761 = bits(wnList_res_re_rawIn_fractIn_42, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_762 = bits(wnList_res_re_rawIn_fractIn_42, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_763 = bits(wnList_res_re_rawIn_fractIn_42, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_764 = bits(wnList_res_re_rawIn_fractIn_42, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_765 = bits(wnList_res_re_rawIn_fractIn_42, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_766 = mux(_wnList_res_re_rawIn_normDist_T_757, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_767 = mux(_wnList_res_re_rawIn_normDist_T_758, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_766) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_768 = mux(_wnList_res_re_rawIn_normDist_T_759, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_767) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_769 = mux(_wnList_res_re_rawIn_normDist_T_760, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_768) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_770 = mux(_wnList_res_re_rawIn_normDist_T_761, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_769) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_771 = mux(_wnList_res_re_rawIn_normDist_T_762, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_770) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_772 = mux(_wnList_res_re_rawIn_normDist_T_763, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_771) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_773 = mux(_wnList_res_re_rawIn_normDist_T_764, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_772) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_42 = mux(_wnList_res_re_rawIn_normDist_T_765, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_773) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_84 = dshl(wnList_res_re_rawIn_fractIn_42, wnList_res_re_rawIn_normDist_42) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_85 = bits(_wnList_res_re_rawIn_subnormFract_T_84, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_42 = shl(_wnList_res_re_rawIn_subnormFract_T_85, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_210 = xor(wnList_res_re_rawIn_normDist_42, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_211 = mux(wnList_res_re_rawIn_isZeroExpIn_42, _wnList_res_re_rawIn_adjustedExp_T_210, wnList_res_re_rawIn_expIn_42) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_212 = mux(wnList_res_re_rawIn_isZeroExpIn_42, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_213 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_212) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_214 = add(_wnList_res_re_rawIn_adjustedExp_T_211, _wnList_res_re_rawIn_adjustedExp_T_213) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_42 = tail(_wnList_res_re_rawIn_adjustedExp_T_214, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_42 = and(wnList_res_re_rawIn_isZeroExpIn_42, wnList_res_re_rawIn_isZeroFractIn_42) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_42 = bits(wnList_res_re_rawIn_adjustedExp_42, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_42 = eq(_wnList_res_re_rawIn_isSpecial_T_42, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_42 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_42 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_84 = eq(wnList_res_re_rawIn_isZeroFractIn_42, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_85 = and(wnList_res_re_rawIn_isSpecial_42, _wnList_res_re_rawIn_out_isNaN_T_84) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_42.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_85 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_42 = and(wnList_res_re_rawIn_isSpecial_42, wnList_res_re_rawIn_isZeroFractIn_42) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_42.isInf <= _wnList_res_re_rawIn_out_isInf_T_42 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_42.isZero <= wnList_res_re_rawIn_isZero_42 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_42.sign <= wnList_res_re_rawIn_sign_42 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_84 = bits(wnList_res_re_rawIn_adjustedExp_42, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_85 = cvt(_wnList_res_re_rawIn_out_sExp_T_84) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_42.sExp <= _wnList_res_re_rawIn_out_sExp_T_85 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_126 = eq(wnList_res_re_rawIn_isZero_42, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_127 = mux(wnList_res_re_rawIn_isZeroExpIn_42, wnList_res_re_rawIn_subnormFract_42, wnList_res_re_rawIn_fractIn_42) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_42 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_126) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_128 = cat(wnList_res_re_rawIn_out_sig_hi_42, _wnList_res_re_rawIn_out_sig_T_127) @[Cat.scala 33:92]
    wnList_res_re_rawIn_42.sig <= _wnList_res_re_rawIn_out_sig_T_128 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_337 = bits(wnList_res_re_rawIn_42.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_338 = mux(wnList_res_re_rawIn_42.isZero, UInt<3>("h0"), _wnList_res_re_T_337) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_339 = mux(wnList_res_re_rawIn_42.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_340 = or(_wnList_res_re_T_338, _wnList_res_re_T_339) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_341 = bits(wnList_res_re_rawIn_42.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_342 = bits(wnList_res_re_rawIn_42.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_42 = cat(_wnList_res_re_T_341, _wnList_res_re_T_342) @[Cat.scala 33:92]
    node wnList_res_re_hi_42 = cat(wnList_res_re_rawIn_42.sign, _wnList_res_re_T_340) @[Cat.scala 33:92]
    node _wnList_res_re_T_343 = cat(wnList_res_re_hi_42, wnList_res_re_lo_42) @[Cat.scala 33:92]
    node _wnList_res_re_T_344 = asUInt(asSInt(UInt<16>("hb871"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_43 = bits(_wnList_res_re_T_344, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_43 = bits(_wnList_res_re_T_344, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_43 = bits(_wnList_res_re_T_344, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_43 = eq(wnList_res_re_rawIn_expIn_43, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_43 = eq(wnList_res_re_rawIn_fractIn_43, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_774 = bits(wnList_res_re_rawIn_fractIn_43, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_775 = bits(wnList_res_re_rawIn_fractIn_43, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_776 = bits(wnList_res_re_rawIn_fractIn_43, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_777 = bits(wnList_res_re_rawIn_fractIn_43, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_778 = bits(wnList_res_re_rawIn_fractIn_43, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_779 = bits(wnList_res_re_rawIn_fractIn_43, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_780 = bits(wnList_res_re_rawIn_fractIn_43, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_781 = bits(wnList_res_re_rawIn_fractIn_43, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_782 = bits(wnList_res_re_rawIn_fractIn_43, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_783 = bits(wnList_res_re_rawIn_fractIn_43, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_784 = mux(_wnList_res_re_rawIn_normDist_T_775, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_785 = mux(_wnList_res_re_rawIn_normDist_T_776, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_784) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_786 = mux(_wnList_res_re_rawIn_normDist_T_777, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_785) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_787 = mux(_wnList_res_re_rawIn_normDist_T_778, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_786) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_788 = mux(_wnList_res_re_rawIn_normDist_T_779, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_787) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_789 = mux(_wnList_res_re_rawIn_normDist_T_780, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_788) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_790 = mux(_wnList_res_re_rawIn_normDist_T_781, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_789) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_791 = mux(_wnList_res_re_rawIn_normDist_T_782, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_790) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_43 = mux(_wnList_res_re_rawIn_normDist_T_783, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_791) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_86 = dshl(wnList_res_re_rawIn_fractIn_43, wnList_res_re_rawIn_normDist_43) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_87 = bits(_wnList_res_re_rawIn_subnormFract_T_86, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_43 = shl(_wnList_res_re_rawIn_subnormFract_T_87, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_215 = xor(wnList_res_re_rawIn_normDist_43, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_216 = mux(wnList_res_re_rawIn_isZeroExpIn_43, _wnList_res_re_rawIn_adjustedExp_T_215, wnList_res_re_rawIn_expIn_43) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_217 = mux(wnList_res_re_rawIn_isZeroExpIn_43, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_218 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_217) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_219 = add(_wnList_res_re_rawIn_adjustedExp_T_216, _wnList_res_re_rawIn_adjustedExp_T_218) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_43 = tail(_wnList_res_re_rawIn_adjustedExp_T_219, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_43 = and(wnList_res_re_rawIn_isZeroExpIn_43, wnList_res_re_rawIn_isZeroFractIn_43) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_43 = bits(wnList_res_re_rawIn_adjustedExp_43, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_43 = eq(_wnList_res_re_rawIn_isSpecial_T_43, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_43 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_43 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_86 = eq(wnList_res_re_rawIn_isZeroFractIn_43, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_87 = and(wnList_res_re_rawIn_isSpecial_43, _wnList_res_re_rawIn_out_isNaN_T_86) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_43.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_87 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_43 = and(wnList_res_re_rawIn_isSpecial_43, wnList_res_re_rawIn_isZeroFractIn_43) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_43.isInf <= _wnList_res_re_rawIn_out_isInf_T_43 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_43.isZero <= wnList_res_re_rawIn_isZero_43 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_43.sign <= wnList_res_re_rawIn_sign_43 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_86 = bits(wnList_res_re_rawIn_adjustedExp_43, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_87 = cvt(_wnList_res_re_rawIn_out_sExp_T_86) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_43.sExp <= _wnList_res_re_rawIn_out_sExp_T_87 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_129 = eq(wnList_res_re_rawIn_isZero_43, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_130 = mux(wnList_res_re_rawIn_isZeroExpIn_43, wnList_res_re_rawIn_subnormFract_43, wnList_res_re_rawIn_fractIn_43) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_43 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_129) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_131 = cat(wnList_res_re_rawIn_out_sig_hi_43, _wnList_res_re_rawIn_out_sig_T_130) @[Cat.scala 33:92]
    wnList_res_re_rawIn_43.sig <= _wnList_res_re_rawIn_out_sig_T_131 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_345 = bits(wnList_res_re_rawIn_43.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_346 = mux(wnList_res_re_rawIn_43.isZero, UInt<3>("h0"), _wnList_res_re_T_345) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_347 = mux(wnList_res_re_rawIn_43.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_348 = or(_wnList_res_re_T_346, _wnList_res_re_T_347) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_349 = bits(wnList_res_re_rawIn_43.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_350 = bits(wnList_res_re_rawIn_43.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_43 = cat(_wnList_res_re_T_349, _wnList_res_re_T_350) @[Cat.scala 33:92]
    node wnList_res_re_hi_43 = cat(wnList_res_re_rawIn_43.sign, _wnList_res_re_T_348) @[Cat.scala 33:92]
    node _wnList_res_re_T_351 = cat(wnList_res_re_hi_43, wnList_res_re_lo_43) @[Cat.scala 33:92]
    node _wnList_res_re_T_352 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_44 = bits(_wnList_res_re_T_352, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_44 = bits(_wnList_res_re_T_352, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_44 = bits(_wnList_res_re_T_352, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_44 = eq(wnList_res_re_rawIn_expIn_44, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_44 = eq(wnList_res_re_rawIn_fractIn_44, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_792 = bits(wnList_res_re_rawIn_fractIn_44, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_793 = bits(wnList_res_re_rawIn_fractIn_44, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_794 = bits(wnList_res_re_rawIn_fractIn_44, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_795 = bits(wnList_res_re_rawIn_fractIn_44, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_796 = bits(wnList_res_re_rawIn_fractIn_44, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_797 = bits(wnList_res_re_rawIn_fractIn_44, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_798 = bits(wnList_res_re_rawIn_fractIn_44, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_799 = bits(wnList_res_re_rawIn_fractIn_44, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_800 = bits(wnList_res_re_rawIn_fractIn_44, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_801 = bits(wnList_res_re_rawIn_fractIn_44, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_802 = mux(_wnList_res_re_rawIn_normDist_T_793, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_803 = mux(_wnList_res_re_rawIn_normDist_T_794, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_802) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_804 = mux(_wnList_res_re_rawIn_normDist_T_795, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_803) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_805 = mux(_wnList_res_re_rawIn_normDist_T_796, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_804) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_806 = mux(_wnList_res_re_rawIn_normDist_T_797, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_805) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_807 = mux(_wnList_res_re_rawIn_normDist_T_798, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_806) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_808 = mux(_wnList_res_re_rawIn_normDist_T_799, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_807) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_809 = mux(_wnList_res_re_rawIn_normDist_T_800, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_808) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_44 = mux(_wnList_res_re_rawIn_normDist_T_801, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_809) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_88 = dshl(wnList_res_re_rawIn_fractIn_44, wnList_res_re_rawIn_normDist_44) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_89 = bits(_wnList_res_re_rawIn_subnormFract_T_88, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_44 = shl(_wnList_res_re_rawIn_subnormFract_T_89, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_220 = xor(wnList_res_re_rawIn_normDist_44, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_221 = mux(wnList_res_re_rawIn_isZeroExpIn_44, _wnList_res_re_rawIn_adjustedExp_T_220, wnList_res_re_rawIn_expIn_44) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_222 = mux(wnList_res_re_rawIn_isZeroExpIn_44, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_223 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_222) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_224 = add(_wnList_res_re_rawIn_adjustedExp_T_221, _wnList_res_re_rawIn_adjustedExp_T_223) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_44 = tail(_wnList_res_re_rawIn_adjustedExp_T_224, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_44 = and(wnList_res_re_rawIn_isZeroExpIn_44, wnList_res_re_rawIn_isZeroFractIn_44) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_44 = bits(wnList_res_re_rawIn_adjustedExp_44, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_44 = eq(_wnList_res_re_rawIn_isSpecial_T_44, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_44 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_44 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_88 = eq(wnList_res_re_rawIn_isZeroFractIn_44, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_89 = and(wnList_res_re_rawIn_isSpecial_44, _wnList_res_re_rawIn_out_isNaN_T_88) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_44.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_89 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_44 = and(wnList_res_re_rawIn_isSpecial_44, wnList_res_re_rawIn_isZeroFractIn_44) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_44.isInf <= _wnList_res_re_rawIn_out_isInf_T_44 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_44.isZero <= wnList_res_re_rawIn_isZero_44 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_44.sign <= wnList_res_re_rawIn_sign_44 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_88 = bits(wnList_res_re_rawIn_adjustedExp_44, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_89 = cvt(_wnList_res_re_rawIn_out_sExp_T_88) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_44.sExp <= _wnList_res_re_rawIn_out_sExp_T_89 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_132 = eq(wnList_res_re_rawIn_isZero_44, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_133 = mux(wnList_res_re_rawIn_isZeroExpIn_44, wnList_res_re_rawIn_subnormFract_44, wnList_res_re_rawIn_fractIn_44) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_44 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_132) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_134 = cat(wnList_res_re_rawIn_out_sig_hi_44, _wnList_res_re_rawIn_out_sig_T_133) @[Cat.scala 33:92]
    wnList_res_re_rawIn_44.sig <= _wnList_res_re_rawIn_out_sig_T_134 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_353 = bits(wnList_res_re_rawIn_44.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_354 = mux(wnList_res_re_rawIn_44.isZero, UInt<3>("h0"), _wnList_res_re_T_353) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_355 = mux(wnList_res_re_rawIn_44.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_356 = or(_wnList_res_re_T_354, _wnList_res_re_T_355) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_357 = bits(wnList_res_re_rawIn_44.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_358 = bits(wnList_res_re_rawIn_44.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_44 = cat(_wnList_res_re_T_357, _wnList_res_re_T_358) @[Cat.scala 33:92]
    node wnList_res_re_hi_44 = cat(wnList_res_re_rawIn_44.sign, _wnList_res_re_T_356) @[Cat.scala 33:92]
    node _wnList_res_re_T_359 = cat(wnList_res_re_hi_44, wnList_res_re_lo_44) @[Cat.scala 33:92]
    node _wnList_res_re_T_360 = asUInt(asSInt(UInt<16>("hbaa6"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_45 = bits(_wnList_res_re_T_360, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_45 = bits(_wnList_res_re_T_360, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_45 = bits(_wnList_res_re_T_360, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_45 = eq(wnList_res_re_rawIn_expIn_45, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_45 = eq(wnList_res_re_rawIn_fractIn_45, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_810 = bits(wnList_res_re_rawIn_fractIn_45, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_811 = bits(wnList_res_re_rawIn_fractIn_45, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_812 = bits(wnList_res_re_rawIn_fractIn_45, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_813 = bits(wnList_res_re_rawIn_fractIn_45, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_814 = bits(wnList_res_re_rawIn_fractIn_45, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_815 = bits(wnList_res_re_rawIn_fractIn_45, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_816 = bits(wnList_res_re_rawIn_fractIn_45, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_817 = bits(wnList_res_re_rawIn_fractIn_45, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_818 = bits(wnList_res_re_rawIn_fractIn_45, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_819 = bits(wnList_res_re_rawIn_fractIn_45, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_820 = mux(_wnList_res_re_rawIn_normDist_T_811, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_821 = mux(_wnList_res_re_rawIn_normDist_T_812, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_820) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_822 = mux(_wnList_res_re_rawIn_normDist_T_813, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_821) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_823 = mux(_wnList_res_re_rawIn_normDist_T_814, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_822) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_824 = mux(_wnList_res_re_rawIn_normDist_T_815, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_823) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_825 = mux(_wnList_res_re_rawIn_normDist_T_816, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_824) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_826 = mux(_wnList_res_re_rawIn_normDist_T_817, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_825) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_827 = mux(_wnList_res_re_rawIn_normDist_T_818, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_826) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_45 = mux(_wnList_res_re_rawIn_normDist_T_819, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_827) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_90 = dshl(wnList_res_re_rawIn_fractIn_45, wnList_res_re_rawIn_normDist_45) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_91 = bits(_wnList_res_re_rawIn_subnormFract_T_90, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_45 = shl(_wnList_res_re_rawIn_subnormFract_T_91, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_225 = xor(wnList_res_re_rawIn_normDist_45, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_226 = mux(wnList_res_re_rawIn_isZeroExpIn_45, _wnList_res_re_rawIn_adjustedExp_T_225, wnList_res_re_rawIn_expIn_45) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_227 = mux(wnList_res_re_rawIn_isZeroExpIn_45, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_228 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_227) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_229 = add(_wnList_res_re_rawIn_adjustedExp_T_226, _wnList_res_re_rawIn_adjustedExp_T_228) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_45 = tail(_wnList_res_re_rawIn_adjustedExp_T_229, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_45 = and(wnList_res_re_rawIn_isZeroExpIn_45, wnList_res_re_rawIn_isZeroFractIn_45) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_45 = bits(wnList_res_re_rawIn_adjustedExp_45, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_45 = eq(_wnList_res_re_rawIn_isSpecial_T_45, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_45 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_45 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_90 = eq(wnList_res_re_rawIn_isZeroFractIn_45, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_91 = and(wnList_res_re_rawIn_isSpecial_45, _wnList_res_re_rawIn_out_isNaN_T_90) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_45.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_91 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_45 = and(wnList_res_re_rawIn_isSpecial_45, wnList_res_re_rawIn_isZeroFractIn_45) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_45.isInf <= _wnList_res_re_rawIn_out_isInf_T_45 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_45.isZero <= wnList_res_re_rawIn_isZero_45 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_45.sign <= wnList_res_re_rawIn_sign_45 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_90 = bits(wnList_res_re_rawIn_adjustedExp_45, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_91 = cvt(_wnList_res_re_rawIn_out_sExp_T_90) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_45.sExp <= _wnList_res_re_rawIn_out_sExp_T_91 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_135 = eq(wnList_res_re_rawIn_isZero_45, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_136 = mux(wnList_res_re_rawIn_isZeroExpIn_45, wnList_res_re_rawIn_subnormFract_45, wnList_res_re_rawIn_fractIn_45) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_45 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_135) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_137 = cat(wnList_res_re_rawIn_out_sig_hi_45, _wnList_res_re_rawIn_out_sig_T_136) @[Cat.scala 33:92]
    wnList_res_re_rawIn_45.sig <= _wnList_res_re_rawIn_out_sig_T_137 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_361 = bits(wnList_res_re_rawIn_45.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_362 = mux(wnList_res_re_rawIn_45.isZero, UInt<3>("h0"), _wnList_res_re_T_361) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_363 = mux(wnList_res_re_rawIn_45.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_364 = or(_wnList_res_re_T_362, _wnList_res_re_T_363) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_365 = bits(wnList_res_re_rawIn_45.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_366 = bits(wnList_res_re_rawIn_45.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_45 = cat(_wnList_res_re_T_365, _wnList_res_re_T_366) @[Cat.scala 33:92]
    node wnList_res_re_hi_45 = cat(wnList_res_re_rawIn_45.sign, _wnList_res_re_T_364) @[Cat.scala 33:92]
    node _wnList_res_re_T_367 = cat(wnList_res_re_hi_45, wnList_res_re_lo_45) @[Cat.scala 33:92]
    node _wnList_res_re_T_368 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_46 = bits(_wnList_res_re_T_368, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_46 = bits(_wnList_res_re_T_368, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_46 = bits(_wnList_res_re_T_368, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_46 = eq(wnList_res_re_rawIn_expIn_46, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_46 = eq(wnList_res_re_rawIn_fractIn_46, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_828 = bits(wnList_res_re_rawIn_fractIn_46, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_829 = bits(wnList_res_re_rawIn_fractIn_46, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_830 = bits(wnList_res_re_rawIn_fractIn_46, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_831 = bits(wnList_res_re_rawIn_fractIn_46, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_832 = bits(wnList_res_re_rawIn_fractIn_46, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_833 = bits(wnList_res_re_rawIn_fractIn_46, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_834 = bits(wnList_res_re_rawIn_fractIn_46, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_835 = bits(wnList_res_re_rawIn_fractIn_46, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_836 = bits(wnList_res_re_rawIn_fractIn_46, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_837 = bits(wnList_res_re_rawIn_fractIn_46, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_838 = mux(_wnList_res_re_rawIn_normDist_T_829, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_839 = mux(_wnList_res_re_rawIn_normDist_T_830, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_838) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_840 = mux(_wnList_res_re_rawIn_normDist_T_831, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_839) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_841 = mux(_wnList_res_re_rawIn_normDist_T_832, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_840) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_842 = mux(_wnList_res_re_rawIn_normDist_T_833, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_841) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_843 = mux(_wnList_res_re_rawIn_normDist_T_834, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_842) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_844 = mux(_wnList_res_re_rawIn_normDist_T_835, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_843) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_845 = mux(_wnList_res_re_rawIn_normDist_T_836, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_844) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_46 = mux(_wnList_res_re_rawIn_normDist_T_837, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_845) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_92 = dshl(wnList_res_re_rawIn_fractIn_46, wnList_res_re_rawIn_normDist_46) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_93 = bits(_wnList_res_re_rawIn_subnormFract_T_92, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_46 = shl(_wnList_res_re_rawIn_subnormFract_T_93, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_230 = xor(wnList_res_re_rawIn_normDist_46, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_231 = mux(wnList_res_re_rawIn_isZeroExpIn_46, _wnList_res_re_rawIn_adjustedExp_T_230, wnList_res_re_rawIn_expIn_46) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_232 = mux(wnList_res_re_rawIn_isZeroExpIn_46, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_233 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_232) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_234 = add(_wnList_res_re_rawIn_adjustedExp_T_231, _wnList_res_re_rawIn_adjustedExp_T_233) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_46 = tail(_wnList_res_re_rawIn_adjustedExp_T_234, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_46 = and(wnList_res_re_rawIn_isZeroExpIn_46, wnList_res_re_rawIn_isZeroFractIn_46) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_46 = bits(wnList_res_re_rawIn_adjustedExp_46, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_46 = eq(_wnList_res_re_rawIn_isSpecial_T_46, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_46 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_46 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_92 = eq(wnList_res_re_rawIn_isZeroFractIn_46, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_93 = and(wnList_res_re_rawIn_isSpecial_46, _wnList_res_re_rawIn_out_isNaN_T_92) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_46.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_93 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_46 = and(wnList_res_re_rawIn_isSpecial_46, wnList_res_re_rawIn_isZeroFractIn_46) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_46.isInf <= _wnList_res_re_rawIn_out_isInf_T_46 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_46.isZero <= wnList_res_re_rawIn_isZero_46 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_46.sign <= wnList_res_re_rawIn_sign_46 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_92 = bits(wnList_res_re_rawIn_adjustedExp_46, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_93 = cvt(_wnList_res_re_rawIn_out_sExp_T_92) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_46.sExp <= _wnList_res_re_rawIn_out_sExp_T_93 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_138 = eq(wnList_res_re_rawIn_isZero_46, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_139 = mux(wnList_res_re_rawIn_isZeroExpIn_46, wnList_res_re_rawIn_subnormFract_46, wnList_res_re_rawIn_fractIn_46) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_46 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_138) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_140 = cat(wnList_res_re_rawIn_out_sig_hi_46, _wnList_res_re_rawIn_out_sig_T_139) @[Cat.scala 33:92]
    wnList_res_re_rawIn_46.sig <= _wnList_res_re_rawIn_out_sig_T_140 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_369 = bits(wnList_res_re_rawIn_46.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_370 = mux(wnList_res_re_rawIn_46.isZero, UInt<3>("h0"), _wnList_res_re_T_369) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_371 = mux(wnList_res_re_rawIn_46.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_372 = or(_wnList_res_re_T_370, _wnList_res_re_T_371) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_373 = bits(wnList_res_re_rawIn_46.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_374 = bits(wnList_res_re_rawIn_46.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_46 = cat(_wnList_res_re_T_373, _wnList_res_re_T_374) @[Cat.scala 33:92]
    node wnList_res_re_hi_46 = cat(wnList_res_re_rawIn_46.sign, _wnList_res_re_T_372) @[Cat.scala 33:92]
    node _wnList_res_re_T_375 = cat(wnList_res_re_hi_46, wnList_res_re_lo_46) @[Cat.scala 33:92]
    node _wnList_res_re_T_376 = asUInt(asSInt(UInt<16>("hbbd8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_47 = bits(_wnList_res_re_T_376, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_47 = bits(_wnList_res_re_T_376, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_47 = bits(_wnList_res_re_T_376, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_47 = eq(wnList_res_re_rawIn_expIn_47, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_47 = eq(wnList_res_re_rawIn_fractIn_47, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_846 = bits(wnList_res_re_rawIn_fractIn_47, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_847 = bits(wnList_res_re_rawIn_fractIn_47, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_848 = bits(wnList_res_re_rawIn_fractIn_47, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_849 = bits(wnList_res_re_rawIn_fractIn_47, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_850 = bits(wnList_res_re_rawIn_fractIn_47, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_851 = bits(wnList_res_re_rawIn_fractIn_47, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_852 = bits(wnList_res_re_rawIn_fractIn_47, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_853 = bits(wnList_res_re_rawIn_fractIn_47, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_854 = bits(wnList_res_re_rawIn_fractIn_47, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_855 = bits(wnList_res_re_rawIn_fractIn_47, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_856 = mux(_wnList_res_re_rawIn_normDist_T_847, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_857 = mux(_wnList_res_re_rawIn_normDist_T_848, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_856) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_858 = mux(_wnList_res_re_rawIn_normDist_T_849, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_857) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_859 = mux(_wnList_res_re_rawIn_normDist_T_850, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_858) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_860 = mux(_wnList_res_re_rawIn_normDist_T_851, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_859) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_861 = mux(_wnList_res_re_rawIn_normDist_T_852, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_860) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_862 = mux(_wnList_res_re_rawIn_normDist_T_853, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_861) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_863 = mux(_wnList_res_re_rawIn_normDist_T_854, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_862) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_47 = mux(_wnList_res_re_rawIn_normDist_T_855, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_863) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_94 = dshl(wnList_res_re_rawIn_fractIn_47, wnList_res_re_rawIn_normDist_47) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_95 = bits(_wnList_res_re_rawIn_subnormFract_T_94, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_47 = shl(_wnList_res_re_rawIn_subnormFract_T_95, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_235 = xor(wnList_res_re_rawIn_normDist_47, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_236 = mux(wnList_res_re_rawIn_isZeroExpIn_47, _wnList_res_re_rawIn_adjustedExp_T_235, wnList_res_re_rawIn_expIn_47) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_237 = mux(wnList_res_re_rawIn_isZeroExpIn_47, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_238 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_237) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_239 = add(_wnList_res_re_rawIn_adjustedExp_T_236, _wnList_res_re_rawIn_adjustedExp_T_238) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_47 = tail(_wnList_res_re_rawIn_adjustedExp_T_239, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_47 = and(wnList_res_re_rawIn_isZeroExpIn_47, wnList_res_re_rawIn_isZeroFractIn_47) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_47 = bits(wnList_res_re_rawIn_adjustedExp_47, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_47 = eq(_wnList_res_re_rawIn_isSpecial_T_47, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_47 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_47 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_94 = eq(wnList_res_re_rawIn_isZeroFractIn_47, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_95 = and(wnList_res_re_rawIn_isSpecial_47, _wnList_res_re_rawIn_out_isNaN_T_94) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_47.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_95 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_47 = and(wnList_res_re_rawIn_isSpecial_47, wnList_res_re_rawIn_isZeroFractIn_47) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_47.isInf <= _wnList_res_re_rawIn_out_isInf_T_47 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_47.isZero <= wnList_res_re_rawIn_isZero_47 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_47.sign <= wnList_res_re_rawIn_sign_47 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_94 = bits(wnList_res_re_rawIn_adjustedExp_47, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_95 = cvt(_wnList_res_re_rawIn_out_sExp_T_94) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_47.sExp <= _wnList_res_re_rawIn_out_sExp_T_95 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_141 = eq(wnList_res_re_rawIn_isZero_47, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_142 = mux(wnList_res_re_rawIn_isZeroExpIn_47, wnList_res_re_rawIn_subnormFract_47, wnList_res_re_rawIn_fractIn_47) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_47 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_141) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_143 = cat(wnList_res_re_rawIn_out_sig_hi_47, _wnList_res_re_rawIn_out_sig_T_142) @[Cat.scala 33:92]
    wnList_res_re_rawIn_47.sig <= _wnList_res_re_rawIn_out_sig_T_143 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_377 = bits(wnList_res_re_rawIn_47.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_378 = mux(wnList_res_re_rawIn_47.isZero, UInt<3>("h0"), _wnList_res_re_T_377) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_379 = mux(wnList_res_re_rawIn_47.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_380 = or(_wnList_res_re_T_378, _wnList_res_re_T_379) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_381 = bits(wnList_res_re_rawIn_47.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_382 = bits(wnList_res_re_rawIn_47.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_47 = cat(_wnList_res_re_T_381, _wnList_res_re_T_382) @[Cat.scala 33:92]
    node wnList_res_re_hi_47 = cat(wnList_res_re_rawIn_47.sign, _wnList_res_re_T_380) @[Cat.scala 33:92]
    node _wnList_res_re_T_383 = cat(wnList_res_re_hi_47, wnList_res_re_lo_47) @[Cat.scala 33:92]
    wire _wnList_res_re_WIRE_1 : UInt<17>[16] @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[0] <= _wnList_res_re_T_263 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[1] <= _wnList_res_re_T_271 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[2] <= _wnList_res_re_T_279 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[3] <= _wnList_res_re_T_287 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[4] <= _wnList_res_re_T_295 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[5] <= _wnList_res_re_T_303 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[6] <= _wnList_res_re_T_311 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[7] <= _wnList_res_re_T_319 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[8] <= _wnList_res_re_T_327 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[9] <= _wnList_res_re_T_335 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[10] <= _wnList_res_re_T_343 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[11] <= _wnList_res_re_T_351 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[12] <= _wnList_res_re_T_359 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[13] <= _wnList_res_re_T_367 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[14] <= _wnList_res_re_T_375 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_1[15] <= _wnList_res_re_T_383 @[FFT.scala 100:12]
    wnList_0_1.re <= _wnList_res_re_WIRE_1[_wnList_T_3] @[FFT.scala 104:12]
    node _wnList_res_im_T_256 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_32 = bits(_wnList_res_im_T_256, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_32 = bits(_wnList_res_im_T_256, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_32 = bits(_wnList_res_im_T_256, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_32 = eq(wnList_res_im_rawIn_expIn_32, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_32 = eq(wnList_res_im_rawIn_fractIn_32, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_576 = bits(wnList_res_im_rawIn_fractIn_32, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_577 = bits(wnList_res_im_rawIn_fractIn_32, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_578 = bits(wnList_res_im_rawIn_fractIn_32, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_579 = bits(wnList_res_im_rawIn_fractIn_32, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_580 = bits(wnList_res_im_rawIn_fractIn_32, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_581 = bits(wnList_res_im_rawIn_fractIn_32, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_582 = bits(wnList_res_im_rawIn_fractIn_32, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_583 = bits(wnList_res_im_rawIn_fractIn_32, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_584 = bits(wnList_res_im_rawIn_fractIn_32, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_585 = bits(wnList_res_im_rawIn_fractIn_32, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_586 = mux(_wnList_res_im_rawIn_normDist_T_577, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_587 = mux(_wnList_res_im_rawIn_normDist_T_578, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_586) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_588 = mux(_wnList_res_im_rawIn_normDist_T_579, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_587) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_589 = mux(_wnList_res_im_rawIn_normDist_T_580, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_588) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_590 = mux(_wnList_res_im_rawIn_normDist_T_581, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_589) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_591 = mux(_wnList_res_im_rawIn_normDist_T_582, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_590) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_592 = mux(_wnList_res_im_rawIn_normDist_T_583, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_591) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_593 = mux(_wnList_res_im_rawIn_normDist_T_584, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_592) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_32 = mux(_wnList_res_im_rawIn_normDist_T_585, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_593) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_64 = dshl(wnList_res_im_rawIn_fractIn_32, wnList_res_im_rawIn_normDist_32) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_65 = bits(_wnList_res_im_rawIn_subnormFract_T_64, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_32 = shl(_wnList_res_im_rawIn_subnormFract_T_65, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_160 = xor(wnList_res_im_rawIn_normDist_32, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_161 = mux(wnList_res_im_rawIn_isZeroExpIn_32, _wnList_res_im_rawIn_adjustedExp_T_160, wnList_res_im_rawIn_expIn_32) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_162 = mux(wnList_res_im_rawIn_isZeroExpIn_32, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_163 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_162) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_164 = add(_wnList_res_im_rawIn_adjustedExp_T_161, _wnList_res_im_rawIn_adjustedExp_T_163) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_32 = tail(_wnList_res_im_rawIn_adjustedExp_T_164, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_32 = and(wnList_res_im_rawIn_isZeroExpIn_32, wnList_res_im_rawIn_isZeroFractIn_32) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_32 = bits(wnList_res_im_rawIn_adjustedExp_32, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_32 = eq(_wnList_res_im_rawIn_isSpecial_T_32, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_32 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_32 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_64 = eq(wnList_res_im_rawIn_isZeroFractIn_32, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_65 = and(wnList_res_im_rawIn_isSpecial_32, _wnList_res_im_rawIn_out_isNaN_T_64) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_32.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_65 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_32 = and(wnList_res_im_rawIn_isSpecial_32, wnList_res_im_rawIn_isZeroFractIn_32) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_32.isInf <= _wnList_res_im_rawIn_out_isInf_T_32 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_32.isZero <= wnList_res_im_rawIn_isZero_32 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_32.sign <= wnList_res_im_rawIn_sign_32 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_64 = bits(wnList_res_im_rawIn_adjustedExp_32, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_65 = cvt(_wnList_res_im_rawIn_out_sExp_T_64) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_32.sExp <= _wnList_res_im_rawIn_out_sExp_T_65 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_96 = eq(wnList_res_im_rawIn_isZero_32, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_97 = mux(wnList_res_im_rawIn_isZeroExpIn_32, wnList_res_im_rawIn_subnormFract_32, wnList_res_im_rawIn_fractIn_32) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_32 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_96) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_98 = cat(wnList_res_im_rawIn_out_sig_hi_32, _wnList_res_im_rawIn_out_sig_T_97) @[Cat.scala 33:92]
    wnList_res_im_rawIn_32.sig <= _wnList_res_im_rawIn_out_sig_T_98 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_257 = bits(wnList_res_im_rawIn_32.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_258 = mux(wnList_res_im_rawIn_32.isZero, UInt<3>("h0"), _wnList_res_im_T_257) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_259 = mux(wnList_res_im_rawIn_32.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_260 = or(_wnList_res_im_T_258, _wnList_res_im_T_259) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_261 = bits(wnList_res_im_rawIn_32.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_262 = bits(wnList_res_im_rawIn_32.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_32 = cat(_wnList_res_im_T_261, _wnList_res_im_T_262) @[Cat.scala 33:92]
    node wnList_res_im_hi_32 = cat(wnList_res_im_rawIn_32.sign, _wnList_res_im_T_260) @[Cat.scala 33:92]
    node _wnList_res_im_T_263 = cat(wnList_res_im_hi_32, wnList_res_im_lo_32) @[Cat.scala 33:92]
    node _wnList_res_im_T_264 = asUInt(asSInt(UInt<16>("hb23e"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_33 = bits(_wnList_res_im_T_264, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_33 = bits(_wnList_res_im_T_264, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_33 = bits(_wnList_res_im_T_264, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_33 = eq(wnList_res_im_rawIn_expIn_33, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_33 = eq(wnList_res_im_rawIn_fractIn_33, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_594 = bits(wnList_res_im_rawIn_fractIn_33, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_595 = bits(wnList_res_im_rawIn_fractIn_33, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_596 = bits(wnList_res_im_rawIn_fractIn_33, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_597 = bits(wnList_res_im_rawIn_fractIn_33, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_598 = bits(wnList_res_im_rawIn_fractIn_33, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_599 = bits(wnList_res_im_rawIn_fractIn_33, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_600 = bits(wnList_res_im_rawIn_fractIn_33, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_601 = bits(wnList_res_im_rawIn_fractIn_33, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_602 = bits(wnList_res_im_rawIn_fractIn_33, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_603 = bits(wnList_res_im_rawIn_fractIn_33, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_604 = mux(_wnList_res_im_rawIn_normDist_T_595, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_605 = mux(_wnList_res_im_rawIn_normDist_T_596, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_604) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_606 = mux(_wnList_res_im_rawIn_normDist_T_597, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_605) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_607 = mux(_wnList_res_im_rawIn_normDist_T_598, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_606) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_608 = mux(_wnList_res_im_rawIn_normDist_T_599, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_607) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_609 = mux(_wnList_res_im_rawIn_normDist_T_600, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_608) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_610 = mux(_wnList_res_im_rawIn_normDist_T_601, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_609) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_611 = mux(_wnList_res_im_rawIn_normDist_T_602, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_610) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_33 = mux(_wnList_res_im_rawIn_normDist_T_603, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_611) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_66 = dshl(wnList_res_im_rawIn_fractIn_33, wnList_res_im_rawIn_normDist_33) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_67 = bits(_wnList_res_im_rawIn_subnormFract_T_66, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_33 = shl(_wnList_res_im_rawIn_subnormFract_T_67, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_165 = xor(wnList_res_im_rawIn_normDist_33, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_166 = mux(wnList_res_im_rawIn_isZeroExpIn_33, _wnList_res_im_rawIn_adjustedExp_T_165, wnList_res_im_rawIn_expIn_33) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_167 = mux(wnList_res_im_rawIn_isZeroExpIn_33, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_168 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_167) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_169 = add(_wnList_res_im_rawIn_adjustedExp_T_166, _wnList_res_im_rawIn_adjustedExp_T_168) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_33 = tail(_wnList_res_im_rawIn_adjustedExp_T_169, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_33 = and(wnList_res_im_rawIn_isZeroExpIn_33, wnList_res_im_rawIn_isZeroFractIn_33) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_33 = bits(wnList_res_im_rawIn_adjustedExp_33, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_33 = eq(_wnList_res_im_rawIn_isSpecial_T_33, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_33 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_33 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_66 = eq(wnList_res_im_rawIn_isZeroFractIn_33, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_67 = and(wnList_res_im_rawIn_isSpecial_33, _wnList_res_im_rawIn_out_isNaN_T_66) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_33.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_67 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_33 = and(wnList_res_im_rawIn_isSpecial_33, wnList_res_im_rawIn_isZeroFractIn_33) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_33.isInf <= _wnList_res_im_rawIn_out_isInf_T_33 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_33.isZero <= wnList_res_im_rawIn_isZero_33 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_33.sign <= wnList_res_im_rawIn_sign_33 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_66 = bits(wnList_res_im_rawIn_adjustedExp_33, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_67 = cvt(_wnList_res_im_rawIn_out_sExp_T_66) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_33.sExp <= _wnList_res_im_rawIn_out_sExp_T_67 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_99 = eq(wnList_res_im_rawIn_isZero_33, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_100 = mux(wnList_res_im_rawIn_isZeroExpIn_33, wnList_res_im_rawIn_subnormFract_33, wnList_res_im_rawIn_fractIn_33) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_33 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_99) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_101 = cat(wnList_res_im_rawIn_out_sig_hi_33, _wnList_res_im_rawIn_out_sig_T_100) @[Cat.scala 33:92]
    wnList_res_im_rawIn_33.sig <= _wnList_res_im_rawIn_out_sig_T_101 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_265 = bits(wnList_res_im_rawIn_33.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_266 = mux(wnList_res_im_rawIn_33.isZero, UInt<3>("h0"), _wnList_res_im_T_265) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_267 = mux(wnList_res_im_rawIn_33.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_268 = or(_wnList_res_im_T_266, _wnList_res_im_T_267) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_269 = bits(wnList_res_im_rawIn_33.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_270 = bits(wnList_res_im_rawIn_33.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_33 = cat(_wnList_res_im_T_269, _wnList_res_im_T_270) @[Cat.scala 33:92]
    node wnList_res_im_hi_33 = cat(wnList_res_im_rawIn_33.sign, _wnList_res_im_T_268) @[Cat.scala 33:92]
    node _wnList_res_im_T_271 = cat(wnList_res_im_hi_33, wnList_res_im_lo_33) @[Cat.scala 33:92]
    node _wnList_res_im_T_272 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_34 = bits(_wnList_res_im_T_272, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_34 = bits(_wnList_res_im_T_272, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_34 = bits(_wnList_res_im_T_272, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_34 = eq(wnList_res_im_rawIn_expIn_34, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_34 = eq(wnList_res_im_rawIn_fractIn_34, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_612 = bits(wnList_res_im_rawIn_fractIn_34, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_613 = bits(wnList_res_im_rawIn_fractIn_34, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_614 = bits(wnList_res_im_rawIn_fractIn_34, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_615 = bits(wnList_res_im_rawIn_fractIn_34, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_616 = bits(wnList_res_im_rawIn_fractIn_34, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_617 = bits(wnList_res_im_rawIn_fractIn_34, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_618 = bits(wnList_res_im_rawIn_fractIn_34, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_619 = bits(wnList_res_im_rawIn_fractIn_34, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_620 = bits(wnList_res_im_rawIn_fractIn_34, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_621 = bits(wnList_res_im_rawIn_fractIn_34, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_622 = mux(_wnList_res_im_rawIn_normDist_T_613, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_623 = mux(_wnList_res_im_rawIn_normDist_T_614, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_622) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_624 = mux(_wnList_res_im_rawIn_normDist_T_615, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_623) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_625 = mux(_wnList_res_im_rawIn_normDist_T_616, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_624) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_626 = mux(_wnList_res_im_rawIn_normDist_T_617, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_625) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_627 = mux(_wnList_res_im_rawIn_normDist_T_618, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_626) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_628 = mux(_wnList_res_im_rawIn_normDist_T_619, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_627) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_629 = mux(_wnList_res_im_rawIn_normDist_T_620, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_628) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_34 = mux(_wnList_res_im_rawIn_normDist_T_621, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_629) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_68 = dshl(wnList_res_im_rawIn_fractIn_34, wnList_res_im_rawIn_normDist_34) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_69 = bits(_wnList_res_im_rawIn_subnormFract_T_68, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_34 = shl(_wnList_res_im_rawIn_subnormFract_T_69, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_170 = xor(wnList_res_im_rawIn_normDist_34, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_171 = mux(wnList_res_im_rawIn_isZeroExpIn_34, _wnList_res_im_rawIn_adjustedExp_T_170, wnList_res_im_rawIn_expIn_34) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_172 = mux(wnList_res_im_rawIn_isZeroExpIn_34, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_173 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_172) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_174 = add(_wnList_res_im_rawIn_adjustedExp_T_171, _wnList_res_im_rawIn_adjustedExp_T_173) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_34 = tail(_wnList_res_im_rawIn_adjustedExp_T_174, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_34 = and(wnList_res_im_rawIn_isZeroExpIn_34, wnList_res_im_rawIn_isZeroFractIn_34) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_34 = bits(wnList_res_im_rawIn_adjustedExp_34, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_34 = eq(_wnList_res_im_rawIn_isSpecial_T_34, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_34 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_34 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_68 = eq(wnList_res_im_rawIn_isZeroFractIn_34, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_69 = and(wnList_res_im_rawIn_isSpecial_34, _wnList_res_im_rawIn_out_isNaN_T_68) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_34.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_69 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_34 = and(wnList_res_im_rawIn_isSpecial_34, wnList_res_im_rawIn_isZeroFractIn_34) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_34.isInf <= _wnList_res_im_rawIn_out_isInf_T_34 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_34.isZero <= wnList_res_im_rawIn_isZero_34 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_34.sign <= wnList_res_im_rawIn_sign_34 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_68 = bits(wnList_res_im_rawIn_adjustedExp_34, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_69 = cvt(_wnList_res_im_rawIn_out_sExp_T_68) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_34.sExp <= _wnList_res_im_rawIn_out_sExp_T_69 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_102 = eq(wnList_res_im_rawIn_isZero_34, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_103 = mux(wnList_res_im_rawIn_isZeroExpIn_34, wnList_res_im_rawIn_subnormFract_34, wnList_res_im_rawIn_fractIn_34) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_34 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_102) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_104 = cat(wnList_res_im_rawIn_out_sig_hi_34, _wnList_res_im_rawIn_out_sig_T_103) @[Cat.scala 33:92]
    wnList_res_im_rawIn_34.sig <= _wnList_res_im_rawIn_out_sig_T_104 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_273 = bits(wnList_res_im_rawIn_34.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_274 = mux(wnList_res_im_rawIn_34.isZero, UInt<3>("h0"), _wnList_res_im_T_273) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_275 = mux(wnList_res_im_rawIn_34.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_276 = or(_wnList_res_im_T_274, _wnList_res_im_T_275) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_277 = bits(wnList_res_im_rawIn_34.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_278 = bits(wnList_res_im_rawIn_34.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_34 = cat(_wnList_res_im_T_277, _wnList_res_im_T_278) @[Cat.scala 33:92]
    node wnList_res_im_hi_34 = cat(wnList_res_im_rawIn_34.sign, _wnList_res_im_T_276) @[Cat.scala 33:92]
    node _wnList_res_im_T_279 = cat(wnList_res_im_hi_34, wnList_res_im_lo_34) @[Cat.scala 33:92]
    node _wnList_res_im_T_280 = asUInt(asSInt(UInt<16>("hb871"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_35 = bits(_wnList_res_im_T_280, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_35 = bits(_wnList_res_im_T_280, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_35 = bits(_wnList_res_im_T_280, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_35 = eq(wnList_res_im_rawIn_expIn_35, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_35 = eq(wnList_res_im_rawIn_fractIn_35, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_630 = bits(wnList_res_im_rawIn_fractIn_35, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_631 = bits(wnList_res_im_rawIn_fractIn_35, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_632 = bits(wnList_res_im_rawIn_fractIn_35, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_633 = bits(wnList_res_im_rawIn_fractIn_35, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_634 = bits(wnList_res_im_rawIn_fractIn_35, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_635 = bits(wnList_res_im_rawIn_fractIn_35, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_636 = bits(wnList_res_im_rawIn_fractIn_35, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_637 = bits(wnList_res_im_rawIn_fractIn_35, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_638 = bits(wnList_res_im_rawIn_fractIn_35, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_639 = bits(wnList_res_im_rawIn_fractIn_35, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_640 = mux(_wnList_res_im_rawIn_normDist_T_631, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_641 = mux(_wnList_res_im_rawIn_normDist_T_632, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_640) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_642 = mux(_wnList_res_im_rawIn_normDist_T_633, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_641) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_643 = mux(_wnList_res_im_rawIn_normDist_T_634, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_642) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_644 = mux(_wnList_res_im_rawIn_normDist_T_635, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_643) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_645 = mux(_wnList_res_im_rawIn_normDist_T_636, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_644) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_646 = mux(_wnList_res_im_rawIn_normDist_T_637, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_645) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_647 = mux(_wnList_res_im_rawIn_normDist_T_638, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_646) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_35 = mux(_wnList_res_im_rawIn_normDist_T_639, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_647) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_70 = dshl(wnList_res_im_rawIn_fractIn_35, wnList_res_im_rawIn_normDist_35) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_71 = bits(_wnList_res_im_rawIn_subnormFract_T_70, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_35 = shl(_wnList_res_im_rawIn_subnormFract_T_71, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_175 = xor(wnList_res_im_rawIn_normDist_35, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_176 = mux(wnList_res_im_rawIn_isZeroExpIn_35, _wnList_res_im_rawIn_adjustedExp_T_175, wnList_res_im_rawIn_expIn_35) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_177 = mux(wnList_res_im_rawIn_isZeroExpIn_35, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_178 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_177) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_179 = add(_wnList_res_im_rawIn_adjustedExp_T_176, _wnList_res_im_rawIn_adjustedExp_T_178) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_35 = tail(_wnList_res_im_rawIn_adjustedExp_T_179, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_35 = and(wnList_res_im_rawIn_isZeroExpIn_35, wnList_res_im_rawIn_isZeroFractIn_35) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_35 = bits(wnList_res_im_rawIn_adjustedExp_35, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_35 = eq(_wnList_res_im_rawIn_isSpecial_T_35, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_35 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_35 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_70 = eq(wnList_res_im_rawIn_isZeroFractIn_35, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_71 = and(wnList_res_im_rawIn_isSpecial_35, _wnList_res_im_rawIn_out_isNaN_T_70) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_35.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_71 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_35 = and(wnList_res_im_rawIn_isSpecial_35, wnList_res_im_rawIn_isZeroFractIn_35) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_35.isInf <= _wnList_res_im_rawIn_out_isInf_T_35 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_35.isZero <= wnList_res_im_rawIn_isZero_35 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_35.sign <= wnList_res_im_rawIn_sign_35 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_70 = bits(wnList_res_im_rawIn_adjustedExp_35, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_71 = cvt(_wnList_res_im_rawIn_out_sExp_T_70) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_35.sExp <= _wnList_res_im_rawIn_out_sExp_T_71 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_105 = eq(wnList_res_im_rawIn_isZero_35, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_106 = mux(wnList_res_im_rawIn_isZeroExpIn_35, wnList_res_im_rawIn_subnormFract_35, wnList_res_im_rawIn_fractIn_35) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_35 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_105) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_107 = cat(wnList_res_im_rawIn_out_sig_hi_35, _wnList_res_im_rawIn_out_sig_T_106) @[Cat.scala 33:92]
    wnList_res_im_rawIn_35.sig <= _wnList_res_im_rawIn_out_sig_T_107 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_281 = bits(wnList_res_im_rawIn_35.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_282 = mux(wnList_res_im_rawIn_35.isZero, UInt<3>("h0"), _wnList_res_im_T_281) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_283 = mux(wnList_res_im_rawIn_35.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_284 = or(_wnList_res_im_T_282, _wnList_res_im_T_283) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_285 = bits(wnList_res_im_rawIn_35.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_286 = bits(wnList_res_im_rawIn_35.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_35 = cat(_wnList_res_im_T_285, _wnList_res_im_T_286) @[Cat.scala 33:92]
    node wnList_res_im_hi_35 = cat(wnList_res_im_rawIn_35.sign, _wnList_res_im_T_284) @[Cat.scala 33:92]
    node _wnList_res_im_T_287 = cat(wnList_res_im_hi_35, wnList_res_im_lo_35) @[Cat.scala 33:92]
    node _wnList_res_im_T_288 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_36 = bits(_wnList_res_im_T_288, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_36 = bits(_wnList_res_im_T_288, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_36 = bits(_wnList_res_im_T_288, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_36 = eq(wnList_res_im_rawIn_expIn_36, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_36 = eq(wnList_res_im_rawIn_fractIn_36, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_648 = bits(wnList_res_im_rawIn_fractIn_36, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_649 = bits(wnList_res_im_rawIn_fractIn_36, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_650 = bits(wnList_res_im_rawIn_fractIn_36, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_651 = bits(wnList_res_im_rawIn_fractIn_36, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_652 = bits(wnList_res_im_rawIn_fractIn_36, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_653 = bits(wnList_res_im_rawIn_fractIn_36, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_654 = bits(wnList_res_im_rawIn_fractIn_36, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_655 = bits(wnList_res_im_rawIn_fractIn_36, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_656 = bits(wnList_res_im_rawIn_fractIn_36, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_657 = bits(wnList_res_im_rawIn_fractIn_36, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_658 = mux(_wnList_res_im_rawIn_normDist_T_649, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_659 = mux(_wnList_res_im_rawIn_normDist_T_650, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_658) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_660 = mux(_wnList_res_im_rawIn_normDist_T_651, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_659) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_661 = mux(_wnList_res_im_rawIn_normDist_T_652, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_660) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_662 = mux(_wnList_res_im_rawIn_normDist_T_653, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_661) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_663 = mux(_wnList_res_im_rawIn_normDist_T_654, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_662) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_664 = mux(_wnList_res_im_rawIn_normDist_T_655, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_663) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_665 = mux(_wnList_res_im_rawIn_normDist_T_656, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_664) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_36 = mux(_wnList_res_im_rawIn_normDist_T_657, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_665) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_72 = dshl(wnList_res_im_rawIn_fractIn_36, wnList_res_im_rawIn_normDist_36) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_73 = bits(_wnList_res_im_rawIn_subnormFract_T_72, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_36 = shl(_wnList_res_im_rawIn_subnormFract_T_73, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_180 = xor(wnList_res_im_rawIn_normDist_36, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_181 = mux(wnList_res_im_rawIn_isZeroExpIn_36, _wnList_res_im_rawIn_adjustedExp_T_180, wnList_res_im_rawIn_expIn_36) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_182 = mux(wnList_res_im_rawIn_isZeroExpIn_36, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_183 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_182) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_184 = add(_wnList_res_im_rawIn_adjustedExp_T_181, _wnList_res_im_rawIn_adjustedExp_T_183) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_36 = tail(_wnList_res_im_rawIn_adjustedExp_T_184, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_36 = and(wnList_res_im_rawIn_isZeroExpIn_36, wnList_res_im_rawIn_isZeroFractIn_36) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_36 = bits(wnList_res_im_rawIn_adjustedExp_36, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_36 = eq(_wnList_res_im_rawIn_isSpecial_T_36, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_36 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_36 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_72 = eq(wnList_res_im_rawIn_isZeroFractIn_36, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_73 = and(wnList_res_im_rawIn_isSpecial_36, _wnList_res_im_rawIn_out_isNaN_T_72) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_36.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_73 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_36 = and(wnList_res_im_rawIn_isSpecial_36, wnList_res_im_rawIn_isZeroFractIn_36) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_36.isInf <= _wnList_res_im_rawIn_out_isInf_T_36 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_36.isZero <= wnList_res_im_rawIn_isZero_36 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_36.sign <= wnList_res_im_rawIn_sign_36 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_72 = bits(wnList_res_im_rawIn_adjustedExp_36, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_73 = cvt(_wnList_res_im_rawIn_out_sExp_T_72) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_36.sExp <= _wnList_res_im_rawIn_out_sExp_T_73 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_108 = eq(wnList_res_im_rawIn_isZero_36, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_109 = mux(wnList_res_im_rawIn_isZeroExpIn_36, wnList_res_im_rawIn_subnormFract_36, wnList_res_im_rawIn_fractIn_36) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_36 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_108) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_110 = cat(wnList_res_im_rawIn_out_sig_hi_36, _wnList_res_im_rawIn_out_sig_T_109) @[Cat.scala 33:92]
    wnList_res_im_rawIn_36.sig <= _wnList_res_im_rawIn_out_sig_T_110 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_289 = bits(wnList_res_im_rawIn_36.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_290 = mux(wnList_res_im_rawIn_36.isZero, UInt<3>("h0"), _wnList_res_im_T_289) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_291 = mux(wnList_res_im_rawIn_36.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_292 = or(_wnList_res_im_T_290, _wnList_res_im_T_291) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_293 = bits(wnList_res_im_rawIn_36.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_294 = bits(wnList_res_im_rawIn_36.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_36 = cat(_wnList_res_im_T_293, _wnList_res_im_T_294) @[Cat.scala 33:92]
    node wnList_res_im_hi_36 = cat(wnList_res_im_rawIn_36.sign, _wnList_res_im_T_292) @[Cat.scala 33:92]
    node _wnList_res_im_T_295 = cat(wnList_res_im_hi_36, wnList_res_im_lo_36) @[Cat.scala 33:92]
    node _wnList_res_im_T_296 = asUInt(asSInt(UInt<16>("hbaa6"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_37 = bits(_wnList_res_im_T_296, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_37 = bits(_wnList_res_im_T_296, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_37 = bits(_wnList_res_im_T_296, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_37 = eq(wnList_res_im_rawIn_expIn_37, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_37 = eq(wnList_res_im_rawIn_fractIn_37, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_666 = bits(wnList_res_im_rawIn_fractIn_37, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_667 = bits(wnList_res_im_rawIn_fractIn_37, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_668 = bits(wnList_res_im_rawIn_fractIn_37, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_669 = bits(wnList_res_im_rawIn_fractIn_37, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_670 = bits(wnList_res_im_rawIn_fractIn_37, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_671 = bits(wnList_res_im_rawIn_fractIn_37, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_672 = bits(wnList_res_im_rawIn_fractIn_37, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_673 = bits(wnList_res_im_rawIn_fractIn_37, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_674 = bits(wnList_res_im_rawIn_fractIn_37, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_675 = bits(wnList_res_im_rawIn_fractIn_37, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_676 = mux(_wnList_res_im_rawIn_normDist_T_667, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_677 = mux(_wnList_res_im_rawIn_normDist_T_668, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_676) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_678 = mux(_wnList_res_im_rawIn_normDist_T_669, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_677) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_679 = mux(_wnList_res_im_rawIn_normDist_T_670, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_678) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_680 = mux(_wnList_res_im_rawIn_normDist_T_671, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_679) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_681 = mux(_wnList_res_im_rawIn_normDist_T_672, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_680) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_682 = mux(_wnList_res_im_rawIn_normDist_T_673, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_681) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_683 = mux(_wnList_res_im_rawIn_normDist_T_674, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_682) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_37 = mux(_wnList_res_im_rawIn_normDist_T_675, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_683) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_74 = dshl(wnList_res_im_rawIn_fractIn_37, wnList_res_im_rawIn_normDist_37) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_75 = bits(_wnList_res_im_rawIn_subnormFract_T_74, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_37 = shl(_wnList_res_im_rawIn_subnormFract_T_75, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_185 = xor(wnList_res_im_rawIn_normDist_37, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_186 = mux(wnList_res_im_rawIn_isZeroExpIn_37, _wnList_res_im_rawIn_adjustedExp_T_185, wnList_res_im_rawIn_expIn_37) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_187 = mux(wnList_res_im_rawIn_isZeroExpIn_37, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_188 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_187) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_189 = add(_wnList_res_im_rawIn_adjustedExp_T_186, _wnList_res_im_rawIn_adjustedExp_T_188) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_37 = tail(_wnList_res_im_rawIn_adjustedExp_T_189, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_37 = and(wnList_res_im_rawIn_isZeroExpIn_37, wnList_res_im_rawIn_isZeroFractIn_37) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_37 = bits(wnList_res_im_rawIn_adjustedExp_37, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_37 = eq(_wnList_res_im_rawIn_isSpecial_T_37, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_37 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_37 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_74 = eq(wnList_res_im_rawIn_isZeroFractIn_37, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_75 = and(wnList_res_im_rawIn_isSpecial_37, _wnList_res_im_rawIn_out_isNaN_T_74) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_37.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_75 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_37 = and(wnList_res_im_rawIn_isSpecial_37, wnList_res_im_rawIn_isZeroFractIn_37) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_37.isInf <= _wnList_res_im_rawIn_out_isInf_T_37 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_37.isZero <= wnList_res_im_rawIn_isZero_37 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_37.sign <= wnList_res_im_rawIn_sign_37 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_74 = bits(wnList_res_im_rawIn_adjustedExp_37, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_75 = cvt(_wnList_res_im_rawIn_out_sExp_T_74) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_37.sExp <= _wnList_res_im_rawIn_out_sExp_T_75 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_111 = eq(wnList_res_im_rawIn_isZero_37, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_112 = mux(wnList_res_im_rawIn_isZeroExpIn_37, wnList_res_im_rawIn_subnormFract_37, wnList_res_im_rawIn_fractIn_37) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_37 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_111) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_113 = cat(wnList_res_im_rawIn_out_sig_hi_37, _wnList_res_im_rawIn_out_sig_T_112) @[Cat.scala 33:92]
    wnList_res_im_rawIn_37.sig <= _wnList_res_im_rawIn_out_sig_T_113 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_297 = bits(wnList_res_im_rawIn_37.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_298 = mux(wnList_res_im_rawIn_37.isZero, UInt<3>("h0"), _wnList_res_im_T_297) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_299 = mux(wnList_res_im_rawIn_37.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_300 = or(_wnList_res_im_T_298, _wnList_res_im_T_299) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_301 = bits(wnList_res_im_rawIn_37.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_302 = bits(wnList_res_im_rawIn_37.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_37 = cat(_wnList_res_im_T_301, _wnList_res_im_T_302) @[Cat.scala 33:92]
    node wnList_res_im_hi_37 = cat(wnList_res_im_rawIn_37.sign, _wnList_res_im_T_300) @[Cat.scala 33:92]
    node _wnList_res_im_T_303 = cat(wnList_res_im_hi_37, wnList_res_im_lo_37) @[Cat.scala 33:92]
    node _wnList_res_im_T_304 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_38 = bits(_wnList_res_im_T_304, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_38 = bits(_wnList_res_im_T_304, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_38 = bits(_wnList_res_im_T_304, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_38 = eq(wnList_res_im_rawIn_expIn_38, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_38 = eq(wnList_res_im_rawIn_fractIn_38, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_684 = bits(wnList_res_im_rawIn_fractIn_38, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_685 = bits(wnList_res_im_rawIn_fractIn_38, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_686 = bits(wnList_res_im_rawIn_fractIn_38, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_687 = bits(wnList_res_im_rawIn_fractIn_38, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_688 = bits(wnList_res_im_rawIn_fractIn_38, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_689 = bits(wnList_res_im_rawIn_fractIn_38, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_690 = bits(wnList_res_im_rawIn_fractIn_38, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_691 = bits(wnList_res_im_rawIn_fractIn_38, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_692 = bits(wnList_res_im_rawIn_fractIn_38, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_693 = bits(wnList_res_im_rawIn_fractIn_38, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_694 = mux(_wnList_res_im_rawIn_normDist_T_685, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_695 = mux(_wnList_res_im_rawIn_normDist_T_686, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_694) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_696 = mux(_wnList_res_im_rawIn_normDist_T_687, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_695) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_697 = mux(_wnList_res_im_rawIn_normDist_T_688, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_696) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_698 = mux(_wnList_res_im_rawIn_normDist_T_689, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_697) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_699 = mux(_wnList_res_im_rawIn_normDist_T_690, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_698) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_700 = mux(_wnList_res_im_rawIn_normDist_T_691, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_699) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_701 = mux(_wnList_res_im_rawIn_normDist_T_692, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_700) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_38 = mux(_wnList_res_im_rawIn_normDist_T_693, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_701) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_76 = dshl(wnList_res_im_rawIn_fractIn_38, wnList_res_im_rawIn_normDist_38) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_77 = bits(_wnList_res_im_rawIn_subnormFract_T_76, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_38 = shl(_wnList_res_im_rawIn_subnormFract_T_77, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_190 = xor(wnList_res_im_rawIn_normDist_38, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_191 = mux(wnList_res_im_rawIn_isZeroExpIn_38, _wnList_res_im_rawIn_adjustedExp_T_190, wnList_res_im_rawIn_expIn_38) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_192 = mux(wnList_res_im_rawIn_isZeroExpIn_38, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_193 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_192) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_194 = add(_wnList_res_im_rawIn_adjustedExp_T_191, _wnList_res_im_rawIn_adjustedExp_T_193) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_38 = tail(_wnList_res_im_rawIn_adjustedExp_T_194, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_38 = and(wnList_res_im_rawIn_isZeroExpIn_38, wnList_res_im_rawIn_isZeroFractIn_38) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_38 = bits(wnList_res_im_rawIn_adjustedExp_38, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_38 = eq(_wnList_res_im_rawIn_isSpecial_T_38, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_38 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_38 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_76 = eq(wnList_res_im_rawIn_isZeroFractIn_38, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_77 = and(wnList_res_im_rawIn_isSpecial_38, _wnList_res_im_rawIn_out_isNaN_T_76) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_38.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_77 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_38 = and(wnList_res_im_rawIn_isSpecial_38, wnList_res_im_rawIn_isZeroFractIn_38) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_38.isInf <= _wnList_res_im_rawIn_out_isInf_T_38 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_38.isZero <= wnList_res_im_rawIn_isZero_38 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_38.sign <= wnList_res_im_rawIn_sign_38 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_76 = bits(wnList_res_im_rawIn_adjustedExp_38, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_77 = cvt(_wnList_res_im_rawIn_out_sExp_T_76) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_38.sExp <= _wnList_res_im_rawIn_out_sExp_T_77 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_114 = eq(wnList_res_im_rawIn_isZero_38, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_115 = mux(wnList_res_im_rawIn_isZeroExpIn_38, wnList_res_im_rawIn_subnormFract_38, wnList_res_im_rawIn_fractIn_38) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_38 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_114) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_116 = cat(wnList_res_im_rawIn_out_sig_hi_38, _wnList_res_im_rawIn_out_sig_T_115) @[Cat.scala 33:92]
    wnList_res_im_rawIn_38.sig <= _wnList_res_im_rawIn_out_sig_T_116 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_305 = bits(wnList_res_im_rawIn_38.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_306 = mux(wnList_res_im_rawIn_38.isZero, UInt<3>("h0"), _wnList_res_im_T_305) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_307 = mux(wnList_res_im_rawIn_38.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_308 = or(_wnList_res_im_T_306, _wnList_res_im_T_307) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_309 = bits(wnList_res_im_rawIn_38.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_310 = bits(wnList_res_im_rawIn_38.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_38 = cat(_wnList_res_im_T_309, _wnList_res_im_T_310) @[Cat.scala 33:92]
    node wnList_res_im_hi_38 = cat(wnList_res_im_rawIn_38.sign, _wnList_res_im_T_308) @[Cat.scala 33:92]
    node _wnList_res_im_T_311 = cat(wnList_res_im_hi_38, wnList_res_im_lo_38) @[Cat.scala 33:92]
    node _wnList_res_im_T_312 = asUInt(asSInt(UInt<16>("hbbd8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_39 = bits(_wnList_res_im_T_312, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_39 = bits(_wnList_res_im_T_312, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_39 = bits(_wnList_res_im_T_312, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_39 = eq(wnList_res_im_rawIn_expIn_39, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_39 = eq(wnList_res_im_rawIn_fractIn_39, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_702 = bits(wnList_res_im_rawIn_fractIn_39, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_703 = bits(wnList_res_im_rawIn_fractIn_39, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_704 = bits(wnList_res_im_rawIn_fractIn_39, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_705 = bits(wnList_res_im_rawIn_fractIn_39, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_706 = bits(wnList_res_im_rawIn_fractIn_39, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_707 = bits(wnList_res_im_rawIn_fractIn_39, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_708 = bits(wnList_res_im_rawIn_fractIn_39, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_709 = bits(wnList_res_im_rawIn_fractIn_39, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_710 = bits(wnList_res_im_rawIn_fractIn_39, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_711 = bits(wnList_res_im_rawIn_fractIn_39, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_712 = mux(_wnList_res_im_rawIn_normDist_T_703, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_713 = mux(_wnList_res_im_rawIn_normDist_T_704, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_712) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_714 = mux(_wnList_res_im_rawIn_normDist_T_705, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_713) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_715 = mux(_wnList_res_im_rawIn_normDist_T_706, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_714) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_716 = mux(_wnList_res_im_rawIn_normDist_T_707, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_715) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_717 = mux(_wnList_res_im_rawIn_normDist_T_708, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_716) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_718 = mux(_wnList_res_im_rawIn_normDist_T_709, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_717) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_719 = mux(_wnList_res_im_rawIn_normDist_T_710, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_718) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_39 = mux(_wnList_res_im_rawIn_normDist_T_711, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_719) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_78 = dshl(wnList_res_im_rawIn_fractIn_39, wnList_res_im_rawIn_normDist_39) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_79 = bits(_wnList_res_im_rawIn_subnormFract_T_78, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_39 = shl(_wnList_res_im_rawIn_subnormFract_T_79, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_195 = xor(wnList_res_im_rawIn_normDist_39, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_196 = mux(wnList_res_im_rawIn_isZeroExpIn_39, _wnList_res_im_rawIn_adjustedExp_T_195, wnList_res_im_rawIn_expIn_39) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_197 = mux(wnList_res_im_rawIn_isZeroExpIn_39, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_198 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_197) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_199 = add(_wnList_res_im_rawIn_adjustedExp_T_196, _wnList_res_im_rawIn_adjustedExp_T_198) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_39 = tail(_wnList_res_im_rawIn_adjustedExp_T_199, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_39 = and(wnList_res_im_rawIn_isZeroExpIn_39, wnList_res_im_rawIn_isZeroFractIn_39) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_39 = bits(wnList_res_im_rawIn_adjustedExp_39, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_39 = eq(_wnList_res_im_rawIn_isSpecial_T_39, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_39 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_39 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_78 = eq(wnList_res_im_rawIn_isZeroFractIn_39, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_79 = and(wnList_res_im_rawIn_isSpecial_39, _wnList_res_im_rawIn_out_isNaN_T_78) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_39.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_79 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_39 = and(wnList_res_im_rawIn_isSpecial_39, wnList_res_im_rawIn_isZeroFractIn_39) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_39.isInf <= _wnList_res_im_rawIn_out_isInf_T_39 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_39.isZero <= wnList_res_im_rawIn_isZero_39 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_39.sign <= wnList_res_im_rawIn_sign_39 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_78 = bits(wnList_res_im_rawIn_adjustedExp_39, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_79 = cvt(_wnList_res_im_rawIn_out_sExp_T_78) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_39.sExp <= _wnList_res_im_rawIn_out_sExp_T_79 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_117 = eq(wnList_res_im_rawIn_isZero_39, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_118 = mux(wnList_res_im_rawIn_isZeroExpIn_39, wnList_res_im_rawIn_subnormFract_39, wnList_res_im_rawIn_fractIn_39) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_39 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_117) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_119 = cat(wnList_res_im_rawIn_out_sig_hi_39, _wnList_res_im_rawIn_out_sig_T_118) @[Cat.scala 33:92]
    wnList_res_im_rawIn_39.sig <= _wnList_res_im_rawIn_out_sig_T_119 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_313 = bits(wnList_res_im_rawIn_39.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_314 = mux(wnList_res_im_rawIn_39.isZero, UInt<3>("h0"), _wnList_res_im_T_313) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_315 = mux(wnList_res_im_rawIn_39.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_316 = or(_wnList_res_im_T_314, _wnList_res_im_T_315) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_317 = bits(wnList_res_im_rawIn_39.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_318 = bits(wnList_res_im_rawIn_39.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_39 = cat(_wnList_res_im_T_317, _wnList_res_im_T_318) @[Cat.scala 33:92]
    node wnList_res_im_hi_39 = cat(wnList_res_im_rawIn_39.sign, _wnList_res_im_T_316) @[Cat.scala 33:92]
    node _wnList_res_im_T_319 = cat(wnList_res_im_hi_39, wnList_res_im_lo_39) @[Cat.scala 33:92]
    node _wnList_res_im_T_320 = asUInt(asSInt(UInt<16>("hbc00"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_40 = bits(_wnList_res_im_T_320, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_40 = bits(_wnList_res_im_T_320, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_40 = bits(_wnList_res_im_T_320, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_40 = eq(wnList_res_im_rawIn_expIn_40, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_40 = eq(wnList_res_im_rawIn_fractIn_40, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_720 = bits(wnList_res_im_rawIn_fractIn_40, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_721 = bits(wnList_res_im_rawIn_fractIn_40, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_722 = bits(wnList_res_im_rawIn_fractIn_40, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_723 = bits(wnList_res_im_rawIn_fractIn_40, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_724 = bits(wnList_res_im_rawIn_fractIn_40, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_725 = bits(wnList_res_im_rawIn_fractIn_40, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_726 = bits(wnList_res_im_rawIn_fractIn_40, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_727 = bits(wnList_res_im_rawIn_fractIn_40, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_728 = bits(wnList_res_im_rawIn_fractIn_40, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_729 = bits(wnList_res_im_rawIn_fractIn_40, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_730 = mux(_wnList_res_im_rawIn_normDist_T_721, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_731 = mux(_wnList_res_im_rawIn_normDist_T_722, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_730) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_732 = mux(_wnList_res_im_rawIn_normDist_T_723, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_731) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_733 = mux(_wnList_res_im_rawIn_normDist_T_724, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_732) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_734 = mux(_wnList_res_im_rawIn_normDist_T_725, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_733) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_735 = mux(_wnList_res_im_rawIn_normDist_T_726, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_734) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_736 = mux(_wnList_res_im_rawIn_normDist_T_727, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_735) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_737 = mux(_wnList_res_im_rawIn_normDist_T_728, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_736) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_40 = mux(_wnList_res_im_rawIn_normDist_T_729, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_737) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_80 = dshl(wnList_res_im_rawIn_fractIn_40, wnList_res_im_rawIn_normDist_40) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_81 = bits(_wnList_res_im_rawIn_subnormFract_T_80, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_40 = shl(_wnList_res_im_rawIn_subnormFract_T_81, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_200 = xor(wnList_res_im_rawIn_normDist_40, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_201 = mux(wnList_res_im_rawIn_isZeroExpIn_40, _wnList_res_im_rawIn_adjustedExp_T_200, wnList_res_im_rawIn_expIn_40) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_202 = mux(wnList_res_im_rawIn_isZeroExpIn_40, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_203 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_202) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_204 = add(_wnList_res_im_rawIn_adjustedExp_T_201, _wnList_res_im_rawIn_adjustedExp_T_203) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_40 = tail(_wnList_res_im_rawIn_adjustedExp_T_204, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_40 = and(wnList_res_im_rawIn_isZeroExpIn_40, wnList_res_im_rawIn_isZeroFractIn_40) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_40 = bits(wnList_res_im_rawIn_adjustedExp_40, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_40 = eq(_wnList_res_im_rawIn_isSpecial_T_40, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_40 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_40 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_80 = eq(wnList_res_im_rawIn_isZeroFractIn_40, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_81 = and(wnList_res_im_rawIn_isSpecial_40, _wnList_res_im_rawIn_out_isNaN_T_80) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_40.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_81 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_40 = and(wnList_res_im_rawIn_isSpecial_40, wnList_res_im_rawIn_isZeroFractIn_40) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_40.isInf <= _wnList_res_im_rawIn_out_isInf_T_40 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_40.isZero <= wnList_res_im_rawIn_isZero_40 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_40.sign <= wnList_res_im_rawIn_sign_40 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_80 = bits(wnList_res_im_rawIn_adjustedExp_40, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_81 = cvt(_wnList_res_im_rawIn_out_sExp_T_80) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_40.sExp <= _wnList_res_im_rawIn_out_sExp_T_81 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_120 = eq(wnList_res_im_rawIn_isZero_40, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_121 = mux(wnList_res_im_rawIn_isZeroExpIn_40, wnList_res_im_rawIn_subnormFract_40, wnList_res_im_rawIn_fractIn_40) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_40 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_120) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_122 = cat(wnList_res_im_rawIn_out_sig_hi_40, _wnList_res_im_rawIn_out_sig_T_121) @[Cat.scala 33:92]
    wnList_res_im_rawIn_40.sig <= _wnList_res_im_rawIn_out_sig_T_122 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_321 = bits(wnList_res_im_rawIn_40.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_322 = mux(wnList_res_im_rawIn_40.isZero, UInt<3>("h0"), _wnList_res_im_T_321) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_323 = mux(wnList_res_im_rawIn_40.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_324 = or(_wnList_res_im_T_322, _wnList_res_im_T_323) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_325 = bits(wnList_res_im_rawIn_40.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_326 = bits(wnList_res_im_rawIn_40.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_40 = cat(_wnList_res_im_T_325, _wnList_res_im_T_326) @[Cat.scala 33:92]
    node wnList_res_im_hi_40 = cat(wnList_res_im_rawIn_40.sign, _wnList_res_im_T_324) @[Cat.scala 33:92]
    node _wnList_res_im_T_327 = cat(wnList_res_im_hi_40, wnList_res_im_lo_40) @[Cat.scala 33:92]
    node _wnList_res_im_T_328 = asUInt(asSInt(UInt<16>("hbbd8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_41 = bits(_wnList_res_im_T_328, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_41 = bits(_wnList_res_im_T_328, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_41 = bits(_wnList_res_im_T_328, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_41 = eq(wnList_res_im_rawIn_expIn_41, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_41 = eq(wnList_res_im_rawIn_fractIn_41, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_738 = bits(wnList_res_im_rawIn_fractIn_41, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_739 = bits(wnList_res_im_rawIn_fractIn_41, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_740 = bits(wnList_res_im_rawIn_fractIn_41, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_741 = bits(wnList_res_im_rawIn_fractIn_41, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_742 = bits(wnList_res_im_rawIn_fractIn_41, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_743 = bits(wnList_res_im_rawIn_fractIn_41, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_744 = bits(wnList_res_im_rawIn_fractIn_41, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_745 = bits(wnList_res_im_rawIn_fractIn_41, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_746 = bits(wnList_res_im_rawIn_fractIn_41, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_747 = bits(wnList_res_im_rawIn_fractIn_41, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_748 = mux(_wnList_res_im_rawIn_normDist_T_739, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_749 = mux(_wnList_res_im_rawIn_normDist_T_740, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_748) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_750 = mux(_wnList_res_im_rawIn_normDist_T_741, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_749) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_751 = mux(_wnList_res_im_rawIn_normDist_T_742, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_750) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_752 = mux(_wnList_res_im_rawIn_normDist_T_743, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_751) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_753 = mux(_wnList_res_im_rawIn_normDist_T_744, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_752) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_754 = mux(_wnList_res_im_rawIn_normDist_T_745, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_753) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_755 = mux(_wnList_res_im_rawIn_normDist_T_746, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_754) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_41 = mux(_wnList_res_im_rawIn_normDist_T_747, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_755) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_82 = dshl(wnList_res_im_rawIn_fractIn_41, wnList_res_im_rawIn_normDist_41) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_83 = bits(_wnList_res_im_rawIn_subnormFract_T_82, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_41 = shl(_wnList_res_im_rawIn_subnormFract_T_83, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_205 = xor(wnList_res_im_rawIn_normDist_41, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_206 = mux(wnList_res_im_rawIn_isZeroExpIn_41, _wnList_res_im_rawIn_adjustedExp_T_205, wnList_res_im_rawIn_expIn_41) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_207 = mux(wnList_res_im_rawIn_isZeroExpIn_41, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_208 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_207) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_209 = add(_wnList_res_im_rawIn_adjustedExp_T_206, _wnList_res_im_rawIn_adjustedExp_T_208) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_41 = tail(_wnList_res_im_rawIn_adjustedExp_T_209, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_41 = and(wnList_res_im_rawIn_isZeroExpIn_41, wnList_res_im_rawIn_isZeroFractIn_41) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_41 = bits(wnList_res_im_rawIn_adjustedExp_41, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_41 = eq(_wnList_res_im_rawIn_isSpecial_T_41, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_41 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_41 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_82 = eq(wnList_res_im_rawIn_isZeroFractIn_41, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_83 = and(wnList_res_im_rawIn_isSpecial_41, _wnList_res_im_rawIn_out_isNaN_T_82) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_41.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_83 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_41 = and(wnList_res_im_rawIn_isSpecial_41, wnList_res_im_rawIn_isZeroFractIn_41) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_41.isInf <= _wnList_res_im_rawIn_out_isInf_T_41 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_41.isZero <= wnList_res_im_rawIn_isZero_41 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_41.sign <= wnList_res_im_rawIn_sign_41 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_82 = bits(wnList_res_im_rawIn_adjustedExp_41, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_83 = cvt(_wnList_res_im_rawIn_out_sExp_T_82) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_41.sExp <= _wnList_res_im_rawIn_out_sExp_T_83 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_123 = eq(wnList_res_im_rawIn_isZero_41, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_124 = mux(wnList_res_im_rawIn_isZeroExpIn_41, wnList_res_im_rawIn_subnormFract_41, wnList_res_im_rawIn_fractIn_41) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_41 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_123) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_125 = cat(wnList_res_im_rawIn_out_sig_hi_41, _wnList_res_im_rawIn_out_sig_T_124) @[Cat.scala 33:92]
    wnList_res_im_rawIn_41.sig <= _wnList_res_im_rawIn_out_sig_T_125 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_329 = bits(wnList_res_im_rawIn_41.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_330 = mux(wnList_res_im_rawIn_41.isZero, UInt<3>("h0"), _wnList_res_im_T_329) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_331 = mux(wnList_res_im_rawIn_41.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_332 = or(_wnList_res_im_T_330, _wnList_res_im_T_331) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_333 = bits(wnList_res_im_rawIn_41.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_334 = bits(wnList_res_im_rawIn_41.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_41 = cat(_wnList_res_im_T_333, _wnList_res_im_T_334) @[Cat.scala 33:92]
    node wnList_res_im_hi_41 = cat(wnList_res_im_rawIn_41.sign, _wnList_res_im_T_332) @[Cat.scala 33:92]
    node _wnList_res_im_T_335 = cat(wnList_res_im_hi_41, wnList_res_im_lo_41) @[Cat.scala 33:92]
    node _wnList_res_im_T_336 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_42 = bits(_wnList_res_im_T_336, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_42 = bits(_wnList_res_im_T_336, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_42 = bits(_wnList_res_im_T_336, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_42 = eq(wnList_res_im_rawIn_expIn_42, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_42 = eq(wnList_res_im_rawIn_fractIn_42, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_756 = bits(wnList_res_im_rawIn_fractIn_42, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_757 = bits(wnList_res_im_rawIn_fractIn_42, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_758 = bits(wnList_res_im_rawIn_fractIn_42, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_759 = bits(wnList_res_im_rawIn_fractIn_42, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_760 = bits(wnList_res_im_rawIn_fractIn_42, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_761 = bits(wnList_res_im_rawIn_fractIn_42, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_762 = bits(wnList_res_im_rawIn_fractIn_42, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_763 = bits(wnList_res_im_rawIn_fractIn_42, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_764 = bits(wnList_res_im_rawIn_fractIn_42, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_765 = bits(wnList_res_im_rawIn_fractIn_42, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_766 = mux(_wnList_res_im_rawIn_normDist_T_757, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_767 = mux(_wnList_res_im_rawIn_normDist_T_758, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_766) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_768 = mux(_wnList_res_im_rawIn_normDist_T_759, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_767) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_769 = mux(_wnList_res_im_rawIn_normDist_T_760, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_768) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_770 = mux(_wnList_res_im_rawIn_normDist_T_761, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_769) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_771 = mux(_wnList_res_im_rawIn_normDist_T_762, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_770) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_772 = mux(_wnList_res_im_rawIn_normDist_T_763, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_771) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_773 = mux(_wnList_res_im_rawIn_normDist_T_764, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_772) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_42 = mux(_wnList_res_im_rawIn_normDist_T_765, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_773) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_84 = dshl(wnList_res_im_rawIn_fractIn_42, wnList_res_im_rawIn_normDist_42) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_85 = bits(_wnList_res_im_rawIn_subnormFract_T_84, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_42 = shl(_wnList_res_im_rawIn_subnormFract_T_85, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_210 = xor(wnList_res_im_rawIn_normDist_42, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_211 = mux(wnList_res_im_rawIn_isZeroExpIn_42, _wnList_res_im_rawIn_adjustedExp_T_210, wnList_res_im_rawIn_expIn_42) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_212 = mux(wnList_res_im_rawIn_isZeroExpIn_42, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_213 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_212) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_214 = add(_wnList_res_im_rawIn_adjustedExp_T_211, _wnList_res_im_rawIn_adjustedExp_T_213) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_42 = tail(_wnList_res_im_rawIn_adjustedExp_T_214, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_42 = and(wnList_res_im_rawIn_isZeroExpIn_42, wnList_res_im_rawIn_isZeroFractIn_42) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_42 = bits(wnList_res_im_rawIn_adjustedExp_42, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_42 = eq(_wnList_res_im_rawIn_isSpecial_T_42, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_42 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_42 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_84 = eq(wnList_res_im_rawIn_isZeroFractIn_42, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_85 = and(wnList_res_im_rawIn_isSpecial_42, _wnList_res_im_rawIn_out_isNaN_T_84) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_42.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_85 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_42 = and(wnList_res_im_rawIn_isSpecial_42, wnList_res_im_rawIn_isZeroFractIn_42) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_42.isInf <= _wnList_res_im_rawIn_out_isInf_T_42 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_42.isZero <= wnList_res_im_rawIn_isZero_42 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_42.sign <= wnList_res_im_rawIn_sign_42 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_84 = bits(wnList_res_im_rawIn_adjustedExp_42, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_85 = cvt(_wnList_res_im_rawIn_out_sExp_T_84) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_42.sExp <= _wnList_res_im_rawIn_out_sExp_T_85 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_126 = eq(wnList_res_im_rawIn_isZero_42, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_127 = mux(wnList_res_im_rawIn_isZeroExpIn_42, wnList_res_im_rawIn_subnormFract_42, wnList_res_im_rawIn_fractIn_42) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_42 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_126) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_128 = cat(wnList_res_im_rawIn_out_sig_hi_42, _wnList_res_im_rawIn_out_sig_T_127) @[Cat.scala 33:92]
    wnList_res_im_rawIn_42.sig <= _wnList_res_im_rawIn_out_sig_T_128 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_337 = bits(wnList_res_im_rawIn_42.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_338 = mux(wnList_res_im_rawIn_42.isZero, UInt<3>("h0"), _wnList_res_im_T_337) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_339 = mux(wnList_res_im_rawIn_42.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_340 = or(_wnList_res_im_T_338, _wnList_res_im_T_339) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_341 = bits(wnList_res_im_rawIn_42.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_342 = bits(wnList_res_im_rawIn_42.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_42 = cat(_wnList_res_im_T_341, _wnList_res_im_T_342) @[Cat.scala 33:92]
    node wnList_res_im_hi_42 = cat(wnList_res_im_rawIn_42.sign, _wnList_res_im_T_340) @[Cat.scala 33:92]
    node _wnList_res_im_T_343 = cat(wnList_res_im_hi_42, wnList_res_im_lo_42) @[Cat.scala 33:92]
    node _wnList_res_im_T_344 = asUInt(asSInt(UInt<16>("hbaa6"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_43 = bits(_wnList_res_im_T_344, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_43 = bits(_wnList_res_im_T_344, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_43 = bits(_wnList_res_im_T_344, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_43 = eq(wnList_res_im_rawIn_expIn_43, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_43 = eq(wnList_res_im_rawIn_fractIn_43, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_774 = bits(wnList_res_im_rawIn_fractIn_43, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_775 = bits(wnList_res_im_rawIn_fractIn_43, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_776 = bits(wnList_res_im_rawIn_fractIn_43, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_777 = bits(wnList_res_im_rawIn_fractIn_43, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_778 = bits(wnList_res_im_rawIn_fractIn_43, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_779 = bits(wnList_res_im_rawIn_fractIn_43, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_780 = bits(wnList_res_im_rawIn_fractIn_43, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_781 = bits(wnList_res_im_rawIn_fractIn_43, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_782 = bits(wnList_res_im_rawIn_fractIn_43, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_783 = bits(wnList_res_im_rawIn_fractIn_43, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_784 = mux(_wnList_res_im_rawIn_normDist_T_775, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_785 = mux(_wnList_res_im_rawIn_normDist_T_776, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_784) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_786 = mux(_wnList_res_im_rawIn_normDist_T_777, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_785) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_787 = mux(_wnList_res_im_rawIn_normDist_T_778, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_786) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_788 = mux(_wnList_res_im_rawIn_normDist_T_779, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_787) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_789 = mux(_wnList_res_im_rawIn_normDist_T_780, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_788) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_790 = mux(_wnList_res_im_rawIn_normDist_T_781, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_789) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_791 = mux(_wnList_res_im_rawIn_normDist_T_782, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_790) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_43 = mux(_wnList_res_im_rawIn_normDist_T_783, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_791) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_86 = dshl(wnList_res_im_rawIn_fractIn_43, wnList_res_im_rawIn_normDist_43) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_87 = bits(_wnList_res_im_rawIn_subnormFract_T_86, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_43 = shl(_wnList_res_im_rawIn_subnormFract_T_87, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_215 = xor(wnList_res_im_rawIn_normDist_43, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_216 = mux(wnList_res_im_rawIn_isZeroExpIn_43, _wnList_res_im_rawIn_adjustedExp_T_215, wnList_res_im_rawIn_expIn_43) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_217 = mux(wnList_res_im_rawIn_isZeroExpIn_43, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_218 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_217) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_219 = add(_wnList_res_im_rawIn_adjustedExp_T_216, _wnList_res_im_rawIn_adjustedExp_T_218) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_43 = tail(_wnList_res_im_rawIn_adjustedExp_T_219, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_43 = and(wnList_res_im_rawIn_isZeroExpIn_43, wnList_res_im_rawIn_isZeroFractIn_43) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_43 = bits(wnList_res_im_rawIn_adjustedExp_43, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_43 = eq(_wnList_res_im_rawIn_isSpecial_T_43, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_43 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_43 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_86 = eq(wnList_res_im_rawIn_isZeroFractIn_43, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_87 = and(wnList_res_im_rawIn_isSpecial_43, _wnList_res_im_rawIn_out_isNaN_T_86) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_43.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_87 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_43 = and(wnList_res_im_rawIn_isSpecial_43, wnList_res_im_rawIn_isZeroFractIn_43) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_43.isInf <= _wnList_res_im_rawIn_out_isInf_T_43 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_43.isZero <= wnList_res_im_rawIn_isZero_43 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_43.sign <= wnList_res_im_rawIn_sign_43 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_86 = bits(wnList_res_im_rawIn_adjustedExp_43, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_87 = cvt(_wnList_res_im_rawIn_out_sExp_T_86) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_43.sExp <= _wnList_res_im_rawIn_out_sExp_T_87 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_129 = eq(wnList_res_im_rawIn_isZero_43, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_130 = mux(wnList_res_im_rawIn_isZeroExpIn_43, wnList_res_im_rawIn_subnormFract_43, wnList_res_im_rawIn_fractIn_43) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_43 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_129) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_131 = cat(wnList_res_im_rawIn_out_sig_hi_43, _wnList_res_im_rawIn_out_sig_T_130) @[Cat.scala 33:92]
    wnList_res_im_rawIn_43.sig <= _wnList_res_im_rawIn_out_sig_T_131 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_345 = bits(wnList_res_im_rawIn_43.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_346 = mux(wnList_res_im_rawIn_43.isZero, UInt<3>("h0"), _wnList_res_im_T_345) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_347 = mux(wnList_res_im_rawIn_43.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_348 = or(_wnList_res_im_T_346, _wnList_res_im_T_347) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_349 = bits(wnList_res_im_rawIn_43.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_350 = bits(wnList_res_im_rawIn_43.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_43 = cat(_wnList_res_im_T_349, _wnList_res_im_T_350) @[Cat.scala 33:92]
    node wnList_res_im_hi_43 = cat(wnList_res_im_rawIn_43.sign, _wnList_res_im_T_348) @[Cat.scala 33:92]
    node _wnList_res_im_T_351 = cat(wnList_res_im_hi_43, wnList_res_im_lo_43) @[Cat.scala 33:92]
    node _wnList_res_im_T_352 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_44 = bits(_wnList_res_im_T_352, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_44 = bits(_wnList_res_im_T_352, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_44 = bits(_wnList_res_im_T_352, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_44 = eq(wnList_res_im_rawIn_expIn_44, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_44 = eq(wnList_res_im_rawIn_fractIn_44, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_792 = bits(wnList_res_im_rawIn_fractIn_44, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_793 = bits(wnList_res_im_rawIn_fractIn_44, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_794 = bits(wnList_res_im_rawIn_fractIn_44, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_795 = bits(wnList_res_im_rawIn_fractIn_44, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_796 = bits(wnList_res_im_rawIn_fractIn_44, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_797 = bits(wnList_res_im_rawIn_fractIn_44, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_798 = bits(wnList_res_im_rawIn_fractIn_44, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_799 = bits(wnList_res_im_rawIn_fractIn_44, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_800 = bits(wnList_res_im_rawIn_fractIn_44, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_801 = bits(wnList_res_im_rawIn_fractIn_44, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_802 = mux(_wnList_res_im_rawIn_normDist_T_793, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_803 = mux(_wnList_res_im_rawIn_normDist_T_794, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_802) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_804 = mux(_wnList_res_im_rawIn_normDist_T_795, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_803) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_805 = mux(_wnList_res_im_rawIn_normDist_T_796, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_804) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_806 = mux(_wnList_res_im_rawIn_normDist_T_797, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_805) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_807 = mux(_wnList_res_im_rawIn_normDist_T_798, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_806) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_808 = mux(_wnList_res_im_rawIn_normDist_T_799, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_807) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_809 = mux(_wnList_res_im_rawIn_normDist_T_800, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_808) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_44 = mux(_wnList_res_im_rawIn_normDist_T_801, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_809) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_88 = dshl(wnList_res_im_rawIn_fractIn_44, wnList_res_im_rawIn_normDist_44) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_89 = bits(_wnList_res_im_rawIn_subnormFract_T_88, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_44 = shl(_wnList_res_im_rawIn_subnormFract_T_89, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_220 = xor(wnList_res_im_rawIn_normDist_44, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_221 = mux(wnList_res_im_rawIn_isZeroExpIn_44, _wnList_res_im_rawIn_adjustedExp_T_220, wnList_res_im_rawIn_expIn_44) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_222 = mux(wnList_res_im_rawIn_isZeroExpIn_44, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_223 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_222) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_224 = add(_wnList_res_im_rawIn_adjustedExp_T_221, _wnList_res_im_rawIn_adjustedExp_T_223) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_44 = tail(_wnList_res_im_rawIn_adjustedExp_T_224, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_44 = and(wnList_res_im_rawIn_isZeroExpIn_44, wnList_res_im_rawIn_isZeroFractIn_44) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_44 = bits(wnList_res_im_rawIn_adjustedExp_44, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_44 = eq(_wnList_res_im_rawIn_isSpecial_T_44, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_44 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_44 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_88 = eq(wnList_res_im_rawIn_isZeroFractIn_44, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_89 = and(wnList_res_im_rawIn_isSpecial_44, _wnList_res_im_rawIn_out_isNaN_T_88) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_44.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_89 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_44 = and(wnList_res_im_rawIn_isSpecial_44, wnList_res_im_rawIn_isZeroFractIn_44) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_44.isInf <= _wnList_res_im_rawIn_out_isInf_T_44 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_44.isZero <= wnList_res_im_rawIn_isZero_44 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_44.sign <= wnList_res_im_rawIn_sign_44 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_88 = bits(wnList_res_im_rawIn_adjustedExp_44, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_89 = cvt(_wnList_res_im_rawIn_out_sExp_T_88) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_44.sExp <= _wnList_res_im_rawIn_out_sExp_T_89 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_132 = eq(wnList_res_im_rawIn_isZero_44, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_133 = mux(wnList_res_im_rawIn_isZeroExpIn_44, wnList_res_im_rawIn_subnormFract_44, wnList_res_im_rawIn_fractIn_44) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_44 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_132) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_134 = cat(wnList_res_im_rawIn_out_sig_hi_44, _wnList_res_im_rawIn_out_sig_T_133) @[Cat.scala 33:92]
    wnList_res_im_rawIn_44.sig <= _wnList_res_im_rawIn_out_sig_T_134 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_353 = bits(wnList_res_im_rawIn_44.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_354 = mux(wnList_res_im_rawIn_44.isZero, UInt<3>("h0"), _wnList_res_im_T_353) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_355 = mux(wnList_res_im_rawIn_44.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_356 = or(_wnList_res_im_T_354, _wnList_res_im_T_355) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_357 = bits(wnList_res_im_rawIn_44.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_358 = bits(wnList_res_im_rawIn_44.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_44 = cat(_wnList_res_im_T_357, _wnList_res_im_T_358) @[Cat.scala 33:92]
    node wnList_res_im_hi_44 = cat(wnList_res_im_rawIn_44.sign, _wnList_res_im_T_356) @[Cat.scala 33:92]
    node _wnList_res_im_T_359 = cat(wnList_res_im_hi_44, wnList_res_im_lo_44) @[Cat.scala 33:92]
    node _wnList_res_im_T_360 = asUInt(asSInt(UInt<16>("hb871"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_45 = bits(_wnList_res_im_T_360, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_45 = bits(_wnList_res_im_T_360, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_45 = bits(_wnList_res_im_T_360, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_45 = eq(wnList_res_im_rawIn_expIn_45, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_45 = eq(wnList_res_im_rawIn_fractIn_45, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_810 = bits(wnList_res_im_rawIn_fractIn_45, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_811 = bits(wnList_res_im_rawIn_fractIn_45, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_812 = bits(wnList_res_im_rawIn_fractIn_45, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_813 = bits(wnList_res_im_rawIn_fractIn_45, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_814 = bits(wnList_res_im_rawIn_fractIn_45, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_815 = bits(wnList_res_im_rawIn_fractIn_45, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_816 = bits(wnList_res_im_rawIn_fractIn_45, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_817 = bits(wnList_res_im_rawIn_fractIn_45, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_818 = bits(wnList_res_im_rawIn_fractIn_45, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_819 = bits(wnList_res_im_rawIn_fractIn_45, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_820 = mux(_wnList_res_im_rawIn_normDist_T_811, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_821 = mux(_wnList_res_im_rawIn_normDist_T_812, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_820) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_822 = mux(_wnList_res_im_rawIn_normDist_T_813, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_821) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_823 = mux(_wnList_res_im_rawIn_normDist_T_814, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_822) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_824 = mux(_wnList_res_im_rawIn_normDist_T_815, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_823) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_825 = mux(_wnList_res_im_rawIn_normDist_T_816, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_824) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_826 = mux(_wnList_res_im_rawIn_normDist_T_817, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_825) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_827 = mux(_wnList_res_im_rawIn_normDist_T_818, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_826) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_45 = mux(_wnList_res_im_rawIn_normDist_T_819, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_827) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_90 = dshl(wnList_res_im_rawIn_fractIn_45, wnList_res_im_rawIn_normDist_45) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_91 = bits(_wnList_res_im_rawIn_subnormFract_T_90, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_45 = shl(_wnList_res_im_rawIn_subnormFract_T_91, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_225 = xor(wnList_res_im_rawIn_normDist_45, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_226 = mux(wnList_res_im_rawIn_isZeroExpIn_45, _wnList_res_im_rawIn_adjustedExp_T_225, wnList_res_im_rawIn_expIn_45) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_227 = mux(wnList_res_im_rawIn_isZeroExpIn_45, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_228 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_227) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_229 = add(_wnList_res_im_rawIn_adjustedExp_T_226, _wnList_res_im_rawIn_adjustedExp_T_228) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_45 = tail(_wnList_res_im_rawIn_adjustedExp_T_229, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_45 = and(wnList_res_im_rawIn_isZeroExpIn_45, wnList_res_im_rawIn_isZeroFractIn_45) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_45 = bits(wnList_res_im_rawIn_adjustedExp_45, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_45 = eq(_wnList_res_im_rawIn_isSpecial_T_45, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_45 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_45 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_90 = eq(wnList_res_im_rawIn_isZeroFractIn_45, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_91 = and(wnList_res_im_rawIn_isSpecial_45, _wnList_res_im_rawIn_out_isNaN_T_90) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_45.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_91 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_45 = and(wnList_res_im_rawIn_isSpecial_45, wnList_res_im_rawIn_isZeroFractIn_45) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_45.isInf <= _wnList_res_im_rawIn_out_isInf_T_45 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_45.isZero <= wnList_res_im_rawIn_isZero_45 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_45.sign <= wnList_res_im_rawIn_sign_45 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_90 = bits(wnList_res_im_rawIn_adjustedExp_45, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_91 = cvt(_wnList_res_im_rawIn_out_sExp_T_90) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_45.sExp <= _wnList_res_im_rawIn_out_sExp_T_91 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_135 = eq(wnList_res_im_rawIn_isZero_45, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_136 = mux(wnList_res_im_rawIn_isZeroExpIn_45, wnList_res_im_rawIn_subnormFract_45, wnList_res_im_rawIn_fractIn_45) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_45 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_135) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_137 = cat(wnList_res_im_rawIn_out_sig_hi_45, _wnList_res_im_rawIn_out_sig_T_136) @[Cat.scala 33:92]
    wnList_res_im_rawIn_45.sig <= _wnList_res_im_rawIn_out_sig_T_137 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_361 = bits(wnList_res_im_rawIn_45.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_362 = mux(wnList_res_im_rawIn_45.isZero, UInt<3>("h0"), _wnList_res_im_T_361) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_363 = mux(wnList_res_im_rawIn_45.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_364 = or(_wnList_res_im_T_362, _wnList_res_im_T_363) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_365 = bits(wnList_res_im_rawIn_45.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_366 = bits(wnList_res_im_rawIn_45.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_45 = cat(_wnList_res_im_T_365, _wnList_res_im_T_366) @[Cat.scala 33:92]
    node wnList_res_im_hi_45 = cat(wnList_res_im_rawIn_45.sign, _wnList_res_im_T_364) @[Cat.scala 33:92]
    node _wnList_res_im_T_367 = cat(wnList_res_im_hi_45, wnList_res_im_lo_45) @[Cat.scala 33:92]
    node _wnList_res_im_T_368 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_46 = bits(_wnList_res_im_T_368, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_46 = bits(_wnList_res_im_T_368, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_46 = bits(_wnList_res_im_T_368, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_46 = eq(wnList_res_im_rawIn_expIn_46, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_46 = eq(wnList_res_im_rawIn_fractIn_46, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_828 = bits(wnList_res_im_rawIn_fractIn_46, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_829 = bits(wnList_res_im_rawIn_fractIn_46, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_830 = bits(wnList_res_im_rawIn_fractIn_46, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_831 = bits(wnList_res_im_rawIn_fractIn_46, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_832 = bits(wnList_res_im_rawIn_fractIn_46, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_833 = bits(wnList_res_im_rawIn_fractIn_46, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_834 = bits(wnList_res_im_rawIn_fractIn_46, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_835 = bits(wnList_res_im_rawIn_fractIn_46, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_836 = bits(wnList_res_im_rawIn_fractIn_46, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_837 = bits(wnList_res_im_rawIn_fractIn_46, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_838 = mux(_wnList_res_im_rawIn_normDist_T_829, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_839 = mux(_wnList_res_im_rawIn_normDist_T_830, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_838) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_840 = mux(_wnList_res_im_rawIn_normDist_T_831, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_839) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_841 = mux(_wnList_res_im_rawIn_normDist_T_832, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_840) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_842 = mux(_wnList_res_im_rawIn_normDist_T_833, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_841) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_843 = mux(_wnList_res_im_rawIn_normDist_T_834, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_842) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_844 = mux(_wnList_res_im_rawIn_normDist_T_835, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_843) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_845 = mux(_wnList_res_im_rawIn_normDist_T_836, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_844) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_46 = mux(_wnList_res_im_rawIn_normDist_T_837, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_845) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_92 = dshl(wnList_res_im_rawIn_fractIn_46, wnList_res_im_rawIn_normDist_46) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_93 = bits(_wnList_res_im_rawIn_subnormFract_T_92, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_46 = shl(_wnList_res_im_rawIn_subnormFract_T_93, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_230 = xor(wnList_res_im_rawIn_normDist_46, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_231 = mux(wnList_res_im_rawIn_isZeroExpIn_46, _wnList_res_im_rawIn_adjustedExp_T_230, wnList_res_im_rawIn_expIn_46) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_232 = mux(wnList_res_im_rawIn_isZeroExpIn_46, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_233 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_232) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_234 = add(_wnList_res_im_rawIn_adjustedExp_T_231, _wnList_res_im_rawIn_adjustedExp_T_233) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_46 = tail(_wnList_res_im_rawIn_adjustedExp_T_234, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_46 = and(wnList_res_im_rawIn_isZeroExpIn_46, wnList_res_im_rawIn_isZeroFractIn_46) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_46 = bits(wnList_res_im_rawIn_adjustedExp_46, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_46 = eq(_wnList_res_im_rawIn_isSpecial_T_46, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_46 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_46 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_92 = eq(wnList_res_im_rawIn_isZeroFractIn_46, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_93 = and(wnList_res_im_rawIn_isSpecial_46, _wnList_res_im_rawIn_out_isNaN_T_92) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_46.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_93 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_46 = and(wnList_res_im_rawIn_isSpecial_46, wnList_res_im_rawIn_isZeroFractIn_46) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_46.isInf <= _wnList_res_im_rawIn_out_isInf_T_46 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_46.isZero <= wnList_res_im_rawIn_isZero_46 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_46.sign <= wnList_res_im_rawIn_sign_46 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_92 = bits(wnList_res_im_rawIn_adjustedExp_46, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_93 = cvt(_wnList_res_im_rawIn_out_sExp_T_92) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_46.sExp <= _wnList_res_im_rawIn_out_sExp_T_93 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_138 = eq(wnList_res_im_rawIn_isZero_46, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_139 = mux(wnList_res_im_rawIn_isZeroExpIn_46, wnList_res_im_rawIn_subnormFract_46, wnList_res_im_rawIn_fractIn_46) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_46 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_138) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_140 = cat(wnList_res_im_rawIn_out_sig_hi_46, _wnList_res_im_rawIn_out_sig_T_139) @[Cat.scala 33:92]
    wnList_res_im_rawIn_46.sig <= _wnList_res_im_rawIn_out_sig_T_140 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_369 = bits(wnList_res_im_rawIn_46.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_370 = mux(wnList_res_im_rawIn_46.isZero, UInt<3>("h0"), _wnList_res_im_T_369) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_371 = mux(wnList_res_im_rawIn_46.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_372 = or(_wnList_res_im_T_370, _wnList_res_im_T_371) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_373 = bits(wnList_res_im_rawIn_46.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_374 = bits(wnList_res_im_rawIn_46.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_46 = cat(_wnList_res_im_T_373, _wnList_res_im_T_374) @[Cat.scala 33:92]
    node wnList_res_im_hi_46 = cat(wnList_res_im_rawIn_46.sign, _wnList_res_im_T_372) @[Cat.scala 33:92]
    node _wnList_res_im_T_375 = cat(wnList_res_im_hi_46, wnList_res_im_lo_46) @[Cat.scala 33:92]
    node _wnList_res_im_T_376 = asUInt(asSInt(UInt<16>("hb23e"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_47 = bits(_wnList_res_im_T_376, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_47 = bits(_wnList_res_im_T_376, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_47 = bits(_wnList_res_im_T_376, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_47 = eq(wnList_res_im_rawIn_expIn_47, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_47 = eq(wnList_res_im_rawIn_fractIn_47, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_846 = bits(wnList_res_im_rawIn_fractIn_47, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_847 = bits(wnList_res_im_rawIn_fractIn_47, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_848 = bits(wnList_res_im_rawIn_fractIn_47, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_849 = bits(wnList_res_im_rawIn_fractIn_47, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_850 = bits(wnList_res_im_rawIn_fractIn_47, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_851 = bits(wnList_res_im_rawIn_fractIn_47, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_852 = bits(wnList_res_im_rawIn_fractIn_47, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_853 = bits(wnList_res_im_rawIn_fractIn_47, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_854 = bits(wnList_res_im_rawIn_fractIn_47, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_855 = bits(wnList_res_im_rawIn_fractIn_47, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_856 = mux(_wnList_res_im_rawIn_normDist_T_847, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_857 = mux(_wnList_res_im_rawIn_normDist_T_848, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_856) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_858 = mux(_wnList_res_im_rawIn_normDist_T_849, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_857) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_859 = mux(_wnList_res_im_rawIn_normDist_T_850, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_858) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_860 = mux(_wnList_res_im_rawIn_normDist_T_851, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_859) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_861 = mux(_wnList_res_im_rawIn_normDist_T_852, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_860) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_862 = mux(_wnList_res_im_rawIn_normDist_T_853, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_861) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_863 = mux(_wnList_res_im_rawIn_normDist_T_854, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_862) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_47 = mux(_wnList_res_im_rawIn_normDist_T_855, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_863) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_94 = dshl(wnList_res_im_rawIn_fractIn_47, wnList_res_im_rawIn_normDist_47) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_95 = bits(_wnList_res_im_rawIn_subnormFract_T_94, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_47 = shl(_wnList_res_im_rawIn_subnormFract_T_95, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_235 = xor(wnList_res_im_rawIn_normDist_47, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_236 = mux(wnList_res_im_rawIn_isZeroExpIn_47, _wnList_res_im_rawIn_adjustedExp_T_235, wnList_res_im_rawIn_expIn_47) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_237 = mux(wnList_res_im_rawIn_isZeroExpIn_47, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_238 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_237) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_239 = add(_wnList_res_im_rawIn_adjustedExp_T_236, _wnList_res_im_rawIn_adjustedExp_T_238) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_47 = tail(_wnList_res_im_rawIn_adjustedExp_T_239, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_47 = and(wnList_res_im_rawIn_isZeroExpIn_47, wnList_res_im_rawIn_isZeroFractIn_47) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_47 = bits(wnList_res_im_rawIn_adjustedExp_47, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_47 = eq(_wnList_res_im_rawIn_isSpecial_T_47, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_47 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_47 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_94 = eq(wnList_res_im_rawIn_isZeroFractIn_47, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_95 = and(wnList_res_im_rawIn_isSpecial_47, _wnList_res_im_rawIn_out_isNaN_T_94) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_47.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_95 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_47 = and(wnList_res_im_rawIn_isSpecial_47, wnList_res_im_rawIn_isZeroFractIn_47) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_47.isInf <= _wnList_res_im_rawIn_out_isInf_T_47 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_47.isZero <= wnList_res_im_rawIn_isZero_47 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_47.sign <= wnList_res_im_rawIn_sign_47 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_94 = bits(wnList_res_im_rawIn_adjustedExp_47, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_95 = cvt(_wnList_res_im_rawIn_out_sExp_T_94) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_47.sExp <= _wnList_res_im_rawIn_out_sExp_T_95 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_141 = eq(wnList_res_im_rawIn_isZero_47, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_142 = mux(wnList_res_im_rawIn_isZeroExpIn_47, wnList_res_im_rawIn_subnormFract_47, wnList_res_im_rawIn_fractIn_47) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_47 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_141) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_143 = cat(wnList_res_im_rawIn_out_sig_hi_47, _wnList_res_im_rawIn_out_sig_T_142) @[Cat.scala 33:92]
    wnList_res_im_rawIn_47.sig <= _wnList_res_im_rawIn_out_sig_T_143 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_377 = bits(wnList_res_im_rawIn_47.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_378 = mux(wnList_res_im_rawIn_47.isZero, UInt<3>("h0"), _wnList_res_im_T_377) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_379 = mux(wnList_res_im_rawIn_47.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_380 = or(_wnList_res_im_T_378, _wnList_res_im_T_379) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_381 = bits(wnList_res_im_rawIn_47.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_382 = bits(wnList_res_im_rawIn_47.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_47 = cat(_wnList_res_im_T_381, _wnList_res_im_T_382) @[Cat.scala 33:92]
    node wnList_res_im_hi_47 = cat(wnList_res_im_rawIn_47.sign, _wnList_res_im_T_380) @[Cat.scala 33:92]
    node _wnList_res_im_T_383 = cat(wnList_res_im_hi_47, wnList_res_im_lo_47) @[Cat.scala 33:92]
    wire _wnList_res_im_WIRE_1 : UInt<17>[16] @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[0] <= _wnList_res_im_T_263 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[1] <= _wnList_res_im_T_271 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[2] <= _wnList_res_im_T_279 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[3] <= _wnList_res_im_T_287 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[4] <= _wnList_res_im_T_295 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[5] <= _wnList_res_im_T_303 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[6] <= _wnList_res_im_T_311 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[7] <= _wnList_res_im_T_319 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[8] <= _wnList_res_im_T_327 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[9] <= _wnList_res_im_T_335 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[10] <= _wnList_res_im_T_343 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[11] <= _wnList_res_im_T_351 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[12] <= _wnList_res_im_T_359 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[13] <= _wnList_res_im_T_367 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[14] <= _wnList_res_im_T_375 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_1[15] <= _wnList_res_im_T_383 @[FFT.scala 88:12]
    wnList_0_1.im <= _wnList_res_im_WIRE_1[_wnList_T_3] @[FFT.scala 105:12]
    inst inst_1 of ButterflyMul_1 @[Modules.scala 287:22]
    inst_1.clock <= clock
    inst_1.reset <= reset
    inst_1.io.in[0].im <= data1_1_0[0].im @[Modules.scala 288:16]
    inst_1.io.in[0].re <= data1_1_0[0].re @[Modules.scala 288:16]
    inst_1.io.in[1].im <= data1_1_0[1].im @[Modules.scala 288:16]
    inst_1.io.in[1].re <= data1_1_0[1].re @[Modules.scala 288:16]
    inst_1.io.wn[0].im <= wnList_0_1.im @[Modules.scala 289:16]
    inst_1.io.wn[0].re <= wnList_0_1.re @[Modules.scala 289:16]
    data2_1_0 <= inst_1.io.out @[FFT.scala 136:19]
    node wnCtrl_2 = bits(cnt_0, 2, 0) @[FFT.scala 131:23]
    node _wnList_T_4 = add(UInt<1>("h0"), wnCtrl_2) @[FFT.scala 135:96]
    node _wnList_T_5 = tail(_wnList_T_4, 1) @[FFT.scala 135:96]
    wire wnList_0_2 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 103:19]
    node _wnList_res_re_T_384 = asUInt(asSInt(UInt<16>("h3c00"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_48 = bits(_wnList_res_re_T_384, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_48 = bits(_wnList_res_re_T_384, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_48 = bits(_wnList_res_re_T_384, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_48 = eq(wnList_res_re_rawIn_expIn_48, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_48 = eq(wnList_res_re_rawIn_fractIn_48, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_864 = bits(wnList_res_re_rawIn_fractIn_48, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_865 = bits(wnList_res_re_rawIn_fractIn_48, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_866 = bits(wnList_res_re_rawIn_fractIn_48, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_867 = bits(wnList_res_re_rawIn_fractIn_48, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_868 = bits(wnList_res_re_rawIn_fractIn_48, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_869 = bits(wnList_res_re_rawIn_fractIn_48, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_870 = bits(wnList_res_re_rawIn_fractIn_48, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_871 = bits(wnList_res_re_rawIn_fractIn_48, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_872 = bits(wnList_res_re_rawIn_fractIn_48, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_873 = bits(wnList_res_re_rawIn_fractIn_48, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_874 = mux(_wnList_res_re_rawIn_normDist_T_865, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_875 = mux(_wnList_res_re_rawIn_normDist_T_866, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_874) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_876 = mux(_wnList_res_re_rawIn_normDist_T_867, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_875) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_877 = mux(_wnList_res_re_rawIn_normDist_T_868, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_876) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_878 = mux(_wnList_res_re_rawIn_normDist_T_869, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_877) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_879 = mux(_wnList_res_re_rawIn_normDist_T_870, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_878) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_880 = mux(_wnList_res_re_rawIn_normDist_T_871, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_879) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_881 = mux(_wnList_res_re_rawIn_normDist_T_872, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_880) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_48 = mux(_wnList_res_re_rawIn_normDist_T_873, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_881) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_96 = dshl(wnList_res_re_rawIn_fractIn_48, wnList_res_re_rawIn_normDist_48) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_97 = bits(_wnList_res_re_rawIn_subnormFract_T_96, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_48 = shl(_wnList_res_re_rawIn_subnormFract_T_97, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_240 = xor(wnList_res_re_rawIn_normDist_48, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_241 = mux(wnList_res_re_rawIn_isZeroExpIn_48, _wnList_res_re_rawIn_adjustedExp_T_240, wnList_res_re_rawIn_expIn_48) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_242 = mux(wnList_res_re_rawIn_isZeroExpIn_48, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_243 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_242) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_244 = add(_wnList_res_re_rawIn_adjustedExp_T_241, _wnList_res_re_rawIn_adjustedExp_T_243) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_48 = tail(_wnList_res_re_rawIn_adjustedExp_T_244, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_48 = and(wnList_res_re_rawIn_isZeroExpIn_48, wnList_res_re_rawIn_isZeroFractIn_48) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_48 = bits(wnList_res_re_rawIn_adjustedExp_48, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_48 = eq(_wnList_res_re_rawIn_isSpecial_T_48, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_48 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_48 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_96 = eq(wnList_res_re_rawIn_isZeroFractIn_48, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_97 = and(wnList_res_re_rawIn_isSpecial_48, _wnList_res_re_rawIn_out_isNaN_T_96) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_48.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_97 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_48 = and(wnList_res_re_rawIn_isSpecial_48, wnList_res_re_rawIn_isZeroFractIn_48) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_48.isInf <= _wnList_res_re_rawIn_out_isInf_T_48 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_48.isZero <= wnList_res_re_rawIn_isZero_48 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_48.sign <= wnList_res_re_rawIn_sign_48 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_96 = bits(wnList_res_re_rawIn_adjustedExp_48, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_97 = cvt(_wnList_res_re_rawIn_out_sExp_T_96) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_48.sExp <= _wnList_res_re_rawIn_out_sExp_T_97 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_144 = eq(wnList_res_re_rawIn_isZero_48, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_145 = mux(wnList_res_re_rawIn_isZeroExpIn_48, wnList_res_re_rawIn_subnormFract_48, wnList_res_re_rawIn_fractIn_48) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_48 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_144) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_146 = cat(wnList_res_re_rawIn_out_sig_hi_48, _wnList_res_re_rawIn_out_sig_T_145) @[Cat.scala 33:92]
    wnList_res_re_rawIn_48.sig <= _wnList_res_re_rawIn_out_sig_T_146 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_385 = bits(wnList_res_re_rawIn_48.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_386 = mux(wnList_res_re_rawIn_48.isZero, UInt<3>("h0"), _wnList_res_re_T_385) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_387 = mux(wnList_res_re_rawIn_48.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_388 = or(_wnList_res_re_T_386, _wnList_res_re_T_387) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_389 = bits(wnList_res_re_rawIn_48.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_390 = bits(wnList_res_re_rawIn_48.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_48 = cat(_wnList_res_re_T_389, _wnList_res_re_T_390) @[Cat.scala 33:92]
    node wnList_res_re_hi_48 = cat(wnList_res_re_rawIn_48.sign, _wnList_res_re_T_388) @[Cat.scala 33:92]
    node _wnList_res_re_T_391 = cat(wnList_res_re_hi_48, wnList_res_re_lo_48) @[Cat.scala 33:92]
    node _wnList_res_re_T_392 = asUInt(asSInt(UInt<16>("h3b64"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_49 = bits(_wnList_res_re_T_392, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_49 = bits(_wnList_res_re_T_392, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_49 = bits(_wnList_res_re_T_392, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_49 = eq(wnList_res_re_rawIn_expIn_49, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_49 = eq(wnList_res_re_rawIn_fractIn_49, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_882 = bits(wnList_res_re_rawIn_fractIn_49, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_883 = bits(wnList_res_re_rawIn_fractIn_49, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_884 = bits(wnList_res_re_rawIn_fractIn_49, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_885 = bits(wnList_res_re_rawIn_fractIn_49, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_886 = bits(wnList_res_re_rawIn_fractIn_49, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_887 = bits(wnList_res_re_rawIn_fractIn_49, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_888 = bits(wnList_res_re_rawIn_fractIn_49, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_889 = bits(wnList_res_re_rawIn_fractIn_49, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_890 = bits(wnList_res_re_rawIn_fractIn_49, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_891 = bits(wnList_res_re_rawIn_fractIn_49, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_892 = mux(_wnList_res_re_rawIn_normDist_T_883, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_893 = mux(_wnList_res_re_rawIn_normDist_T_884, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_892) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_894 = mux(_wnList_res_re_rawIn_normDist_T_885, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_893) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_895 = mux(_wnList_res_re_rawIn_normDist_T_886, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_894) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_896 = mux(_wnList_res_re_rawIn_normDist_T_887, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_895) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_897 = mux(_wnList_res_re_rawIn_normDist_T_888, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_896) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_898 = mux(_wnList_res_re_rawIn_normDist_T_889, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_897) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_899 = mux(_wnList_res_re_rawIn_normDist_T_890, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_898) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_49 = mux(_wnList_res_re_rawIn_normDist_T_891, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_899) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_98 = dshl(wnList_res_re_rawIn_fractIn_49, wnList_res_re_rawIn_normDist_49) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_99 = bits(_wnList_res_re_rawIn_subnormFract_T_98, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_49 = shl(_wnList_res_re_rawIn_subnormFract_T_99, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_245 = xor(wnList_res_re_rawIn_normDist_49, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_246 = mux(wnList_res_re_rawIn_isZeroExpIn_49, _wnList_res_re_rawIn_adjustedExp_T_245, wnList_res_re_rawIn_expIn_49) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_247 = mux(wnList_res_re_rawIn_isZeroExpIn_49, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_248 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_247) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_249 = add(_wnList_res_re_rawIn_adjustedExp_T_246, _wnList_res_re_rawIn_adjustedExp_T_248) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_49 = tail(_wnList_res_re_rawIn_adjustedExp_T_249, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_49 = and(wnList_res_re_rawIn_isZeroExpIn_49, wnList_res_re_rawIn_isZeroFractIn_49) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_49 = bits(wnList_res_re_rawIn_adjustedExp_49, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_49 = eq(_wnList_res_re_rawIn_isSpecial_T_49, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_49 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_49 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_98 = eq(wnList_res_re_rawIn_isZeroFractIn_49, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_99 = and(wnList_res_re_rawIn_isSpecial_49, _wnList_res_re_rawIn_out_isNaN_T_98) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_49.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_99 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_49 = and(wnList_res_re_rawIn_isSpecial_49, wnList_res_re_rawIn_isZeroFractIn_49) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_49.isInf <= _wnList_res_re_rawIn_out_isInf_T_49 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_49.isZero <= wnList_res_re_rawIn_isZero_49 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_49.sign <= wnList_res_re_rawIn_sign_49 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_98 = bits(wnList_res_re_rawIn_adjustedExp_49, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_99 = cvt(_wnList_res_re_rawIn_out_sExp_T_98) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_49.sExp <= _wnList_res_re_rawIn_out_sExp_T_99 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_147 = eq(wnList_res_re_rawIn_isZero_49, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_148 = mux(wnList_res_re_rawIn_isZeroExpIn_49, wnList_res_re_rawIn_subnormFract_49, wnList_res_re_rawIn_fractIn_49) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_49 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_147) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_149 = cat(wnList_res_re_rawIn_out_sig_hi_49, _wnList_res_re_rawIn_out_sig_T_148) @[Cat.scala 33:92]
    wnList_res_re_rawIn_49.sig <= _wnList_res_re_rawIn_out_sig_T_149 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_393 = bits(wnList_res_re_rawIn_49.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_394 = mux(wnList_res_re_rawIn_49.isZero, UInt<3>("h0"), _wnList_res_re_T_393) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_395 = mux(wnList_res_re_rawIn_49.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_396 = or(_wnList_res_re_T_394, _wnList_res_re_T_395) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_397 = bits(wnList_res_re_rawIn_49.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_398 = bits(wnList_res_re_rawIn_49.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_49 = cat(_wnList_res_re_T_397, _wnList_res_re_T_398) @[Cat.scala 33:92]
    node wnList_res_re_hi_49 = cat(wnList_res_re_rawIn_49.sign, _wnList_res_re_T_396) @[Cat.scala 33:92]
    node _wnList_res_re_T_399 = cat(wnList_res_re_hi_49, wnList_res_re_lo_49) @[Cat.scala 33:92]
    node _wnList_res_re_T_400 = asUInt(asSInt(UInt<16>("h39a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_50 = bits(_wnList_res_re_T_400, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_50 = bits(_wnList_res_re_T_400, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_50 = bits(_wnList_res_re_T_400, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_50 = eq(wnList_res_re_rawIn_expIn_50, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_50 = eq(wnList_res_re_rawIn_fractIn_50, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_900 = bits(wnList_res_re_rawIn_fractIn_50, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_901 = bits(wnList_res_re_rawIn_fractIn_50, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_902 = bits(wnList_res_re_rawIn_fractIn_50, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_903 = bits(wnList_res_re_rawIn_fractIn_50, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_904 = bits(wnList_res_re_rawIn_fractIn_50, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_905 = bits(wnList_res_re_rawIn_fractIn_50, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_906 = bits(wnList_res_re_rawIn_fractIn_50, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_907 = bits(wnList_res_re_rawIn_fractIn_50, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_908 = bits(wnList_res_re_rawIn_fractIn_50, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_909 = bits(wnList_res_re_rawIn_fractIn_50, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_910 = mux(_wnList_res_re_rawIn_normDist_T_901, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_911 = mux(_wnList_res_re_rawIn_normDist_T_902, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_910) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_912 = mux(_wnList_res_re_rawIn_normDist_T_903, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_911) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_913 = mux(_wnList_res_re_rawIn_normDist_T_904, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_912) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_914 = mux(_wnList_res_re_rawIn_normDist_T_905, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_913) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_915 = mux(_wnList_res_re_rawIn_normDist_T_906, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_914) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_916 = mux(_wnList_res_re_rawIn_normDist_T_907, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_915) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_917 = mux(_wnList_res_re_rawIn_normDist_T_908, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_916) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_50 = mux(_wnList_res_re_rawIn_normDist_T_909, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_917) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_100 = dshl(wnList_res_re_rawIn_fractIn_50, wnList_res_re_rawIn_normDist_50) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_101 = bits(_wnList_res_re_rawIn_subnormFract_T_100, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_50 = shl(_wnList_res_re_rawIn_subnormFract_T_101, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_250 = xor(wnList_res_re_rawIn_normDist_50, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_251 = mux(wnList_res_re_rawIn_isZeroExpIn_50, _wnList_res_re_rawIn_adjustedExp_T_250, wnList_res_re_rawIn_expIn_50) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_252 = mux(wnList_res_re_rawIn_isZeroExpIn_50, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_253 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_252) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_254 = add(_wnList_res_re_rawIn_adjustedExp_T_251, _wnList_res_re_rawIn_adjustedExp_T_253) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_50 = tail(_wnList_res_re_rawIn_adjustedExp_T_254, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_50 = and(wnList_res_re_rawIn_isZeroExpIn_50, wnList_res_re_rawIn_isZeroFractIn_50) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_50 = bits(wnList_res_re_rawIn_adjustedExp_50, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_50 = eq(_wnList_res_re_rawIn_isSpecial_T_50, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_50 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_50 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_100 = eq(wnList_res_re_rawIn_isZeroFractIn_50, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_101 = and(wnList_res_re_rawIn_isSpecial_50, _wnList_res_re_rawIn_out_isNaN_T_100) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_50.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_101 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_50 = and(wnList_res_re_rawIn_isSpecial_50, wnList_res_re_rawIn_isZeroFractIn_50) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_50.isInf <= _wnList_res_re_rawIn_out_isInf_T_50 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_50.isZero <= wnList_res_re_rawIn_isZero_50 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_50.sign <= wnList_res_re_rawIn_sign_50 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_100 = bits(wnList_res_re_rawIn_adjustedExp_50, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_101 = cvt(_wnList_res_re_rawIn_out_sExp_T_100) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_50.sExp <= _wnList_res_re_rawIn_out_sExp_T_101 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_150 = eq(wnList_res_re_rawIn_isZero_50, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_151 = mux(wnList_res_re_rawIn_isZeroExpIn_50, wnList_res_re_rawIn_subnormFract_50, wnList_res_re_rawIn_fractIn_50) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_50 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_150) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_152 = cat(wnList_res_re_rawIn_out_sig_hi_50, _wnList_res_re_rawIn_out_sig_T_151) @[Cat.scala 33:92]
    wnList_res_re_rawIn_50.sig <= _wnList_res_re_rawIn_out_sig_T_152 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_401 = bits(wnList_res_re_rawIn_50.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_402 = mux(wnList_res_re_rawIn_50.isZero, UInt<3>("h0"), _wnList_res_re_T_401) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_403 = mux(wnList_res_re_rawIn_50.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_404 = or(_wnList_res_re_T_402, _wnList_res_re_T_403) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_405 = bits(wnList_res_re_rawIn_50.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_406 = bits(wnList_res_re_rawIn_50.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_50 = cat(_wnList_res_re_T_405, _wnList_res_re_T_406) @[Cat.scala 33:92]
    node wnList_res_re_hi_50 = cat(wnList_res_re_rawIn_50.sign, _wnList_res_re_T_404) @[Cat.scala 33:92]
    node _wnList_res_re_T_407 = cat(wnList_res_re_hi_50, wnList_res_re_lo_50) @[Cat.scala 33:92]
    node _wnList_res_re_T_408 = asUInt(asSInt(UInt<16>("h361f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_51 = bits(_wnList_res_re_T_408, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_51 = bits(_wnList_res_re_T_408, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_51 = bits(_wnList_res_re_T_408, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_51 = eq(wnList_res_re_rawIn_expIn_51, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_51 = eq(wnList_res_re_rawIn_fractIn_51, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_918 = bits(wnList_res_re_rawIn_fractIn_51, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_919 = bits(wnList_res_re_rawIn_fractIn_51, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_920 = bits(wnList_res_re_rawIn_fractIn_51, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_921 = bits(wnList_res_re_rawIn_fractIn_51, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_922 = bits(wnList_res_re_rawIn_fractIn_51, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_923 = bits(wnList_res_re_rawIn_fractIn_51, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_924 = bits(wnList_res_re_rawIn_fractIn_51, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_925 = bits(wnList_res_re_rawIn_fractIn_51, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_926 = bits(wnList_res_re_rawIn_fractIn_51, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_927 = bits(wnList_res_re_rawIn_fractIn_51, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_928 = mux(_wnList_res_re_rawIn_normDist_T_919, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_929 = mux(_wnList_res_re_rawIn_normDist_T_920, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_928) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_930 = mux(_wnList_res_re_rawIn_normDist_T_921, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_929) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_931 = mux(_wnList_res_re_rawIn_normDist_T_922, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_930) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_932 = mux(_wnList_res_re_rawIn_normDist_T_923, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_931) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_933 = mux(_wnList_res_re_rawIn_normDist_T_924, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_932) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_934 = mux(_wnList_res_re_rawIn_normDist_T_925, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_933) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_935 = mux(_wnList_res_re_rawIn_normDist_T_926, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_934) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_51 = mux(_wnList_res_re_rawIn_normDist_T_927, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_935) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_102 = dshl(wnList_res_re_rawIn_fractIn_51, wnList_res_re_rawIn_normDist_51) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_103 = bits(_wnList_res_re_rawIn_subnormFract_T_102, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_51 = shl(_wnList_res_re_rawIn_subnormFract_T_103, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_255 = xor(wnList_res_re_rawIn_normDist_51, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_256 = mux(wnList_res_re_rawIn_isZeroExpIn_51, _wnList_res_re_rawIn_adjustedExp_T_255, wnList_res_re_rawIn_expIn_51) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_257 = mux(wnList_res_re_rawIn_isZeroExpIn_51, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_258 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_257) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_259 = add(_wnList_res_re_rawIn_adjustedExp_T_256, _wnList_res_re_rawIn_adjustedExp_T_258) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_51 = tail(_wnList_res_re_rawIn_adjustedExp_T_259, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_51 = and(wnList_res_re_rawIn_isZeroExpIn_51, wnList_res_re_rawIn_isZeroFractIn_51) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_51 = bits(wnList_res_re_rawIn_adjustedExp_51, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_51 = eq(_wnList_res_re_rawIn_isSpecial_T_51, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_51 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_51 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_102 = eq(wnList_res_re_rawIn_isZeroFractIn_51, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_103 = and(wnList_res_re_rawIn_isSpecial_51, _wnList_res_re_rawIn_out_isNaN_T_102) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_51.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_103 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_51 = and(wnList_res_re_rawIn_isSpecial_51, wnList_res_re_rawIn_isZeroFractIn_51) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_51.isInf <= _wnList_res_re_rawIn_out_isInf_T_51 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_51.isZero <= wnList_res_re_rawIn_isZero_51 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_51.sign <= wnList_res_re_rawIn_sign_51 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_102 = bits(wnList_res_re_rawIn_adjustedExp_51, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_103 = cvt(_wnList_res_re_rawIn_out_sExp_T_102) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_51.sExp <= _wnList_res_re_rawIn_out_sExp_T_103 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_153 = eq(wnList_res_re_rawIn_isZero_51, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_154 = mux(wnList_res_re_rawIn_isZeroExpIn_51, wnList_res_re_rawIn_subnormFract_51, wnList_res_re_rawIn_fractIn_51) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_51 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_153) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_155 = cat(wnList_res_re_rawIn_out_sig_hi_51, _wnList_res_re_rawIn_out_sig_T_154) @[Cat.scala 33:92]
    wnList_res_re_rawIn_51.sig <= _wnList_res_re_rawIn_out_sig_T_155 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_409 = bits(wnList_res_re_rawIn_51.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_410 = mux(wnList_res_re_rawIn_51.isZero, UInt<3>("h0"), _wnList_res_re_T_409) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_411 = mux(wnList_res_re_rawIn_51.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_412 = or(_wnList_res_re_T_410, _wnList_res_re_T_411) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_413 = bits(wnList_res_re_rawIn_51.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_414 = bits(wnList_res_re_rawIn_51.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_51 = cat(_wnList_res_re_T_413, _wnList_res_re_T_414) @[Cat.scala 33:92]
    node wnList_res_re_hi_51 = cat(wnList_res_re_rawIn_51.sign, _wnList_res_re_T_412) @[Cat.scala 33:92]
    node _wnList_res_re_T_415 = cat(wnList_res_re_hi_51, wnList_res_re_lo_51) @[Cat.scala 33:92]
    node _wnList_res_re_T_416 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_52 = bits(_wnList_res_re_T_416, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_52 = bits(_wnList_res_re_T_416, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_52 = bits(_wnList_res_re_T_416, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_52 = eq(wnList_res_re_rawIn_expIn_52, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_52 = eq(wnList_res_re_rawIn_fractIn_52, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_936 = bits(wnList_res_re_rawIn_fractIn_52, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_937 = bits(wnList_res_re_rawIn_fractIn_52, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_938 = bits(wnList_res_re_rawIn_fractIn_52, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_939 = bits(wnList_res_re_rawIn_fractIn_52, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_940 = bits(wnList_res_re_rawIn_fractIn_52, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_941 = bits(wnList_res_re_rawIn_fractIn_52, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_942 = bits(wnList_res_re_rawIn_fractIn_52, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_943 = bits(wnList_res_re_rawIn_fractIn_52, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_944 = bits(wnList_res_re_rawIn_fractIn_52, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_945 = bits(wnList_res_re_rawIn_fractIn_52, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_946 = mux(_wnList_res_re_rawIn_normDist_T_937, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_947 = mux(_wnList_res_re_rawIn_normDist_T_938, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_946) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_948 = mux(_wnList_res_re_rawIn_normDist_T_939, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_947) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_949 = mux(_wnList_res_re_rawIn_normDist_T_940, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_948) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_950 = mux(_wnList_res_re_rawIn_normDist_T_941, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_949) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_951 = mux(_wnList_res_re_rawIn_normDist_T_942, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_950) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_952 = mux(_wnList_res_re_rawIn_normDist_T_943, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_951) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_953 = mux(_wnList_res_re_rawIn_normDist_T_944, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_952) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_52 = mux(_wnList_res_re_rawIn_normDist_T_945, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_953) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_104 = dshl(wnList_res_re_rawIn_fractIn_52, wnList_res_re_rawIn_normDist_52) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_105 = bits(_wnList_res_re_rawIn_subnormFract_T_104, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_52 = shl(_wnList_res_re_rawIn_subnormFract_T_105, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_260 = xor(wnList_res_re_rawIn_normDist_52, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_261 = mux(wnList_res_re_rawIn_isZeroExpIn_52, _wnList_res_re_rawIn_adjustedExp_T_260, wnList_res_re_rawIn_expIn_52) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_262 = mux(wnList_res_re_rawIn_isZeroExpIn_52, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_263 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_262) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_264 = add(_wnList_res_re_rawIn_adjustedExp_T_261, _wnList_res_re_rawIn_adjustedExp_T_263) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_52 = tail(_wnList_res_re_rawIn_adjustedExp_T_264, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_52 = and(wnList_res_re_rawIn_isZeroExpIn_52, wnList_res_re_rawIn_isZeroFractIn_52) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_52 = bits(wnList_res_re_rawIn_adjustedExp_52, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_52 = eq(_wnList_res_re_rawIn_isSpecial_T_52, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_52 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_52 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_104 = eq(wnList_res_re_rawIn_isZeroFractIn_52, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_105 = and(wnList_res_re_rawIn_isSpecial_52, _wnList_res_re_rawIn_out_isNaN_T_104) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_52.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_105 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_52 = and(wnList_res_re_rawIn_isSpecial_52, wnList_res_re_rawIn_isZeroFractIn_52) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_52.isInf <= _wnList_res_re_rawIn_out_isInf_T_52 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_52.isZero <= wnList_res_re_rawIn_isZero_52 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_52.sign <= wnList_res_re_rawIn_sign_52 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_104 = bits(wnList_res_re_rawIn_adjustedExp_52, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_105 = cvt(_wnList_res_re_rawIn_out_sExp_T_104) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_52.sExp <= _wnList_res_re_rawIn_out_sExp_T_105 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_156 = eq(wnList_res_re_rawIn_isZero_52, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_157 = mux(wnList_res_re_rawIn_isZeroExpIn_52, wnList_res_re_rawIn_subnormFract_52, wnList_res_re_rawIn_fractIn_52) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_52 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_156) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_158 = cat(wnList_res_re_rawIn_out_sig_hi_52, _wnList_res_re_rawIn_out_sig_T_157) @[Cat.scala 33:92]
    wnList_res_re_rawIn_52.sig <= _wnList_res_re_rawIn_out_sig_T_158 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_417 = bits(wnList_res_re_rawIn_52.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_418 = mux(wnList_res_re_rawIn_52.isZero, UInt<3>("h0"), _wnList_res_re_T_417) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_419 = mux(wnList_res_re_rawIn_52.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_420 = or(_wnList_res_re_T_418, _wnList_res_re_T_419) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_421 = bits(wnList_res_re_rawIn_52.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_422 = bits(wnList_res_re_rawIn_52.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_52 = cat(_wnList_res_re_T_421, _wnList_res_re_T_422) @[Cat.scala 33:92]
    node wnList_res_re_hi_52 = cat(wnList_res_re_rawIn_52.sign, _wnList_res_re_T_420) @[Cat.scala 33:92]
    node _wnList_res_re_T_423 = cat(wnList_res_re_hi_52, wnList_res_re_lo_52) @[Cat.scala 33:92]
    node _wnList_res_re_T_424 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_53 = bits(_wnList_res_re_T_424, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_53 = bits(_wnList_res_re_T_424, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_53 = bits(_wnList_res_re_T_424, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_53 = eq(wnList_res_re_rawIn_expIn_53, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_53 = eq(wnList_res_re_rawIn_fractIn_53, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_954 = bits(wnList_res_re_rawIn_fractIn_53, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_955 = bits(wnList_res_re_rawIn_fractIn_53, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_956 = bits(wnList_res_re_rawIn_fractIn_53, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_957 = bits(wnList_res_re_rawIn_fractIn_53, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_958 = bits(wnList_res_re_rawIn_fractIn_53, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_959 = bits(wnList_res_re_rawIn_fractIn_53, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_960 = bits(wnList_res_re_rawIn_fractIn_53, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_961 = bits(wnList_res_re_rawIn_fractIn_53, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_962 = bits(wnList_res_re_rawIn_fractIn_53, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_963 = bits(wnList_res_re_rawIn_fractIn_53, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_964 = mux(_wnList_res_re_rawIn_normDist_T_955, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_965 = mux(_wnList_res_re_rawIn_normDist_T_956, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_964) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_966 = mux(_wnList_res_re_rawIn_normDist_T_957, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_965) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_967 = mux(_wnList_res_re_rawIn_normDist_T_958, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_966) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_968 = mux(_wnList_res_re_rawIn_normDist_T_959, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_967) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_969 = mux(_wnList_res_re_rawIn_normDist_T_960, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_968) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_970 = mux(_wnList_res_re_rawIn_normDist_T_961, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_969) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_971 = mux(_wnList_res_re_rawIn_normDist_T_962, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_970) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_53 = mux(_wnList_res_re_rawIn_normDist_T_963, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_971) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_106 = dshl(wnList_res_re_rawIn_fractIn_53, wnList_res_re_rawIn_normDist_53) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_107 = bits(_wnList_res_re_rawIn_subnormFract_T_106, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_53 = shl(_wnList_res_re_rawIn_subnormFract_T_107, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_265 = xor(wnList_res_re_rawIn_normDist_53, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_266 = mux(wnList_res_re_rawIn_isZeroExpIn_53, _wnList_res_re_rawIn_adjustedExp_T_265, wnList_res_re_rawIn_expIn_53) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_267 = mux(wnList_res_re_rawIn_isZeroExpIn_53, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_268 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_267) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_269 = add(_wnList_res_re_rawIn_adjustedExp_T_266, _wnList_res_re_rawIn_adjustedExp_T_268) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_53 = tail(_wnList_res_re_rawIn_adjustedExp_T_269, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_53 = and(wnList_res_re_rawIn_isZeroExpIn_53, wnList_res_re_rawIn_isZeroFractIn_53) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_53 = bits(wnList_res_re_rawIn_adjustedExp_53, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_53 = eq(_wnList_res_re_rawIn_isSpecial_T_53, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_53 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_53 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_106 = eq(wnList_res_re_rawIn_isZeroFractIn_53, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_107 = and(wnList_res_re_rawIn_isSpecial_53, _wnList_res_re_rawIn_out_isNaN_T_106) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_53.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_107 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_53 = and(wnList_res_re_rawIn_isSpecial_53, wnList_res_re_rawIn_isZeroFractIn_53) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_53.isInf <= _wnList_res_re_rawIn_out_isInf_T_53 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_53.isZero <= wnList_res_re_rawIn_isZero_53 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_53.sign <= wnList_res_re_rawIn_sign_53 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_106 = bits(wnList_res_re_rawIn_adjustedExp_53, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_107 = cvt(_wnList_res_re_rawIn_out_sExp_T_106) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_53.sExp <= _wnList_res_re_rawIn_out_sExp_T_107 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_159 = eq(wnList_res_re_rawIn_isZero_53, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_160 = mux(wnList_res_re_rawIn_isZeroExpIn_53, wnList_res_re_rawIn_subnormFract_53, wnList_res_re_rawIn_fractIn_53) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_53 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_159) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_161 = cat(wnList_res_re_rawIn_out_sig_hi_53, _wnList_res_re_rawIn_out_sig_T_160) @[Cat.scala 33:92]
    wnList_res_re_rawIn_53.sig <= _wnList_res_re_rawIn_out_sig_T_161 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_425 = bits(wnList_res_re_rawIn_53.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_426 = mux(wnList_res_re_rawIn_53.isZero, UInt<3>("h0"), _wnList_res_re_T_425) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_427 = mux(wnList_res_re_rawIn_53.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_428 = or(_wnList_res_re_T_426, _wnList_res_re_T_427) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_429 = bits(wnList_res_re_rawIn_53.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_430 = bits(wnList_res_re_rawIn_53.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_53 = cat(_wnList_res_re_T_429, _wnList_res_re_T_430) @[Cat.scala 33:92]
    node wnList_res_re_hi_53 = cat(wnList_res_re_rawIn_53.sign, _wnList_res_re_T_428) @[Cat.scala 33:92]
    node _wnList_res_re_T_431 = cat(wnList_res_re_hi_53, wnList_res_re_lo_53) @[Cat.scala 33:92]
    node _wnList_res_re_T_432 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_54 = bits(_wnList_res_re_T_432, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_54 = bits(_wnList_res_re_T_432, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_54 = bits(_wnList_res_re_T_432, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_54 = eq(wnList_res_re_rawIn_expIn_54, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_54 = eq(wnList_res_re_rawIn_fractIn_54, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_972 = bits(wnList_res_re_rawIn_fractIn_54, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_973 = bits(wnList_res_re_rawIn_fractIn_54, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_974 = bits(wnList_res_re_rawIn_fractIn_54, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_975 = bits(wnList_res_re_rawIn_fractIn_54, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_976 = bits(wnList_res_re_rawIn_fractIn_54, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_977 = bits(wnList_res_re_rawIn_fractIn_54, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_978 = bits(wnList_res_re_rawIn_fractIn_54, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_979 = bits(wnList_res_re_rawIn_fractIn_54, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_980 = bits(wnList_res_re_rawIn_fractIn_54, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_981 = bits(wnList_res_re_rawIn_fractIn_54, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_982 = mux(_wnList_res_re_rawIn_normDist_T_973, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_983 = mux(_wnList_res_re_rawIn_normDist_T_974, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_982) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_984 = mux(_wnList_res_re_rawIn_normDist_T_975, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_983) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_985 = mux(_wnList_res_re_rawIn_normDist_T_976, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_984) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_986 = mux(_wnList_res_re_rawIn_normDist_T_977, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_985) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_987 = mux(_wnList_res_re_rawIn_normDist_T_978, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_986) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_988 = mux(_wnList_res_re_rawIn_normDist_T_979, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_987) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_989 = mux(_wnList_res_re_rawIn_normDist_T_980, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_988) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_54 = mux(_wnList_res_re_rawIn_normDist_T_981, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_989) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_108 = dshl(wnList_res_re_rawIn_fractIn_54, wnList_res_re_rawIn_normDist_54) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_109 = bits(_wnList_res_re_rawIn_subnormFract_T_108, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_54 = shl(_wnList_res_re_rawIn_subnormFract_T_109, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_270 = xor(wnList_res_re_rawIn_normDist_54, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_271 = mux(wnList_res_re_rawIn_isZeroExpIn_54, _wnList_res_re_rawIn_adjustedExp_T_270, wnList_res_re_rawIn_expIn_54) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_272 = mux(wnList_res_re_rawIn_isZeroExpIn_54, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_273 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_272) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_274 = add(_wnList_res_re_rawIn_adjustedExp_T_271, _wnList_res_re_rawIn_adjustedExp_T_273) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_54 = tail(_wnList_res_re_rawIn_adjustedExp_T_274, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_54 = and(wnList_res_re_rawIn_isZeroExpIn_54, wnList_res_re_rawIn_isZeroFractIn_54) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_54 = bits(wnList_res_re_rawIn_adjustedExp_54, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_54 = eq(_wnList_res_re_rawIn_isSpecial_T_54, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_54 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_54 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_108 = eq(wnList_res_re_rawIn_isZeroFractIn_54, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_109 = and(wnList_res_re_rawIn_isSpecial_54, _wnList_res_re_rawIn_out_isNaN_T_108) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_54.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_109 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_54 = and(wnList_res_re_rawIn_isSpecial_54, wnList_res_re_rawIn_isZeroFractIn_54) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_54.isInf <= _wnList_res_re_rawIn_out_isInf_T_54 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_54.isZero <= wnList_res_re_rawIn_isZero_54 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_54.sign <= wnList_res_re_rawIn_sign_54 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_108 = bits(wnList_res_re_rawIn_adjustedExp_54, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_109 = cvt(_wnList_res_re_rawIn_out_sExp_T_108) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_54.sExp <= _wnList_res_re_rawIn_out_sExp_T_109 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_162 = eq(wnList_res_re_rawIn_isZero_54, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_163 = mux(wnList_res_re_rawIn_isZeroExpIn_54, wnList_res_re_rawIn_subnormFract_54, wnList_res_re_rawIn_fractIn_54) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_54 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_162) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_164 = cat(wnList_res_re_rawIn_out_sig_hi_54, _wnList_res_re_rawIn_out_sig_T_163) @[Cat.scala 33:92]
    wnList_res_re_rawIn_54.sig <= _wnList_res_re_rawIn_out_sig_T_164 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_433 = bits(wnList_res_re_rawIn_54.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_434 = mux(wnList_res_re_rawIn_54.isZero, UInt<3>("h0"), _wnList_res_re_T_433) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_435 = mux(wnList_res_re_rawIn_54.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_436 = or(_wnList_res_re_T_434, _wnList_res_re_T_435) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_437 = bits(wnList_res_re_rawIn_54.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_438 = bits(wnList_res_re_rawIn_54.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_54 = cat(_wnList_res_re_T_437, _wnList_res_re_T_438) @[Cat.scala 33:92]
    node wnList_res_re_hi_54 = cat(wnList_res_re_rawIn_54.sign, _wnList_res_re_T_436) @[Cat.scala 33:92]
    node _wnList_res_re_T_439 = cat(wnList_res_re_hi_54, wnList_res_re_lo_54) @[Cat.scala 33:92]
    node _wnList_res_re_T_440 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_55 = bits(_wnList_res_re_T_440, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_55 = bits(_wnList_res_re_T_440, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_55 = bits(_wnList_res_re_T_440, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_55 = eq(wnList_res_re_rawIn_expIn_55, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_55 = eq(wnList_res_re_rawIn_fractIn_55, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_990 = bits(wnList_res_re_rawIn_fractIn_55, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_991 = bits(wnList_res_re_rawIn_fractIn_55, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_992 = bits(wnList_res_re_rawIn_fractIn_55, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_993 = bits(wnList_res_re_rawIn_fractIn_55, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_994 = bits(wnList_res_re_rawIn_fractIn_55, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_995 = bits(wnList_res_re_rawIn_fractIn_55, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_996 = bits(wnList_res_re_rawIn_fractIn_55, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_997 = bits(wnList_res_re_rawIn_fractIn_55, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_998 = bits(wnList_res_re_rawIn_fractIn_55, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_999 = bits(wnList_res_re_rawIn_fractIn_55, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1000 = mux(_wnList_res_re_rawIn_normDist_T_991, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1001 = mux(_wnList_res_re_rawIn_normDist_T_992, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1000) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1002 = mux(_wnList_res_re_rawIn_normDist_T_993, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1001) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1003 = mux(_wnList_res_re_rawIn_normDist_T_994, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1002) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1004 = mux(_wnList_res_re_rawIn_normDist_T_995, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1003) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1005 = mux(_wnList_res_re_rawIn_normDist_T_996, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1004) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1006 = mux(_wnList_res_re_rawIn_normDist_T_997, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1005) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1007 = mux(_wnList_res_re_rawIn_normDist_T_998, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1006) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_55 = mux(_wnList_res_re_rawIn_normDist_T_999, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1007) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_110 = dshl(wnList_res_re_rawIn_fractIn_55, wnList_res_re_rawIn_normDist_55) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_111 = bits(_wnList_res_re_rawIn_subnormFract_T_110, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_55 = shl(_wnList_res_re_rawIn_subnormFract_T_111, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_275 = xor(wnList_res_re_rawIn_normDist_55, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_276 = mux(wnList_res_re_rawIn_isZeroExpIn_55, _wnList_res_re_rawIn_adjustedExp_T_275, wnList_res_re_rawIn_expIn_55) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_277 = mux(wnList_res_re_rawIn_isZeroExpIn_55, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_278 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_277) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_279 = add(_wnList_res_re_rawIn_adjustedExp_T_276, _wnList_res_re_rawIn_adjustedExp_T_278) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_55 = tail(_wnList_res_re_rawIn_adjustedExp_T_279, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_55 = and(wnList_res_re_rawIn_isZeroExpIn_55, wnList_res_re_rawIn_isZeroFractIn_55) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_55 = bits(wnList_res_re_rawIn_adjustedExp_55, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_55 = eq(_wnList_res_re_rawIn_isSpecial_T_55, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_55 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_55 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_110 = eq(wnList_res_re_rawIn_isZeroFractIn_55, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_111 = and(wnList_res_re_rawIn_isSpecial_55, _wnList_res_re_rawIn_out_isNaN_T_110) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_55.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_111 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_55 = and(wnList_res_re_rawIn_isSpecial_55, wnList_res_re_rawIn_isZeroFractIn_55) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_55.isInf <= _wnList_res_re_rawIn_out_isInf_T_55 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_55.isZero <= wnList_res_re_rawIn_isZero_55 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_55.sign <= wnList_res_re_rawIn_sign_55 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_110 = bits(wnList_res_re_rawIn_adjustedExp_55, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_111 = cvt(_wnList_res_re_rawIn_out_sExp_T_110) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_55.sExp <= _wnList_res_re_rawIn_out_sExp_T_111 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_165 = eq(wnList_res_re_rawIn_isZero_55, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_166 = mux(wnList_res_re_rawIn_isZeroExpIn_55, wnList_res_re_rawIn_subnormFract_55, wnList_res_re_rawIn_fractIn_55) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_55 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_165) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_167 = cat(wnList_res_re_rawIn_out_sig_hi_55, _wnList_res_re_rawIn_out_sig_T_166) @[Cat.scala 33:92]
    wnList_res_re_rawIn_55.sig <= _wnList_res_re_rawIn_out_sig_T_167 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_441 = bits(wnList_res_re_rawIn_55.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_442 = mux(wnList_res_re_rawIn_55.isZero, UInt<3>("h0"), _wnList_res_re_T_441) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_443 = mux(wnList_res_re_rawIn_55.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_444 = or(_wnList_res_re_T_442, _wnList_res_re_T_443) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_445 = bits(wnList_res_re_rawIn_55.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_446 = bits(wnList_res_re_rawIn_55.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_55 = cat(_wnList_res_re_T_445, _wnList_res_re_T_446) @[Cat.scala 33:92]
    node wnList_res_re_hi_55 = cat(wnList_res_re_rawIn_55.sign, _wnList_res_re_T_444) @[Cat.scala 33:92]
    node _wnList_res_re_T_447 = cat(wnList_res_re_hi_55, wnList_res_re_lo_55) @[Cat.scala 33:92]
    wire _wnList_res_re_WIRE_2 : UInt<17>[8] @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[0] <= _wnList_res_re_T_391 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[1] <= _wnList_res_re_T_399 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[2] <= _wnList_res_re_T_407 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[3] <= _wnList_res_re_T_415 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[4] <= _wnList_res_re_T_423 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[5] <= _wnList_res_re_T_431 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[6] <= _wnList_res_re_T_439 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_2[7] <= _wnList_res_re_T_447 @[FFT.scala 100:12]
    wnList_0_2.re <= _wnList_res_re_WIRE_2[_wnList_T_5] @[FFT.scala 104:12]
    node _wnList_res_im_T_384 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_48 = bits(_wnList_res_im_T_384, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_48 = bits(_wnList_res_im_T_384, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_48 = bits(_wnList_res_im_T_384, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_48 = eq(wnList_res_im_rawIn_expIn_48, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_48 = eq(wnList_res_im_rawIn_fractIn_48, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_864 = bits(wnList_res_im_rawIn_fractIn_48, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_865 = bits(wnList_res_im_rawIn_fractIn_48, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_866 = bits(wnList_res_im_rawIn_fractIn_48, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_867 = bits(wnList_res_im_rawIn_fractIn_48, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_868 = bits(wnList_res_im_rawIn_fractIn_48, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_869 = bits(wnList_res_im_rawIn_fractIn_48, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_870 = bits(wnList_res_im_rawIn_fractIn_48, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_871 = bits(wnList_res_im_rawIn_fractIn_48, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_872 = bits(wnList_res_im_rawIn_fractIn_48, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_873 = bits(wnList_res_im_rawIn_fractIn_48, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_874 = mux(_wnList_res_im_rawIn_normDist_T_865, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_875 = mux(_wnList_res_im_rawIn_normDist_T_866, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_874) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_876 = mux(_wnList_res_im_rawIn_normDist_T_867, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_875) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_877 = mux(_wnList_res_im_rawIn_normDist_T_868, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_876) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_878 = mux(_wnList_res_im_rawIn_normDist_T_869, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_877) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_879 = mux(_wnList_res_im_rawIn_normDist_T_870, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_878) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_880 = mux(_wnList_res_im_rawIn_normDist_T_871, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_879) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_881 = mux(_wnList_res_im_rawIn_normDist_T_872, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_880) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_48 = mux(_wnList_res_im_rawIn_normDist_T_873, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_881) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_96 = dshl(wnList_res_im_rawIn_fractIn_48, wnList_res_im_rawIn_normDist_48) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_97 = bits(_wnList_res_im_rawIn_subnormFract_T_96, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_48 = shl(_wnList_res_im_rawIn_subnormFract_T_97, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_240 = xor(wnList_res_im_rawIn_normDist_48, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_241 = mux(wnList_res_im_rawIn_isZeroExpIn_48, _wnList_res_im_rawIn_adjustedExp_T_240, wnList_res_im_rawIn_expIn_48) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_242 = mux(wnList_res_im_rawIn_isZeroExpIn_48, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_243 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_242) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_244 = add(_wnList_res_im_rawIn_adjustedExp_T_241, _wnList_res_im_rawIn_adjustedExp_T_243) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_48 = tail(_wnList_res_im_rawIn_adjustedExp_T_244, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_48 = and(wnList_res_im_rawIn_isZeroExpIn_48, wnList_res_im_rawIn_isZeroFractIn_48) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_48 = bits(wnList_res_im_rawIn_adjustedExp_48, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_48 = eq(_wnList_res_im_rawIn_isSpecial_T_48, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_48 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_48 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_96 = eq(wnList_res_im_rawIn_isZeroFractIn_48, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_97 = and(wnList_res_im_rawIn_isSpecial_48, _wnList_res_im_rawIn_out_isNaN_T_96) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_48.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_97 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_48 = and(wnList_res_im_rawIn_isSpecial_48, wnList_res_im_rawIn_isZeroFractIn_48) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_48.isInf <= _wnList_res_im_rawIn_out_isInf_T_48 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_48.isZero <= wnList_res_im_rawIn_isZero_48 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_48.sign <= wnList_res_im_rawIn_sign_48 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_96 = bits(wnList_res_im_rawIn_adjustedExp_48, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_97 = cvt(_wnList_res_im_rawIn_out_sExp_T_96) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_48.sExp <= _wnList_res_im_rawIn_out_sExp_T_97 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_144 = eq(wnList_res_im_rawIn_isZero_48, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_145 = mux(wnList_res_im_rawIn_isZeroExpIn_48, wnList_res_im_rawIn_subnormFract_48, wnList_res_im_rawIn_fractIn_48) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_48 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_144) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_146 = cat(wnList_res_im_rawIn_out_sig_hi_48, _wnList_res_im_rawIn_out_sig_T_145) @[Cat.scala 33:92]
    wnList_res_im_rawIn_48.sig <= _wnList_res_im_rawIn_out_sig_T_146 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_385 = bits(wnList_res_im_rawIn_48.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_386 = mux(wnList_res_im_rawIn_48.isZero, UInt<3>("h0"), _wnList_res_im_T_385) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_387 = mux(wnList_res_im_rawIn_48.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_388 = or(_wnList_res_im_T_386, _wnList_res_im_T_387) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_389 = bits(wnList_res_im_rawIn_48.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_390 = bits(wnList_res_im_rawIn_48.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_48 = cat(_wnList_res_im_T_389, _wnList_res_im_T_390) @[Cat.scala 33:92]
    node wnList_res_im_hi_48 = cat(wnList_res_im_rawIn_48.sign, _wnList_res_im_T_388) @[Cat.scala 33:92]
    node _wnList_res_im_T_391 = cat(wnList_res_im_hi_48, wnList_res_im_lo_48) @[Cat.scala 33:92]
    node _wnList_res_im_T_392 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_49 = bits(_wnList_res_im_T_392, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_49 = bits(_wnList_res_im_T_392, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_49 = bits(_wnList_res_im_T_392, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_49 = eq(wnList_res_im_rawIn_expIn_49, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_49 = eq(wnList_res_im_rawIn_fractIn_49, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_882 = bits(wnList_res_im_rawIn_fractIn_49, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_883 = bits(wnList_res_im_rawIn_fractIn_49, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_884 = bits(wnList_res_im_rawIn_fractIn_49, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_885 = bits(wnList_res_im_rawIn_fractIn_49, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_886 = bits(wnList_res_im_rawIn_fractIn_49, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_887 = bits(wnList_res_im_rawIn_fractIn_49, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_888 = bits(wnList_res_im_rawIn_fractIn_49, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_889 = bits(wnList_res_im_rawIn_fractIn_49, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_890 = bits(wnList_res_im_rawIn_fractIn_49, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_891 = bits(wnList_res_im_rawIn_fractIn_49, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_892 = mux(_wnList_res_im_rawIn_normDist_T_883, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_893 = mux(_wnList_res_im_rawIn_normDist_T_884, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_892) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_894 = mux(_wnList_res_im_rawIn_normDist_T_885, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_893) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_895 = mux(_wnList_res_im_rawIn_normDist_T_886, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_894) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_896 = mux(_wnList_res_im_rawIn_normDist_T_887, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_895) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_897 = mux(_wnList_res_im_rawIn_normDist_T_888, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_896) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_898 = mux(_wnList_res_im_rawIn_normDist_T_889, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_897) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_899 = mux(_wnList_res_im_rawIn_normDist_T_890, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_898) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_49 = mux(_wnList_res_im_rawIn_normDist_T_891, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_899) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_98 = dshl(wnList_res_im_rawIn_fractIn_49, wnList_res_im_rawIn_normDist_49) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_99 = bits(_wnList_res_im_rawIn_subnormFract_T_98, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_49 = shl(_wnList_res_im_rawIn_subnormFract_T_99, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_245 = xor(wnList_res_im_rawIn_normDist_49, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_246 = mux(wnList_res_im_rawIn_isZeroExpIn_49, _wnList_res_im_rawIn_adjustedExp_T_245, wnList_res_im_rawIn_expIn_49) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_247 = mux(wnList_res_im_rawIn_isZeroExpIn_49, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_248 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_247) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_249 = add(_wnList_res_im_rawIn_adjustedExp_T_246, _wnList_res_im_rawIn_adjustedExp_T_248) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_49 = tail(_wnList_res_im_rawIn_adjustedExp_T_249, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_49 = and(wnList_res_im_rawIn_isZeroExpIn_49, wnList_res_im_rawIn_isZeroFractIn_49) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_49 = bits(wnList_res_im_rawIn_adjustedExp_49, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_49 = eq(_wnList_res_im_rawIn_isSpecial_T_49, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_49 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_49 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_98 = eq(wnList_res_im_rawIn_isZeroFractIn_49, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_99 = and(wnList_res_im_rawIn_isSpecial_49, _wnList_res_im_rawIn_out_isNaN_T_98) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_49.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_99 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_49 = and(wnList_res_im_rawIn_isSpecial_49, wnList_res_im_rawIn_isZeroFractIn_49) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_49.isInf <= _wnList_res_im_rawIn_out_isInf_T_49 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_49.isZero <= wnList_res_im_rawIn_isZero_49 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_49.sign <= wnList_res_im_rawIn_sign_49 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_98 = bits(wnList_res_im_rawIn_adjustedExp_49, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_99 = cvt(_wnList_res_im_rawIn_out_sExp_T_98) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_49.sExp <= _wnList_res_im_rawIn_out_sExp_T_99 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_147 = eq(wnList_res_im_rawIn_isZero_49, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_148 = mux(wnList_res_im_rawIn_isZeroExpIn_49, wnList_res_im_rawIn_subnormFract_49, wnList_res_im_rawIn_fractIn_49) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_49 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_147) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_149 = cat(wnList_res_im_rawIn_out_sig_hi_49, _wnList_res_im_rawIn_out_sig_T_148) @[Cat.scala 33:92]
    wnList_res_im_rawIn_49.sig <= _wnList_res_im_rawIn_out_sig_T_149 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_393 = bits(wnList_res_im_rawIn_49.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_394 = mux(wnList_res_im_rawIn_49.isZero, UInt<3>("h0"), _wnList_res_im_T_393) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_395 = mux(wnList_res_im_rawIn_49.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_396 = or(_wnList_res_im_T_394, _wnList_res_im_T_395) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_397 = bits(wnList_res_im_rawIn_49.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_398 = bits(wnList_res_im_rawIn_49.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_49 = cat(_wnList_res_im_T_397, _wnList_res_im_T_398) @[Cat.scala 33:92]
    node wnList_res_im_hi_49 = cat(wnList_res_im_rawIn_49.sign, _wnList_res_im_T_396) @[Cat.scala 33:92]
    node _wnList_res_im_T_399 = cat(wnList_res_im_hi_49, wnList_res_im_lo_49) @[Cat.scala 33:92]
    node _wnList_res_im_T_400 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_50 = bits(_wnList_res_im_T_400, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_50 = bits(_wnList_res_im_T_400, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_50 = bits(_wnList_res_im_T_400, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_50 = eq(wnList_res_im_rawIn_expIn_50, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_50 = eq(wnList_res_im_rawIn_fractIn_50, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_900 = bits(wnList_res_im_rawIn_fractIn_50, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_901 = bits(wnList_res_im_rawIn_fractIn_50, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_902 = bits(wnList_res_im_rawIn_fractIn_50, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_903 = bits(wnList_res_im_rawIn_fractIn_50, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_904 = bits(wnList_res_im_rawIn_fractIn_50, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_905 = bits(wnList_res_im_rawIn_fractIn_50, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_906 = bits(wnList_res_im_rawIn_fractIn_50, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_907 = bits(wnList_res_im_rawIn_fractIn_50, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_908 = bits(wnList_res_im_rawIn_fractIn_50, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_909 = bits(wnList_res_im_rawIn_fractIn_50, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_910 = mux(_wnList_res_im_rawIn_normDist_T_901, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_911 = mux(_wnList_res_im_rawIn_normDist_T_902, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_910) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_912 = mux(_wnList_res_im_rawIn_normDist_T_903, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_911) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_913 = mux(_wnList_res_im_rawIn_normDist_T_904, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_912) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_914 = mux(_wnList_res_im_rawIn_normDist_T_905, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_913) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_915 = mux(_wnList_res_im_rawIn_normDist_T_906, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_914) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_916 = mux(_wnList_res_im_rawIn_normDist_T_907, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_915) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_917 = mux(_wnList_res_im_rawIn_normDist_T_908, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_916) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_50 = mux(_wnList_res_im_rawIn_normDist_T_909, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_917) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_100 = dshl(wnList_res_im_rawIn_fractIn_50, wnList_res_im_rawIn_normDist_50) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_101 = bits(_wnList_res_im_rawIn_subnormFract_T_100, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_50 = shl(_wnList_res_im_rawIn_subnormFract_T_101, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_250 = xor(wnList_res_im_rawIn_normDist_50, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_251 = mux(wnList_res_im_rawIn_isZeroExpIn_50, _wnList_res_im_rawIn_adjustedExp_T_250, wnList_res_im_rawIn_expIn_50) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_252 = mux(wnList_res_im_rawIn_isZeroExpIn_50, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_253 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_252) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_254 = add(_wnList_res_im_rawIn_adjustedExp_T_251, _wnList_res_im_rawIn_adjustedExp_T_253) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_50 = tail(_wnList_res_im_rawIn_adjustedExp_T_254, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_50 = and(wnList_res_im_rawIn_isZeroExpIn_50, wnList_res_im_rawIn_isZeroFractIn_50) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_50 = bits(wnList_res_im_rawIn_adjustedExp_50, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_50 = eq(_wnList_res_im_rawIn_isSpecial_T_50, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_50 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_50 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_100 = eq(wnList_res_im_rawIn_isZeroFractIn_50, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_101 = and(wnList_res_im_rawIn_isSpecial_50, _wnList_res_im_rawIn_out_isNaN_T_100) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_50.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_101 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_50 = and(wnList_res_im_rawIn_isSpecial_50, wnList_res_im_rawIn_isZeroFractIn_50) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_50.isInf <= _wnList_res_im_rawIn_out_isInf_T_50 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_50.isZero <= wnList_res_im_rawIn_isZero_50 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_50.sign <= wnList_res_im_rawIn_sign_50 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_100 = bits(wnList_res_im_rawIn_adjustedExp_50, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_101 = cvt(_wnList_res_im_rawIn_out_sExp_T_100) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_50.sExp <= _wnList_res_im_rawIn_out_sExp_T_101 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_150 = eq(wnList_res_im_rawIn_isZero_50, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_151 = mux(wnList_res_im_rawIn_isZeroExpIn_50, wnList_res_im_rawIn_subnormFract_50, wnList_res_im_rawIn_fractIn_50) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_50 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_150) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_152 = cat(wnList_res_im_rawIn_out_sig_hi_50, _wnList_res_im_rawIn_out_sig_T_151) @[Cat.scala 33:92]
    wnList_res_im_rawIn_50.sig <= _wnList_res_im_rawIn_out_sig_T_152 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_401 = bits(wnList_res_im_rawIn_50.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_402 = mux(wnList_res_im_rawIn_50.isZero, UInt<3>("h0"), _wnList_res_im_T_401) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_403 = mux(wnList_res_im_rawIn_50.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_404 = or(_wnList_res_im_T_402, _wnList_res_im_T_403) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_405 = bits(wnList_res_im_rawIn_50.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_406 = bits(wnList_res_im_rawIn_50.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_50 = cat(_wnList_res_im_T_405, _wnList_res_im_T_406) @[Cat.scala 33:92]
    node wnList_res_im_hi_50 = cat(wnList_res_im_rawIn_50.sign, _wnList_res_im_T_404) @[Cat.scala 33:92]
    node _wnList_res_im_T_407 = cat(wnList_res_im_hi_50, wnList_res_im_lo_50) @[Cat.scala 33:92]
    node _wnList_res_im_T_408 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_51 = bits(_wnList_res_im_T_408, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_51 = bits(_wnList_res_im_T_408, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_51 = bits(_wnList_res_im_T_408, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_51 = eq(wnList_res_im_rawIn_expIn_51, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_51 = eq(wnList_res_im_rawIn_fractIn_51, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_918 = bits(wnList_res_im_rawIn_fractIn_51, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_919 = bits(wnList_res_im_rawIn_fractIn_51, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_920 = bits(wnList_res_im_rawIn_fractIn_51, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_921 = bits(wnList_res_im_rawIn_fractIn_51, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_922 = bits(wnList_res_im_rawIn_fractIn_51, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_923 = bits(wnList_res_im_rawIn_fractIn_51, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_924 = bits(wnList_res_im_rawIn_fractIn_51, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_925 = bits(wnList_res_im_rawIn_fractIn_51, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_926 = bits(wnList_res_im_rawIn_fractIn_51, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_927 = bits(wnList_res_im_rawIn_fractIn_51, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_928 = mux(_wnList_res_im_rawIn_normDist_T_919, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_929 = mux(_wnList_res_im_rawIn_normDist_T_920, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_928) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_930 = mux(_wnList_res_im_rawIn_normDist_T_921, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_929) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_931 = mux(_wnList_res_im_rawIn_normDist_T_922, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_930) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_932 = mux(_wnList_res_im_rawIn_normDist_T_923, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_931) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_933 = mux(_wnList_res_im_rawIn_normDist_T_924, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_932) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_934 = mux(_wnList_res_im_rawIn_normDist_T_925, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_933) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_935 = mux(_wnList_res_im_rawIn_normDist_T_926, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_934) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_51 = mux(_wnList_res_im_rawIn_normDist_T_927, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_935) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_102 = dshl(wnList_res_im_rawIn_fractIn_51, wnList_res_im_rawIn_normDist_51) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_103 = bits(_wnList_res_im_rawIn_subnormFract_T_102, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_51 = shl(_wnList_res_im_rawIn_subnormFract_T_103, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_255 = xor(wnList_res_im_rawIn_normDist_51, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_256 = mux(wnList_res_im_rawIn_isZeroExpIn_51, _wnList_res_im_rawIn_adjustedExp_T_255, wnList_res_im_rawIn_expIn_51) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_257 = mux(wnList_res_im_rawIn_isZeroExpIn_51, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_258 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_257) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_259 = add(_wnList_res_im_rawIn_adjustedExp_T_256, _wnList_res_im_rawIn_adjustedExp_T_258) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_51 = tail(_wnList_res_im_rawIn_adjustedExp_T_259, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_51 = and(wnList_res_im_rawIn_isZeroExpIn_51, wnList_res_im_rawIn_isZeroFractIn_51) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_51 = bits(wnList_res_im_rawIn_adjustedExp_51, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_51 = eq(_wnList_res_im_rawIn_isSpecial_T_51, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_51 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_51 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_102 = eq(wnList_res_im_rawIn_isZeroFractIn_51, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_103 = and(wnList_res_im_rawIn_isSpecial_51, _wnList_res_im_rawIn_out_isNaN_T_102) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_51.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_103 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_51 = and(wnList_res_im_rawIn_isSpecial_51, wnList_res_im_rawIn_isZeroFractIn_51) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_51.isInf <= _wnList_res_im_rawIn_out_isInf_T_51 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_51.isZero <= wnList_res_im_rawIn_isZero_51 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_51.sign <= wnList_res_im_rawIn_sign_51 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_102 = bits(wnList_res_im_rawIn_adjustedExp_51, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_103 = cvt(_wnList_res_im_rawIn_out_sExp_T_102) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_51.sExp <= _wnList_res_im_rawIn_out_sExp_T_103 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_153 = eq(wnList_res_im_rawIn_isZero_51, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_154 = mux(wnList_res_im_rawIn_isZeroExpIn_51, wnList_res_im_rawIn_subnormFract_51, wnList_res_im_rawIn_fractIn_51) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_51 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_153) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_155 = cat(wnList_res_im_rawIn_out_sig_hi_51, _wnList_res_im_rawIn_out_sig_T_154) @[Cat.scala 33:92]
    wnList_res_im_rawIn_51.sig <= _wnList_res_im_rawIn_out_sig_T_155 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_409 = bits(wnList_res_im_rawIn_51.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_410 = mux(wnList_res_im_rawIn_51.isZero, UInt<3>("h0"), _wnList_res_im_T_409) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_411 = mux(wnList_res_im_rawIn_51.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_412 = or(_wnList_res_im_T_410, _wnList_res_im_T_411) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_413 = bits(wnList_res_im_rawIn_51.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_414 = bits(wnList_res_im_rawIn_51.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_51 = cat(_wnList_res_im_T_413, _wnList_res_im_T_414) @[Cat.scala 33:92]
    node wnList_res_im_hi_51 = cat(wnList_res_im_rawIn_51.sign, _wnList_res_im_T_412) @[Cat.scala 33:92]
    node _wnList_res_im_T_415 = cat(wnList_res_im_hi_51, wnList_res_im_lo_51) @[Cat.scala 33:92]
    node _wnList_res_im_T_416 = asUInt(asSInt(UInt<16>("hbc00"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_52 = bits(_wnList_res_im_T_416, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_52 = bits(_wnList_res_im_T_416, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_52 = bits(_wnList_res_im_T_416, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_52 = eq(wnList_res_im_rawIn_expIn_52, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_52 = eq(wnList_res_im_rawIn_fractIn_52, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_936 = bits(wnList_res_im_rawIn_fractIn_52, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_937 = bits(wnList_res_im_rawIn_fractIn_52, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_938 = bits(wnList_res_im_rawIn_fractIn_52, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_939 = bits(wnList_res_im_rawIn_fractIn_52, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_940 = bits(wnList_res_im_rawIn_fractIn_52, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_941 = bits(wnList_res_im_rawIn_fractIn_52, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_942 = bits(wnList_res_im_rawIn_fractIn_52, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_943 = bits(wnList_res_im_rawIn_fractIn_52, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_944 = bits(wnList_res_im_rawIn_fractIn_52, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_945 = bits(wnList_res_im_rawIn_fractIn_52, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_946 = mux(_wnList_res_im_rawIn_normDist_T_937, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_947 = mux(_wnList_res_im_rawIn_normDist_T_938, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_946) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_948 = mux(_wnList_res_im_rawIn_normDist_T_939, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_947) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_949 = mux(_wnList_res_im_rawIn_normDist_T_940, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_948) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_950 = mux(_wnList_res_im_rawIn_normDist_T_941, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_949) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_951 = mux(_wnList_res_im_rawIn_normDist_T_942, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_950) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_952 = mux(_wnList_res_im_rawIn_normDist_T_943, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_951) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_953 = mux(_wnList_res_im_rawIn_normDist_T_944, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_952) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_52 = mux(_wnList_res_im_rawIn_normDist_T_945, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_953) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_104 = dshl(wnList_res_im_rawIn_fractIn_52, wnList_res_im_rawIn_normDist_52) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_105 = bits(_wnList_res_im_rawIn_subnormFract_T_104, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_52 = shl(_wnList_res_im_rawIn_subnormFract_T_105, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_260 = xor(wnList_res_im_rawIn_normDist_52, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_261 = mux(wnList_res_im_rawIn_isZeroExpIn_52, _wnList_res_im_rawIn_adjustedExp_T_260, wnList_res_im_rawIn_expIn_52) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_262 = mux(wnList_res_im_rawIn_isZeroExpIn_52, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_263 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_262) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_264 = add(_wnList_res_im_rawIn_adjustedExp_T_261, _wnList_res_im_rawIn_adjustedExp_T_263) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_52 = tail(_wnList_res_im_rawIn_adjustedExp_T_264, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_52 = and(wnList_res_im_rawIn_isZeroExpIn_52, wnList_res_im_rawIn_isZeroFractIn_52) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_52 = bits(wnList_res_im_rawIn_adjustedExp_52, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_52 = eq(_wnList_res_im_rawIn_isSpecial_T_52, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_52 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_52 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_104 = eq(wnList_res_im_rawIn_isZeroFractIn_52, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_105 = and(wnList_res_im_rawIn_isSpecial_52, _wnList_res_im_rawIn_out_isNaN_T_104) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_52.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_105 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_52 = and(wnList_res_im_rawIn_isSpecial_52, wnList_res_im_rawIn_isZeroFractIn_52) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_52.isInf <= _wnList_res_im_rawIn_out_isInf_T_52 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_52.isZero <= wnList_res_im_rawIn_isZero_52 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_52.sign <= wnList_res_im_rawIn_sign_52 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_104 = bits(wnList_res_im_rawIn_adjustedExp_52, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_105 = cvt(_wnList_res_im_rawIn_out_sExp_T_104) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_52.sExp <= _wnList_res_im_rawIn_out_sExp_T_105 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_156 = eq(wnList_res_im_rawIn_isZero_52, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_157 = mux(wnList_res_im_rawIn_isZeroExpIn_52, wnList_res_im_rawIn_subnormFract_52, wnList_res_im_rawIn_fractIn_52) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_52 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_156) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_158 = cat(wnList_res_im_rawIn_out_sig_hi_52, _wnList_res_im_rawIn_out_sig_T_157) @[Cat.scala 33:92]
    wnList_res_im_rawIn_52.sig <= _wnList_res_im_rawIn_out_sig_T_158 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_417 = bits(wnList_res_im_rawIn_52.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_418 = mux(wnList_res_im_rawIn_52.isZero, UInt<3>("h0"), _wnList_res_im_T_417) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_419 = mux(wnList_res_im_rawIn_52.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_420 = or(_wnList_res_im_T_418, _wnList_res_im_T_419) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_421 = bits(wnList_res_im_rawIn_52.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_422 = bits(wnList_res_im_rawIn_52.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_52 = cat(_wnList_res_im_T_421, _wnList_res_im_T_422) @[Cat.scala 33:92]
    node wnList_res_im_hi_52 = cat(wnList_res_im_rawIn_52.sign, _wnList_res_im_T_420) @[Cat.scala 33:92]
    node _wnList_res_im_T_423 = cat(wnList_res_im_hi_52, wnList_res_im_lo_52) @[Cat.scala 33:92]
    node _wnList_res_im_T_424 = asUInt(asSInt(UInt<16>("hbb64"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_53 = bits(_wnList_res_im_T_424, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_53 = bits(_wnList_res_im_T_424, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_53 = bits(_wnList_res_im_T_424, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_53 = eq(wnList_res_im_rawIn_expIn_53, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_53 = eq(wnList_res_im_rawIn_fractIn_53, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_954 = bits(wnList_res_im_rawIn_fractIn_53, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_955 = bits(wnList_res_im_rawIn_fractIn_53, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_956 = bits(wnList_res_im_rawIn_fractIn_53, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_957 = bits(wnList_res_im_rawIn_fractIn_53, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_958 = bits(wnList_res_im_rawIn_fractIn_53, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_959 = bits(wnList_res_im_rawIn_fractIn_53, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_960 = bits(wnList_res_im_rawIn_fractIn_53, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_961 = bits(wnList_res_im_rawIn_fractIn_53, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_962 = bits(wnList_res_im_rawIn_fractIn_53, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_963 = bits(wnList_res_im_rawIn_fractIn_53, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_964 = mux(_wnList_res_im_rawIn_normDist_T_955, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_965 = mux(_wnList_res_im_rawIn_normDist_T_956, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_964) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_966 = mux(_wnList_res_im_rawIn_normDist_T_957, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_965) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_967 = mux(_wnList_res_im_rawIn_normDist_T_958, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_966) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_968 = mux(_wnList_res_im_rawIn_normDist_T_959, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_967) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_969 = mux(_wnList_res_im_rawIn_normDist_T_960, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_968) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_970 = mux(_wnList_res_im_rawIn_normDist_T_961, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_969) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_971 = mux(_wnList_res_im_rawIn_normDist_T_962, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_970) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_53 = mux(_wnList_res_im_rawIn_normDist_T_963, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_971) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_106 = dshl(wnList_res_im_rawIn_fractIn_53, wnList_res_im_rawIn_normDist_53) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_107 = bits(_wnList_res_im_rawIn_subnormFract_T_106, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_53 = shl(_wnList_res_im_rawIn_subnormFract_T_107, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_265 = xor(wnList_res_im_rawIn_normDist_53, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_266 = mux(wnList_res_im_rawIn_isZeroExpIn_53, _wnList_res_im_rawIn_adjustedExp_T_265, wnList_res_im_rawIn_expIn_53) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_267 = mux(wnList_res_im_rawIn_isZeroExpIn_53, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_268 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_267) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_269 = add(_wnList_res_im_rawIn_adjustedExp_T_266, _wnList_res_im_rawIn_adjustedExp_T_268) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_53 = tail(_wnList_res_im_rawIn_adjustedExp_T_269, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_53 = and(wnList_res_im_rawIn_isZeroExpIn_53, wnList_res_im_rawIn_isZeroFractIn_53) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_53 = bits(wnList_res_im_rawIn_adjustedExp_53, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_53 = eq(_wnList_res_im_rawIn_isSpecial_T_53, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_53 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_53 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_106 = eq(wnList_res_im_rawIn_isZeroFractIn_53, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_107 = and(wnList_res_im_rawIn_isSpecial_53, _wnList_res_im_rawIn_out_isNaN_T_106) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_53.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_107 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_53 = and(wnList_res_im_rawIn_isSpecial_53, wnList_res_im_rawIn_isZeroFractIn_53) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_53.isInf <= _wnList_res_im_rawIn_out_isInf_T_53 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_53.isZero <= wnList_res_im_rawIn_isZero_53 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_53.sign <= wnList_res_im_rawIn_sign_53 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_106 = bits(wnList_res_im_rawIn_adjustedExp_53, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_107 = cvt(_wnList_res_im_rawIn_out_sExp_T_106) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_53.sExp <= _wnList_res_im_rawIn_out_sExp_T_107 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_159 = eq(wnList_res_im_rawIn_isZero_53, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_160 = mux(wnList_res_im_rawIn_isZeroExpIn_53, wnList_res_im_rawIn_subnormFract_53, wnList_res_im_rawIn_fractIn_53) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_53 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_159) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_161 = cat(wnList_res_im_rawIn_out_sig_hi_53, _wnList_res_im_rawIn_out_sig_T_160) @[Cat.scala 33:92]
    wnList_res_im_rawIn_53.sig <= _wnList_res_im_rawIn_out_sig_T_161 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_425 = bits(wnList_res_im_rawIn_53.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_426 = mux(wnList_res_im_rawIn_53.isZero, UInt<3>("h0"), _wnList_res_im_T_425) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_427 = mux(wnList_res_im_rawIn_53.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_428 = or(_wnList_res_im_T_426, _wnList_res_im_T_427) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_429 = bits(wnList_res_im_rawIn_53.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_430 = bits(wnList_res_im_rawIn_53.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_53 = cat(_wnList_res_im_T_429, _wnList_res_im_T_430) @[Cat.scala 33:92]
    node wnList_res_im_hi_53 = cat(wnList_res_im_rawIn_53.sign, _wnList_res_im_T_428) @[Cat.scala 33:92]
    node _wnList_res_im_T_431 = cat(wnList_res_im_hi_53, wnList_res_im_lo_53) @[Cat.scala 33:92]
    node _wnList_res_im_T_432 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_54 = bits(_wnList_res_im_T_432, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_54 = bits(_wnList_res_im_T_432, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_54 = bits(_wnList_res_im_T_432, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_54 = eq(wnList_res_im_rawIn_expIn_54, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_54 = eq(wnList_res_im_rawIn_fractIn_54, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_972 = bits(wnList_res_im_rawIn_fractIn_54, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_973 = bits(wnList_res_im_rawIn_fractIn_54, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_974 = bits(wnList_res_im_rawIn_fractIn_54, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_975 = bits(wnList_res_im_rawIn_fractIn_54, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_976 = bits(wnList_res_im_rawIn_fractIn_54, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_977 = bits(wnList_res_im_rawIn_fractIn_54, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_978 = bits(wnList_res_im_rawIn_fractIn_54, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_979 = bits(wnList_res_im_rawIn_fractIn_54, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_980 = bits(wnList_res_im_rawIn_fractIn_54, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_981 = bits(wnList_res_im_rawIn_fractIn_54, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_982 = mux(_wnList_res_im_rawIn_normDist_T_973, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_983 = mux(_wnList_res_im_rawIn_normDist_T_974, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_982) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_984 = mux(_wnList_res_im_rawIn_normDist_T_975, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_983) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_985 = mux(_wnList_res_im_rawIn_normDist_T_976, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_984) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_986 = mux(_wnList_res_im_rawIn_normDist_T_977, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_985) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_987 = mux(_wnList_res_im_rawIn_normDist_T_978, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_986) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_988 = mux(_wnList_res_im_rawIn_normDist_T_979, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_987) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_989 = mux(_wnList_res_im_rawIn_normDist_T_980, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_988) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_54 = mux(_wnList_res_im_rawIn_normDist_T_981, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_989) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_108 = dshl(wnList_res_im_rawIn_fractIn_54, wnList_res_im_rawIn_normDist_54) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_109 = bits(_wnList_res_im_rawIn_subnormFract_T_108, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_54 = shl(_wnList_res_im_rawIn_subnormFract_T_109, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_270 = xor(wnList_res_im_rawIn_normDist_54, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_271 = mux(wnList_res_im_rawIn_isZeroExpIn_54, _wnList_res_im_rawIn_adjustedExp_T_270, wnList_res_im_rawIn_expIn_54) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_272 = mux(wnList_res_im_rawIn_isZeroExpIn_54, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_273 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_272) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_274 = add(_wnList_res_im_rawIn_adjustedExp_T_271, _wnList_res_im_rawIn_adjustedExp_T_273) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_54 = tail(_wnList_res_im_rawIn_adjustedExp_T_274, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_54 = and(wnList_res_im_rawIn_isZeroExpIn_54, wnList_res_im_rawIn_isZeroFractIn_54) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_54 = bits(wnList_res_im_rawIn_adjustedExp_54, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_54 = eq(_wnList_res_im_rawIn_isSpecial_T_54, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_54 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_54 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_108 = eq(wnList_res_im_rawIn_isZeroFractIn_54, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_109 = and(wnList_res_im_rawIn_isSpecial_54, _wnList_res_im_rawIn_out_isNaN_T_108) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_54.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_109 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_54 = and(wnList_res_im_rawIn_isSpecial_54, wnList_res_im_rawIn_isZeroFractIn_54) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_54.isInf <= _wnList_res_im_rawIn_out_isInf_T_54 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_54.isZero <= wnList_res_im_rawIn_isZero_54 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_54.sign <= wnList_res_im_rawIn_sign_54 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_108 = bits(wnList_res_im_rawIn_adjustedExp_54, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_109 = cvt(_wnList_res_im_rawIn_out_sExp_T_108) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_54.sExp <= _wnList_res_im_rawIn_out_sExp_T_109 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_162 = eq(wnList_res_im_rawIn_isZero_54, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_163 = mux(wnList_res_im_rawIn_isZeroExpIn_54, wnList_res_im_rawIn_subnormFract_54, wnList_res_im_rawIn_fractIn_54) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_54 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_162) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_164 = cat(wnList_res_im_rawIn_out_sig_hi_54, _wnList_res_im_rawIn_out_sig_T_163) @[Cat.scala 33:92]
    wnList_res_im_rawIn_54.sig <= _wnList_res_im_rawIn_out_sig_T_164 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_433 = bits(wnList_res_im_rawIn_54.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_434 = mux(wnList_res_im_rawIn_54.isZero, UInt<3>("h0"), _wnList_res_im_T_433) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_435 = mux(wnList_res_im_rawIn_54.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_436 = or(_wnList_res_im_T_434, _wnList_res_im_T_435) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_437 = bits(wnList_res_im_rawIn_54.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_438 = bits(wnList_res_im_rawIn_54.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_54 = cat(_wnList_res_im_T_437, _wnList_res_im_T_438) @[Cat.scala 33:92]
    node wnList_res_im_hi_54 = cat(wnList_res_im_rawIn_54.sign, _wnList_res_im_T_436) @[Cat.scala 33:92]
    node _wnList_res_im_T_439 = cat(wnList_res_im_hi_54, wnList_res_im_lo_54) @[Cat.scala 33:92]
    node _wnList_res_im_T_440 = asUInt(asSInt(UInt<16>("hb61f"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_55 = bits(_wnList_res_im_T_440, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_55 = bits(_wnList_res_im_T_440, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_55 = bits(_wnList_res_im_T_440, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_55 = eq(wnList_res_im_rawIn_expIn_55, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_55 = eq(wnList_res_im_rawIn_fractIn_55, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_990 = bits(wnList_res_im_rawIn_fractIn_55, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_991 = bits(wnList_res_im_rawIn_fractIn_55, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_992 = bits(wnList_res_im_rawIn_fractIn_55, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_993 = bits(wnList_res_im_rawIn_fractIn_55, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_994 = bits(wnList_res_im_rawIn_fractIn_55, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_995 = bits(wnList_res_im_rawIn_fractIn_55, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_996 = bits(wnList_res_im_rawIn_fractIn_55, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_997 = bits(wnList_res_im_rawIn_fractIn_55, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_998 = bits(wnList_res_im_rawIn_fractIn_55, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_999 = bits(wnList_res_im_rawIn_fractIn_55, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1000 = mux(_wnList_res_im_rawIn_normDist_T_991, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1001 = mux(_wnList_res_im_rawIn_normDist_T_992, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1000) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1002 = mux(_wnList_res_im_rawIn_normDist_T_993, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1001) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1003 = mux(_wnList_res_im_rawIn_normDist_T_994, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1002) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1004 = mux(_wnList_res_im_rawIn_normDist_T_995, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1003) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1005 = mux(_wnList_res_im_rawIn_normDist_T_996, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1004) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1006 = mux(_wnList_res_im_rawIn_normDist_T_997, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1005) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1007 = mux(_wnList_res_im_rawIn_normDist_T_998, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1006) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_55 = mux(_wnList_res_im_rawIn_normDist_T_999, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1007) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_110 = dshl(wnList_res_im_rawIn_fractIn_55, wnList_res_im_rawIn_normDist_55) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_111 = bits(_wnList_res_im_rawIn_subnormFract_T_110, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_55 = shl(_wnList_res_im_rawIn_subnormFract_T_111, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_275 = xor(wnList_res_im_rawIn_normDist_55, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_276 = mux(wnList_res_im_rawIn_isZeroExpIn_55, _wnList_res_im_rawIn_adjustedExp_T_275, wnList_res_im_rawIn_expIn_55) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_277 = mux(wnList_res_im_rawIn_isZeroExpIn_55, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_278 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_277) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_279 = add(_wnList_res_im_rawIn_adjustedExp_T_276, _wnList_res_im_rawIn_adjustedExp_T_278) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_55 = tail(_wnList_res_im_rawIn_adjustedExp_T_279, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_55 = and(wnList_res_im_rawIn_isZeroExpIn_55, wnList_res_im_rawIn_isZeroFractIn_55) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_55 = bits(wnList_res_im_rawIn_adjustedExp_55, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_55 = eq(_wnList_res_im_rawIn_isSpecial_T_55, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_55 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_55 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_110 = eq(wnList_res_im_rawIn_isZeroFractIn_55, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_111 = and(wnList_res_im_rawIn_isSpecial_55, _wnList_res_im_rawIn_out_isNaN_T_110) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_55.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_111 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_55 = and(wnList_res_im_rawIn_isSpecial_55, wnList_res_im_rawIn_isZeroFractIn_55) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_55.isInf <= _wnList_res_im_rawIn_out_isInf_T_55 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_55.isZero <= wnList_res_im_rawIn_isZero_55 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_55.sign <= wnList_res_im_rawIn_sign_55 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_110 = bits(wnList_res_im_rawIn_adjustedExp_55, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_111 = cvt(_wnList_res_im_rawIn_out_sExp_T_110) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_55.sExp <= _wnList_res_im_rawIn_out_sExp_T_111 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_165 = eq(wnList_res_im_rawIn_isZero_55, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_166 = mux(wnList_res_im_rawIn_isZeroExpIn_55, wnList_res_im_rawIn_subnormFract_55, wnList_res_im_rawIn_fractIn_55) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_55 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_165) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_167 = cat(wnList_res_im_rawIn_out_sig_hi_55, _wnList_res_im_rawIn_out_sig_T_166) @[Cat.scala 33:92]
    wnList_res_im_rawIn_55.sig <= _wnList_res_im_rawIn_out_sig_T_167 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_441 = bits(wnList_res_im_rawIn_55.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_442 = mux(wnList_res_im_rawIn_55.isZero, UInt<3>("h0"), _wnList_res_im_T_441) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_443 = mux(wnList_res_im_rawIn_55.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_444 = or(_wnList_res_im_T_442, _wnList_res_im_T_443) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_445 = bits(wnList_res_im_rawIn_55.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_446 = bits(wnList_res_im_rawIn_55.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_55 = cat(_wnList_res_im_T_445, _wnList_res_im_T_446) @[Cat.scala 33:92]
    node wnList_res_im_hi_55 = cat(wnList_res_im_rawIn_55.sign, _wnList_res_im_T_444) @[Cat.scala 33:92]
    node _wnList_res_im_T_447 = cat(wnList_res_im_hi_55, wnList_res_im_lo_55) @[Cat.scala 33:92]
    wire _wnList_res_im_WIRE_2 : UInt<17>[8] @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[0] <= _wnList_res_im_T_391 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[1] <= _wnList_res_im_T_399 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[2] <= _wnList_res_im_T_407 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[3] <= _wnList_res_im_T_415 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[4] <= _wnList_res_im_T_423 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[5] <= _wnList_res_im_T_431 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[6] <= _wnList_res_im_T_439 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_2[7] <= _wnList_res_im_T_447 @[FFT.scala 88:12]
    wnList_0_2.im <= _wnList_res_im_WIRE_2[_wnList_T_5] @[FFT.scala 105:12]
    inst inst_2 of ButterflyMul_2 @[Modules.scala 287:22]
    inst_2.clock <= clock
    inst_2.reset <= reset
    inst_2.io.in[0].im <= data1_2_0[0].im @[Modules.scala 288:16]
    inst_2.io.in[0].re <= data1_2_0[0].re @[Modules.scala 288:16]
    inst_2.io.in[1].im <= data1_2_0[1].im @[Modules.scala 288:16]
    inst_2.io.in[1].re <= data1_2_0[1].re @[Modules.scala 288:16]
    inst_2.io.wn[0].im <= wnList_0_2.im @[Modules.scala 289:16]
    inst_2.io.wn[0].re <= wnList_0_2.re @[Modules.scala 289:16]
    data2_2_0 <= inst_2.io.out @[FFT.scala 136:19]
    node wnCtrl_3 = bits(cnt_0, 1, 0) @[FFT.scala 131:23]
    node _wnList_T_6 = add(UInt<1>("h0"), wnCtrl_3) @[FFT.scala 135:96]
    node _wnList_T_7 = tail(_wnList_T_6, 1) @[FFT.scala 135:96]
    wire wnList_0_3 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 103:19]
    node _wnList_res_re_T_448 = asUInt(asSInt(UInt<16>("h3c00"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_56 = bits(_wnList_res_re_T_448, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_56 = bits(_wnList_res_re_T_448, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_56 = bits(_wnList_res_re_T_448, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_56 = eq(wnList_res_re_rawIn_expIn_56, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_56 = eq(wnList_res_re_rawIn_fractIn_56, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_1008 = bits(wnList_res_re_rawIn_fractIn_56, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1009 = bits(wnList_res_re_rawIn_fractIn_56, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1010 = bits(wnList_res_re_rawIn_fractIn_56, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1011 = bits(wnList_res_re_rawIn_fractIn_56, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1012 = bits(wnList_res_re_rawIn_fractIn_56, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1013 = bits(wnList_res_re_rawIn_fractIn_56, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1014 = bits(wnList_res_re_rawIn_fractIn_56, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1015 = bits(wnList_res_re_rawIn_fractIn_56, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1016 = bits(wnList_res_re_rawIn_fractIn_56, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1017 = bits(wnList_res_re_rawIn_fractIn_56, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1018 = mux(_wnList_res_re_rawIn_normDist_T_1009, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1019 = mux(_wnList_res_re_rawIn_normDist_T_1010, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1018) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1020 = mux(_wnList_res_re_rawIn_normDist_T_1011, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1019) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1021 = mux(_wnList_res_re_rawIn_normDist_T_1012, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1020) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1022 = mux(_wnList_res_re_rawIn_normDist_T_1013, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1021) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1023 = mux(_wnList_res_re_rawIn_normDist_T_1014, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1022) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1024 = mux(_wnList_res_re_rawIn_normDist_T_1015, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1023) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1025 = mux(_wnList_res_re_rawIn_normDist_T_1016, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1024) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_56 = mux(_wnList_res_re_rawIn_normDist_T_1017, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1025) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_112 = dshl(wnList_res_re_rawIn_fractIn_56, wnList_res_re_rawIn_normDist_56) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_113 = bits(_wnList_res_re_rawIn_subnormFract_T_112, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_56 = shl(_wnList_res_re_rawIn_subnormFract_T_113, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_280 = xor(wnList_res_re_rawIn_normDist_56, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_281 = mux(wnList_res_re_rawIn_isZeroExpIn_56, _wnList_res_re_rawIn_adjustedExp_T_280, wnList_res_re_rawIn_expIn_56) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_282 = mux(wnList_res_re_rawIn_isZeroExpIn_56, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_283 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_282) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_284 = add(_wnList_res_re_rawIn_adjustedExp_T_281, _wnList_res_re_rawIn_adjustedExp_T_283) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_56 = tail(_wnList_res_re_rawIn_adjustedExp_T_284, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_56 = and(wnList_res_re_rawIn_isZeroExpIn_56, wnList_res_re_rawIn_isZeroFractIn_56) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_56 = bits(wnList_res_re_rawIn_adjustedExp_56, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_56 = eq(_wnList_res_re_rawIn_isSpecial_T_56, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_56 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_56 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_112 = eq(wnList_res_re_rawIn_isZeroFractIn_56, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_113 = and(wnList_res_re_rawIn_isSpecial_56, _wnList_res_re_rawIn_out_isNaN_T_112) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_56.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_113 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_56 = and(wnList_res_re_rawIn_isSpecial_56, wnList_res_re_rawIn_isZeroFractIn_56) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_56.isInf <= _wnList_res_re_rawIn_out_isInf_T_56 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_56.isZero <= wnList_res_re_rawIn_isZero_56 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_56.sign <= wnList_res_re_rawIn_sign_56 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_112 = bits(wnList_res_re_rawIn_adjustedExp_56, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_113 = cvt(_wnList_res_re_rawIn_out_sExp_T_112) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_56.sExp <= _wnList_res_re_rawIn_out_sExp_T_113 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_168 = eq(wnList_res_re_rawIn_isZero_56, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_169 = mux(wnList_res_re_rawIn_isZeroExpIn_56, wnList_res_re_rawIn_subnormFract_56, wnList_res_re_rawIn_fractIn_56) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_56 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_168) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_170 = cat(wnList_res_re_rawIn_out_sig_hi_56, _wnList_res_re_rawIn_out_sig_T_169) @[Cat.scala 33:92]
    wnList_res_re_rawIn_56.sig <= _wnList_res_re_rawIn_out_sig_T_170 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_449 = bits(wnList_res_re_rawIn_56.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_450 = mux(wnList_res_re_rawIn_56.isZero, UInt<3>("h0"), _wnList_res_re_T_449) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_451 = mux(wnList_res_re_rawIn_56.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_452 = or(_wnList_res_re_T_450, _wnList_res_re_T_451) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_453 = bits(wnList_res_re_rawIn_56.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_454 = bits(wnList_res_re_rawIn_56.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_56 = cat(_wnList_res_re_T_453, _wnList_res_re_T_454) @[Cat.scala 33:92]
    node wnList_res_re_hi_56 = cat(wnList_res_re_rawIn_56.sign, _wnList_res_re_T_452) @[Cat.scala 33:92]
    node _wnList_res_re_T_455 = cat(wnList_res_re_hi_56, wnList_res_re_lo_56) @[Cat.scala 33:92]
    node _wnList_res_re_T_456 = asUInt(asSInt(UInt<16>("h39a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_57 = bits(_wnList_res_re_T_456, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_57 = bits(_wnList_res_re_T_456, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_57 = bits(_wnList_res_re_T_456, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_57 = eq(wnList_res_re_rawIn_expIn_57, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_57 = eq(wnList_res_re_rawIn_fractIn_57, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_1026 = bits(wnList_res_re_rawIn_fractIn_57, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1027 = bits(wnList_res_re_rawIn_fractIn_57, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1028 = bits(wnList_res_re_rawIn_fractIn_57, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1029 = bits(wnList_res_re_rawIn_fractIn_57, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1030 = bits(wnList_res_re_rawIn_fractIn_57, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1031 = bits(wnList_res_re_rawIn_fractIn_57, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1032 = bits(wnList_res_re_rawIn_fractIn_57, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1033 = bits(wnList_res_re_rawIn_fractIn_57, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1034 = bits(wnList_res_re_rawIn_fractIn_57, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1035 = bits(wnList_res_re_rawIn_fractIn_57, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1036 = mux(_wnList_res_re_rawIn_normDist_T_1027, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1037 = mux(_wnList_res_re_rawIn_normDist_T_1028, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1036) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1038 = mux(_wnList_res_re_rawIn_normDist_T_1029, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1037) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1039 = mux(_wnList_res_re_rawIn_normDist_T_1030, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1038) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1040 = mux(_wnList_res_re_rawIn_normDist_T_1031, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1039) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1041 = mux(_wnList_res_re_rawIn_normDist_T_1032, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1040) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1042 = mux(_wnList_res_re_rawIn_normDist_T_1033, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1041) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1043 = mux(_wnList_res_re_rawIn_normDist_T_1034, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1042) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_57 = mux(_wnList_res_re_rawIn_normDist_T_1035, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1043) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_114 = dshl(wnList_res_re_rawIn_fractIn_57, wnList_res_re_rawIn_normDist_57) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_115 = bits(_wnList_res_re_rawIn_subnormFract_T_114, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_57 = shl(_wnList_res_re_rawIn_subnormFract_T_115, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_285 = xor(wnList_res_re_rawIn_normDist_57, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_286 = mux(wnList_res_re_rawIn_isZeroExpIn_57, _wnList_res_re_rawIn_adjustedExp_T_285, wnList_res_re_rawIn_expIn_57) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_287 = mux(wnList_res_re_rawIn_isZeroExpIn_57, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_288 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_287) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_289 = add(_wnList_res_re_rawIn_adjustedExp_T_286, _wnList_res_re_rawIn_adjustedExp_T_288) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_57 = tail(_wnList_res_re_rawIn_adjustedExp_T_289, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_57 = and(wnList_res_re_rawIn_isZeroExpIn_57, wnList_res_re_rawIn_isZeroFractIn_57) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_57 = bits(wnList_res_re_rawIn_adjustedExp_57, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_57 = eq(_wnList_res_re_rawIn_isSpecial_T_57, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_57 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_57 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_114 = eq(wnList_res_re_rawIn_isZeroFractIn_57, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_115 = and(wnList_res_re_rawIn_isSpecial_57, _wnList_res_re_rawIn_out_isNaN_T_114) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_57.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_115 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_57 = and(wnList_res_re_rawIn_isSpecial_57, wnList_res_re_rawIn_isZeroFractIn_57) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_57.isInf <= _wnList_res_re_rawIn_out_isInf_T_57 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_57.isZero <= wnList_res_re_rawIn_isZero_57 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_57.sign <= wnList_res_re_rawIn_sign_57 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_114 = bits(wnList_res_re_rawIn_adjustedExp_57, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_115 = cvt(_wnList_res_re_rawIn_out_sExp_T_114) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_57.sExp <= _wnList_res_re_rawIn_out_sExp_T_115 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_171 = eq(wnList_res_re_rawIn_isZero_57, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_172 = mux(wnList_res_re_rawIn_isZeroExpIn_57, wnList_res_re_rawIn_subnormFract_57, wnList_res_re_rawIn_fractIn_57) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_57 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_171) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_173 = cat(wnList_res_re_rawIn_out_sig_hi_57, _wnList_res_re_rawIn_out_sig_T_172) @[Cat.scala 33:92]
    wnList_res_re_rawIn_57.sig <= _wnList_res_re_rawIn_out_sig_T_173 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_457 = bits(wnList_res_re_rawIn_57.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_458 = mux(wnList_res_re_rawIn_57.isZero, UInt<3>("h0"), _wnList_res_re_T_457) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_459 = mux(wnList_res_re_rawIn_57.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_460 = or(_wnList_res_re_T_458, _wnList_res_re_T_459) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_461 = bits(wnList_res_re_rawIn_57.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_462 = bits(wnList_res_re_rawIn_57.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_57 = cat(_wnList_res_re_T_461, _wnList_res_re_T_462) @[Cat.scala 33:92]
    node wnList_res_re_hi_57 = cat(wnList_res_re_rawIn_57.sign, _wnList_res_re_T_460) @[Cat.scala 33:92]
    node _wnList_res_re_T_463 = cat(wnList_res_re_hi_57, wnList_res_re_lo_57) @[Cat.scala 33:92]
    node _wnList_res_re_T_464 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_58 = bits(_wnList_res_re_T_464, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_58 = bits(_wnList_res_re_T_464, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_58 = bits(_wnList_res_re_T_464, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_58 = eq(wnList_res_re_rawIn_expIn_58, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_58 = eq(wnList_res_re_rawIn_fractIn_58, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_1044 = bits(wnList_res_re_rawIn_fractIn_58, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1045 = bits(wnList_res_re_rawIn_fractIn_58, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1046 = bits(wnList_res_re_rawIn_fractIn_58, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1047 = bits(wnList_res_re_rawIn_fractIn_58, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1048 = bits(wnList_res_re_rawIn_fractIn_58, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1049 = bits(wnList_res_re_rawIn_fractIn_58, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1050 = bits(wnList_res_re_rawIn_fractIn_58, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1051 = bits(wnList_res_re_rawIn_fractIn_58, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1052 = bits(wnList_res_re_rawIn_fractIn_58, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1053 = bits(wnList_res_re_rawIn_fractIn_58, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1054 = mux(_wnList_res_re_rawIn_normDist_T_1045, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1055 = mux(_wnList_res_re_rawIn_normDist_T_1046, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1054) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1056 = mux(_wnList_res_re_rawIn_normDist_T_1047, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1055) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1057 = mux(_wnList_res_re_rawIn_normDist_T_1048, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1056) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1058 = mux(_wnList_res_re_rawIn_normDist_T_1049, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1057) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1059 = mux(_wnList_res_re_rawIn_normDist_T_1050, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1058) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1060 = mux(_wnList_res_re_rawIn_normDist_T_1051, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1059) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1061 = mux(_wnList_res_re_rawIn_normDist_T_1052, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1060) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_58 = mux(_wnList_res_re_rawIn_normDist_T_1053, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1061) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_116 = dshl(wnList_res_re_rawIn_fractIn_58, wnList_res_re_rawIn_normDist_58) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_117 = bits(_wnList_res_re_rawIn_subnormFract_T_116, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_58 = shl(_wnList_res_re_rawIn_subnormFract_T_117, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_290 = xor(wnList_res_re_rawIn_normDist_58, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_291 = mux(wnList_res_re_rawIn_isZeroExpIn_58, _wnList_res_re_rawIn_adjustedExp_T_290, wnList_res_re_rawIn_expIn_58) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_292 = mux(wnList_res_re_rawIn_isZeroExpIn_58, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_293 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_292) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_294 = add(_wnList_res_re_rawIn_adjustedExp_T_291, _wnList_res_re_rawIn_adjustedExp_T_293) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_58 = tail(_wnList_res_re_rawIn_adjustedExp_T_294, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_58 = and(wnList_res_re_rawIn_isZeroExpIn_58, wnList_res_re_rawIn_isZeroFractIn_58) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_58 = bits(wnList_res_re_rawIn_adjustedExp_58, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_58 = eq(_wnList_res_re_rawIn_isSpecial_T_58, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_58 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_58 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_116 = eq(wnList_res_re_rawIn_isZeroFractIn_58, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_117 = and(wnList_res_re_rawIn_isSpecial_58, _wnList_res_re_rawIn_out_isNaN_T_116) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_58.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_117 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_58 = and(wnList_res_re_rawIn_isSpecial_58, wnList_res_re_rawIn_isZeroFractIn_58) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_58.isInf <= _wnList_res_re_rawIn_out_isInf_T_58 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_58.isZero <= wnList_res_re_rawIn_isZero_58 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_58.sign <= wnList_res_re_rawIn_sign_58 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_116 = bits(wnList_res_re_rawIn_adjustedExp_58, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_117 = cvt(_wnList_res_re_rawIn_out_sExp_T_116) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_58.sExp <= _wnList_res_re_rawIn_out_sExp_T_117 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_174 = eq(wnList_res_re_rawIn_isZero_58, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_175 = mux(wnList_res_re_rawIn_isZeroExpIn_58, wnList_res_re_rawIn_subnormFract_58, wnList_res_re_rawIn_fractIn_58) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_58 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_174) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_176 = cat(wnList_res_re_rawIn_out_sig_hi_58, _wnList_res_re_rawIn_out_sig_T_175) @[Cat.scala 33:92]
    wnList_res_re_rawIn_58.sig <= _wnList_res_re_rawIn_out_sig_T_176 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_465 = bits(wnList_res_re_rawIn_58.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_466 = mux(wnList_res_re_rawIn_58.isZero, UInt<3>("h0"), _wnList_res_re_T_465) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_467 = mux(wnList_res_re_rawIn_58.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_468 = or(_wnList_res_re_T_466, _wnList_res_re_T_467) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_469 = bits(wnList_res_re_rawIn_58.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_470 = bits(wnList_res_re_rawIn_58.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_58 = cat(_wnList_res_re_T_469, _wnList_res_re_T_470) @[Cat.scala 33:92]
    node wnList_res_re_hi_58 = cat(wnList_res_re_rawIn_58.sign, _wnList_res_re_T_468) @[Cat.scala 33:92]
    node _wnList_res_re_T_471 = cat(wnList_res_re_hi_58, wnList_res_re_lo_58) @[Cat.scala 33:92]
    node _wnList_res_re_T_472 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_59 = bits(_wnList_res_re_T_472, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_59 = bits(_wnList_res_re_T_472, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_59 = bits(_wnList_res_re_T_472, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_59 = eq(wnList_res_re_rawIn_expIn_59, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_59 = eq(wnList_res_re_rawIn_fractIn_59, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_1062 = bits(wnList_res_re_rawIn_fractIn_59, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1063 = bits(wnList_res_re_rawIn_fractIn_59, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1064 = bits(wnList_res_re_rawIn_fractIn_59, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1065 = bits(wnList_res_re_rawIn_fractIn_59, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1066 = bits(wnList_res_re_rawIn_fractIn_59, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1067 = bits(wnList_res_re_rawIn_fractIn_59, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1068 = bits(wnList_res_re_rawIn_fractIn_59, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1069 = bits(wnList_res_re_rawIn_fractIn_59, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1070 = bits(wnList_res_re_rawIn_fractIn_59, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1071 = bits(wnList_res_re_rawIn_fractIn_59, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1072 = mux(_wnList_res_re_rawIn_normDist_T_1063, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1073 = mux(_wnList_res_re_rawIn_normDist_T_1064, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1072) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1074 = mux(_wnList_res_re_rawIn_normDist_T_1065, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1073) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1075 = mux(_wnList_res_re_rawIn_normDist_T_1066, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1074) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1076 = mux(_wnList_res_re_rawIn_normDist_T_1067, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1075) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1077 = mux(_wnList_res_re_rawIn_normDist_T_1068, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1076) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1078 = mux(_wnList_res_re_rawIn_normDist_T_1069, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1077) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1079 = mux(_wnList_res_re_rawIn_normDist_T_1070, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1078) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_59 = mux(_wnList_res_re_rawIn_normDist_T_1071, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1079) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_118 = dshl(wnList_res_re_rawIn_fractIn_59, wnList_res_re_rawIn_normDist_59) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_119 = bits(_wnList_res_re_rawIn_subnormFract_T_118, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_59 = shl(_wnList_res_re_rawIn_subnormFract_T_119, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_295 = xor(wnList_res_re_rawIn_normDist_59, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_296 = mux(wnList_res_re_rawIn_isZeroExpIn_59, _wnList_res_re_rawIn_adjustedExp_T_295, wnList_res_re_rawIn_expIn_59) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_297 = mux(wnList_res_re_rawIn_isZeroExpIn_59, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_298 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_297) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_299 = add(_wnList_res_re_rawIn_adjustedExp_T_296, _wnList_res_re_rawIn_adjustedExp_T_298) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_59 = tail(_wnList_res_re_rawIn_adjustedExp_T_299, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_59 = and(wnList_res_re_rawIn_isZeroExpIn_59, wnList_res_re_rawIn_isZeroFractIn_59) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_59 = bits(wnList_res_re_rawIn_adjustedExp_59, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_59 = eq(_wnList_res_re_rawIn_isSpecial_T_59, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_59 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_59 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_118 = eq(wnList_res_re_rawIn_isZeroFractIn_59, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_119 = and(wnList_res_re_rawIn_isSpecial_59, _wnList_res_re_rawIn_out_isNaN_T_118) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_59.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_119 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_59 = and(wnList_res_re_rawIn_isSpecial_59, wnList_res_re_rawIn_isZeroFractIn_59) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_59.isInf <= _wnList_res_re_rawIn_out_isInf_T_59 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_59.isZero <= wnList_res_re_rawIn_isZero_59 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_59.sign <= wnList_res_re_rawIn_sign_59 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_118 = bits(wnList_res_re_rawIn_adjustedExp_59, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_119 = cvt(_wnList_res_re_rawIn_out_sExp_T_118) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_59.sExp <= _wnList_res_re_rawIn_out_sExp_T_119 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_177 = eq(wnList_res_re_rawIn_isZero_59, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_178 = mux(wnList_res_re_rawIn_isZeroExpIn_59, wnList_res_re_rawIn_subnormFract_59, wnList_res_re_rawIn_fractIn_59) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_59 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_177) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_179 = cat(wnList_res_re_rawIn_out_sig_hi_59, _wnList_res_re_rawIn_out_sig_T_178) @[Cat.scala 33:92]
    wnList_res_re_rawIn_59.sig <= _wnList_res_re_rawIn_out_sig_T_179 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_473 = bits(wnList_res_re_rawIn_59.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_474 = mux(wnList_res_re_rawIn_59.isZero, UInt<3>("h0"), _wnList_res_re_T_473) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_475 = mux(wnList_res_re_rawIn_59.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_476 = or(_wnList_res_re_T_474, _wnList_res_re_T_475) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_477 = bits(wnList_res_re_rawIn_59.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_478 = bits(wnList_res_re_rawIn_59.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_59 = cat(_wnList_res_re_T_477, _wnList_res_re_T_478) @[Cat.scala 33:92]
    node wnList_res_re_hi_59 = cat(wnList_res_re_rawIn_59.sign, _wnList_res_re_T_476) @[Cat.scala 33:92]
    node _wnList_res_re_T_479 = cat(wnList_res_re_hi_59, wnList_res_re_lo_59) @[Cat.scala 33:92]
    wire _wnList_res_re_WIRE_3 : UInt<17>[4] @[FFT.scala 100:12]
    _wnList_res_re_WIRE_3[0] <= _wnList_res_re_T_455 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_3[1] <= _wnList_res_re_T_463 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_3[2] <= _wnList_res_re_T_471 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_3[3] <= _wnList_res_re_T_479 @[FFT.scala 100:12]
    wnList_0_3.re <= _wnList_res_re_WIRE_3[_wnList_T_7] @[FFT.scala 104:12]
    node _wnList_res_im_T_448 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_56 = bits(_wnList_res_im_T_448, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_56 = bits(_wnList_res_im_T_448, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_56 = bits(_wnList_res_im_T_448, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_56 = eq(wnList_res_im_rawIn_expIn_56, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_56 = eq(wnList_res_im_rawIn_fractIn_56, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_1008 = bits(wnList_res_im_rawIn_fractIn_56, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1009 = bits(wnList_res_im_rawIn_fractIn_56, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1010 = bits(wnList_res_im_rawIn_fractIn_56, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1011 = bits(wnList_res_im_rawIn_fractIn_56, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1012 = bits(wnList_res_im_rawIn_fractIn_56, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1013 = bits(wnList_res_im_rawIn_fractIn_56, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1014 = bits(wnList_res_im_rawIn_fractIn_56, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1015 = bits(wnList_res_im_rawIn_fractIn_56, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1016 = bits(wnList_res_im_rawIn_fractIn_56, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1017 = bits(wnList_res_im_rawIn_fractIn_56, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1018 = mux(_wnList_res_im_rawIn_normDist_T_1009, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1019 = mux(_wnList_res_im_rawIn_normDist_T_1010, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1018) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1020 = mux(_wnList_res_im_rawIn_normDist_T_1011, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1019) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1021 = mux(_wnList_res_im_rawIn_normDist_T_1012, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1020) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1022 = mux(_wnList_res_im_rawIn_normDist_T_1013, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1021) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1023 = mux(_wnList_res_im_rawIn_normDist_T_1014, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1022) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1024 = mux(_wnList_res_im_rawIn_normDist_T_1015, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1023) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1025 = mux(_wnList_res_im_rawIn_normDist_T_1016, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1024) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_56 = mux(_wnList_res_im_rawIn_normDist_T_1017, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1025) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_112 = dshl(wnList_res_im_rawIn_fractIn_56, wnList_res_im_rawIn_normDist_56) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_113 = bits(_wnList_res_im_rawIn_subnormFract_T_112, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_56 = shl(_wnList_res_im_rawIn_subnormFract_T_113, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_280 = xor(wnList_res_im_rawIn_normDist_56, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_281 = mux(wnList_res_im_rawIn_isZeroExpIn_56, _wnList_res_im_rawIn_adjustedExp_T_280, wnList_res_im_rawIn_expIn_56) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_282 = mux(wnList_res_im_rawIn_isZeroExpIn_56, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_283 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_282) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_284 = add(_wnList_res_im_rawIn_adjustedExp_T_281, _wnList_res_im_rawIn_adjustedExp_T_283) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_56 = tail(_wnList_res_im_rawIn_adjustedExp_T_284, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_56 = and(wnList_res_im_rawIn_isZeroExpIn_56, wnList_res_im_rawIn_isZeroFractIn_56) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_56 = bits(wnList_res_im_rawIn_adjustedExp_56, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_56 = eq(_wnList_res_im_rawIn_isSpecial_T_56, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_56 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_56 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_112 = eq(wnList_res_im_rawIn_isZeroFractIn_56, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_113 = and(wnList_res_im_rawIn_isSpecial_56, _wnList_res_im_rawIn_out_isNaN_T_112) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_56.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_113 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_56 = and(wnList_res_im_rawIn_isSpecial_56, wnList_res_im_rawIn_isZeroFractIn_56) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_56.isInf <= _wnList_res_im_rawIn_out_isInf_T_56 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_56.isZero <= wnList_res_im_rawIn_isZero_56 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_56.sign <= wnList_res_im_rawIn_sign_56 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_112 = bits(wnList_res_im_rawIn_adjustedExp_56, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_113 = cvt(_wnList_res_im_rawIn_out_sExp_T_112) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_56.sExp <= _wnList_res_im_rawIn_out_sExp_T_113 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_168 = eq(wnList_res_im_rawIn_isZero_56, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_169 = mux(wnList_res_im_rawIn_isZeroExpIn_56, wnList_res_im_rawIn_subnormFract_56, wnList_res_im_rawIn_fractIn_56) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_56 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_168) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_170 = cat(wnList_res_im_rawIn_out_sig_hi_56, _wnList_res_im_rawIn_out_sig_T_169) @[Cat.scala 33:92]
    wnList_res_im_rawIn_56.sig <= _wnList_res_im_rawIn_out_sig_T_170 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_449 = bits(wnList_res_im_rawIn_56.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_450 = mux(wnList_res_im_rawIn_56.isZero, UInt<3>("h0"), _wnList_res_im_T_449) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_451 = mux(wnList_res_im_rawIn_56.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_452 = or(_wnList_res_im_T_450, _wnList_res_im_T_451) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_453 = bits(wnList_res_im_rawIn_56.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_454 = bits(wnList_res_im_rawIn_56.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_56 = cat(_wnList_res_im_T_453, _wnList_res_im_T_454) @[Cat.scala 33:92]
    node wnList_res_im_hi_56 = cat(wnList_res_im_rawIn_56.sign, _wnList_res_im_T_452) @[Cat.scala 33:92]
    node _wnList_res_im_T_455 = cat(wnList_res_im_hi_56, wnList_res_im_lo_56) @[Cat.scala 33:92]
    node _wnList_res_im_T_456 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_57 = bits(_wnList_res_im_T_456, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_57 = bits(_wnList_res_im_T_456, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_57 = bits(_wnList_res_im_T_456, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_57 = eq(wnList_res_im_rawIn_expIn_57, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_57 = eq(wnList_res_im_rawIn_fractIn_57, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_1026 = bits(wnList_res_im_rawIn_fractIn_57, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1027 = bits(wnList_res_im_rawIn_fractIn_57, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1028 = bits(wnList_res_im_rawIn_fractIn_57, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1029 = bits(wnList_res_im_rawIn_fractIn_57, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1030 = bits(wnList_res_im_rawIn_fractIn_57, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1031 = bits(wnList_res_im_rawIn_fractIn_57, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1032 = bits(wnList_res_im_rawIn_fractIn_57, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1033 = bits(wnList_res_im_rawIn_fractIn_57, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1034 = bits(wnList_res_im_rawIn_fractIn_57, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1035 = bits(wnList_res_im_rawIn_fractIn_57, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1036 = mux(_wnList_res_im_rawIn_normDist_T_1027, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1037 = mux(_wnList_res_im_rawIn_normDist_T_1028, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1036) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1038 = mux(_wnList_res_im_rawIn_normDist_T_1029, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1037) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1039 = mux(_wnList_res_im_rawIn_normDist_T_1030, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1038) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1040 = mux(_wnList_res_im_rawIn_normDist_T_1031, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1039) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1041 = mux(_wnList_res_im_rawIn_normDist_T_1032, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1040) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1042 = mux(_wnList_res_im_rawIn_normDist_T_1033, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1041) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1043 = mux(_wnList_res_im_rawIn_normDist_T_1034, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1042) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_57 = mux(_wnList_res_im_rawIn_normDist_T_1035, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1043) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_114 = dshl(wnList_res_im_rawIn_fractIn_57, wnList_res_im_rawIn_normDist_57) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_115 = bits(_wnList_res_im_rawIn_subnormFract_T_114, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_57 = shl(_wnList_res_im_rawIn_subnormFract_T_115, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_285 = xor(wnList_res_im_rawIn_normDist_57, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_286 = mux(wnList_res_im_rawIn_isZeroExpIn_57, _wnList_res_im_rawIn_adjustedExp_T_285, wnList_res_im_rawIn_expIn_57) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_287 = mux(wnList_res_im_rawIn_isZeroExpIn_57, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_288 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_287) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_289 = add(_wnList_res_im_rawIn_adjustedExp_T_286, _wnList_res_im_rawIn_adjustedExp_T_288) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_57 = tail(_wnList_res_im_rawIn_adjustedExp_T_289, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_57 = and(wnList_res_im_rawIn_isZeroExpIn_57, wnList_res_im_rawIn_isZeroFractIn_57) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_57 = bits(wnList_res_im_rawIn_adjustedExp_57, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_57 = eq(_wnList_res_im_rawIn_isSpecial_T_57, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_57 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_57 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_114 = eq(wnList_res_im_rawIn_isZeroFractIn_57, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_115 = and(wnList_res_im_rawIn_isSpecial_57, _wnList_res_im_rawIn_out_isNaN_T_114) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_57.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_115 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_57 = and(wnList_res_im_rawIn_isSpecial_57, wnList_res_im_rawIn_isZeroFractIn_57) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_57.isInf <= _wnList_res_im_rawIn_out_isInf_T_57 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_57.isZero <= wnList_res_im_rawIn_isZero_57 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_57.sign <= wnList_res_im_rawIn_sign_57 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_114 = bits(wnList_res_im_rawIn_adjustedExp_57, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_115 = cvt(_wnList_res_im_rawIn_out_sExp_T_114) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_57.sExp <= _wnList_res_im_rawIn_out_sExp_T_115 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_171 = eq(wnList_res_im_rawIn_isZero_57, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_172 = mux(wnList_res_im_rawIn_isZeroExpIn_57, wnList_res_im_rawIn_subnormFract_57, wnList_res_im_rawIn_fractIn_57) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_57 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_171) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_173 = cat(wnList_res_im_rawIn_out_sig_hi_57, _wnList_res_im_rawIn_out_sig_T_172) @[Cat.scala 33:92]
    wnList_res_im_rawIn_57.sig <= _wnList_res_im_rawIn_out_sig_T_173 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_457 = bits(wnList_res_im_rawIn_57.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_458 = mux(wnList_res_im_rawIn_57.isZero, UInt<3>("h0"), _wnList_res_im_T_457) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_459 = mux(wnList_res_im_rawIn_57.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_460 = or(_wnList_res_im_T_458, _wnList_res_im_T_459) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_461 = bits(wnList_res_im_rawIn_57.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_462 = bits(wnList_res_im_rawIn_57.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_57 = cat(_wnList_res_im_T_461, _wnList_res_im_T_462) @[Cat.scala 33:92]
    node wnList_res_im_hi_57 = cat(wnList_res_im_rawIn_57.sign, _wnList_res_im_T_460) @[Cat.scala 33:92]
    node _wnList_res_im_T_463 = cat(wnList_res_im_hi_57, wnList_res_im_lo_57) @[Cat.scala 33:92]
    node _wnList_res_im_T_464 = asUInt(asSInt(UInt<16>("hbc00"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_58 = bits(_wnList_res_im_T_464, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_58 = bits(_wnList_res_im_T_464, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_58 = bits(_wnList_res_im_T_464, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_58 = eq(wnList_res_im_rawIn_expIn_58, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_58 = eq(wnList_res_im_rawIn_fractIn_58, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_1044 = bits(wnList_res_im_rawIn_fractIn_58, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1045 = bits(wnList_res_im_rawIn_fractIn_58, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1046 = bits(wnList_res_im_rawIn_fractIn_58, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1047 = bits(wnList_res_im_rawIn_fractIn_58, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1048 = bits(wnList_res_im_rawIn_fractIn_58, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1049 = bits(wnList_res_im_rawIn_fractIn_58, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1050 = bits(wnList_res_im_rawIn_fractIn_58, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1051 = bits(wnList_res_im_rawIn_fractIn_58, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1052 = bits(wnList_res_im_rawIn_fractIn_58, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1053 = bits(wnList_res_im_rawIn_fractIn_58, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1054 = mux(_wnList_res_im_rawIn_normDist_T_1045, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1055 = mux(_wnList_res_im_rawIn_normDist_T_1046, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1054) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1056 = mux(_wnList_res_im_rawIn_normDist_T_1047, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1055) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1057 = mux(_wnList_res_im_rawIn_normDist_T_1048, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1056) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1058 = mux(_wnList_res_im_rawIn_normDist_T_1049, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1057) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1059 = mux(_wnList_res_im_rawIn_normDist_T_1050, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1058) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1060 = mux(_wnList_res_im_rawIn_normDist_T_1051, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1059) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1061 = mux(_wnList_res_im_rawIn_normDist_T_1052, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1060) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_58 = mux(_wnList_res_im_rawIn_normDist_T_1053, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1061) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_116 = dshl(wnList_res_im_rawIn_fractIn_58, wnList_res_im_rawIn_normDist_58) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_117 = bits(_wnList_res_im_rawIn_subnormFract_T_116, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_58 = shl(_wnList_res_im_rawIn_subnormFract_T_117, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_290 = xor(wnList_res_im_rawIn_normDist_58, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_291 = mux(wnList_res_im_rawIn_isZeroExpIn_58, _wnList_res_im_rawIn_adjustedExp_T_290, wnList_res_im_rawIn_expIn_58) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_292 = mux(wnList_res_im_rawIn_isZeroExpIn_58, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_293 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_292) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_294 = add(_wnList_res_im_rawIn_adjustedExp_T_291, _wnList_res_im_rawIn_adjustedExp_T_293) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_58 = tail(_wnList_res_im_rawIn_adjustedExp_T_294, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_58 = and(wnList_res_im_rawIn_isZeroExpIn_58, wnList_res_im_rawIn_isZeroFractIn_58) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_58 = bits(wnList_res_im_rawIn_adjustedExp_58, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_58 = eq(_wnList_res_im_rawIn_isSpecial_T_58, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_58 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_58 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_116 = eq(wnList_res_im_rawIn_isZeroFractIn_58, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_117 = and(wnList_res_im_rawIn_isSpecial_58, _wnList_res_im_rawIn_out_isNaN_T_116) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_58.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_117 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_58 = and(wnList_res_im_rawIn_isSpecial_58, wnList_res_im_rawIn_isZeroFractIn_58) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_58.isInf <= _wnList_res_im_rawIn_out_isInf_T_58 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_58.isZero <= wnList_res_im_rawIn_isZero_58 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_58.sign <= wnList_res_im_rawIn_sign_58 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_116 = bits(wnList_res_im_rawIn_adjustedExp_58, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_117 = cvt(_wnList_res_im_rawIn_out_sExp_T_116) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_58.sExp <= _wnList_res_im_rawIn_out_sExp_T_117 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_174 = eq(wnList_res_im_rawIn_isZero_58, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_175 = mux(wnList_res_im_rawIn_isZeroExpIn_58, wnList_res_im_rawIn_subnormFract_58, wnList_res_im_rawIn_fractIn_58) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_58 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_174) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_176 = cat(wnList_res_im_rawIn_out_sig_hi_58, _wnList_res_im_rawIn_out_sig_T_175) @[Cat.scala 33:92]
    wnList_res_im_rawIn_58.sig <= _wnList_res_im_rawIn_out_sig_T_176 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_465 = bits(wnList_res_im_rawIn_58.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_466 = mux(wnList_res_im_rawIn_58.isZero, UInt<3>("h0"), _wnList_res_im_T_465) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_467 = mux(wnList_res_im_rawIn_58.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_468 = or(_wnList_res_im_T_466, _wnList_res_im_T_467) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_469 = bits(wnList_res_im_rawIn_58.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_470 = bits(wnList_res_im_rawIn_58.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_58 = cat(_wnList_res_im_T_469, _wnList_res_im_T_470) @[Cat.scala 33:92]
    node wnList_res_im_hi_58 = cat(wnList_res_im_rawIn_58.sign, _wnList_res_im_T_468) @[Cat.scala 33:92]
    node _wnList_res_im_T_471 = cat(wnList_res_im_hi_58, wnList_res_im_lo_58) @[Cat.scala 33:92]
    node _wnList_res_im_T_472 = asUInt(asSInt(UInt<16>("hb9a8"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_59 = bits(_wnList_res_im_T_472, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_59 = bits(_wnList_res_im_T_472, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_59 = bits(_wnList_res_im_T_472, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_59 = eq(wnList_res_im_rawIn_expIn_59, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_59 = eq(wnList_res_im_rawIn_fractIn_59, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_1062 = bits(wnList_res_im_rawIn_fractIn_59, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1063 = bits(wnList_res_im_rawIn_fractIn_59, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1064 = bits(wnList_res_im_rawIn_fractIn_59, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1065 = bits(wnList_res_im_rawIn_fractIn_59, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1066 = bits(wnList_res_im_rawIn_fractIn_59, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1067 = bits(wnList_res_im_rawIn_fractIn_59, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1068 = bits(wnList_res_im_rawIn_fractIn_59, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1069 = bits(wnList_res_im_rawIn_fractIn_59, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1070 = bits(wnList_res_im_rawIn_fractIn_59, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1071 = bits(wnList_res_im_rawIn_fractIn_59, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1072 = mux(_wnList_res_im_rawIn_normDist_T_1063, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1073 = mux(_wnList_res_im_rawIn_normDist_T_1064, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1072) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1074 = mux(_wnList_res_im_rawIn_normDist_T_1065, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1073) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1075 = mux(_wnList_res_im_rawIn_normDist_T_1066, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1074) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1076 = mux(_wnList_res_im_rawIn_normDist_T_1067, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1075) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1077 = mux(_wnList_res_im_rawIn_normDist_T_1068, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1076) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1078 = mux(_wnList_res_im_rawIn_normDist_T_1069, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1077) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1079 = mux(_wnList_res_im_rawIn_normDist_T_1070, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1078) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_59 = mux(_wnList_res_im_rawIn_normDist_T_1071, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1079) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_118 = dshl(wnList_res_im_rawIn_fractIn_59, wnList_res_im_rawIn_normDist_59) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_119 = bits(_wnList_res_im_rawIn_subnormFract_T_118, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_59 = shl(_wnList_res_im_rawIn_subnormFract_T_119, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_295 = xor(wnList_res_im_rawIn_normDist_59, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_296 = mux(wnList_res_im_rawIn_isZeroExpIn_59, _wnList_res_im_rawIn_adjustedExp_T_295, wnList_res_im_rawIn_expIn_59) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_297 = mux(wnList_res_im_rawIn_isZeroExpIn_59, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_298 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_297) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_299 = add(_wnList_res_im_rawIn_adjustedExp_T_296, _wnList_res_im_rawIn_adjustedExp_T_298) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_59 = tail(_wnList_res_im_rawIn_adjustedExp_T_299, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_59 = and(wnList_res_im_rawIn_isZeroExpIn_59, wnList_res_im_rawIn_isZeroFractIn_59) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_59 = bits(wnList_res_im_rawIn_adjustedExp_59, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_59 = eq(_wnList_res_im_rawIn_isSpecial_T_59, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_59 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_59 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_118 = eq(wnList_res_im_rawIn_isZeroFractIn_59, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_119 = and(wnList_res_im_rawIn_isSpecial_59, _wnList_res_im_rawIn_out_isNaN_T_118) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_59.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_119 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_59 = and(wnList_res_im_rawIn_isSpecial_59, wnList_res_im_rawIn_isZeroFractIn_59) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_59.isInf <= _wnList_res_im_rawIn_out_isInf_T_59 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_59.isZero <= wnList_res_im_rawIn_isZero_59 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_59.sign <= wnList_res_im_rawIn_sign_59 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_118 = bits(wnList_res_im_rawIn_adjustedExp_59, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_119 = cvt(_wnList_res_im_rawIn_out_sExp_T_118) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_59.sExp <= _wnList_res_im_rawIn_out_sExp_T_119 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_177 = eq(wnList_res_im_rawIn_isZero_59, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_178 = mux(wnList_res_im_rawIn_isZeroExpIn_59, wnList_res_im_rawIn_subnormFract_59, wnList_res_im_rawIn_fractIn_59) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_59 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_177) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_179 = cat(wnList_res_im_rawIn_out_sig_hi_59, _wnList_res_im_rawIn_out_sig_T_178) @[Cat.scala 33:92]
    wnList_res_im_rawIn_59.sig <= _wnList_res_im_rawIn_out_sig_T_179 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_473 = bits(wnList_res_im_rawIn_59.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_474 = mux(wnList_res_im_rawIn_59.isZero, UInt<3>("h0"), _wnList_res_im_T_473) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_475 = mux(wnList_res_im_rawIn_59.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_476 = or(_wnList_res_im_T_474, _wnList_res_im_T_475) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_477 = bits(wnList_res_im_rawIn_59.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_478 = bits(wnList_res_im_rawIn_59.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_59 = cat(_wnList_res_im_T_477, _wnList_res_im_T_478) @[Cat.scala 33:92]
    node wnList_res_im_hi_59 = cat(wnList_res_im_rawIn_59.sign, _wnList_res_im_T_476) @[Cat.scala 33:92]
    node _wnList_res_im_T_479 = cat(wnList_res_im_hi_59, wnList_res_im_lo_59) @[Cat.scala 33:92]
    wire _wnList_res_im_WIRE_3 : UInt<17>[4] @[FFT.scala 88:12]
    _wnList_res_im_WIRE_3[0] <= _wnList_res_im_T_455 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_3[1] <= _wnList_res_im_T_463 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_3[2] <= _wnList_res_im_T_471 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_3[3] <= _wnList_res_im_T_479 @[FFT.scala 88:12]
    wnList_0_3.im <= _wnList_res_im_WIRE_3[_wnList_T_7] @[FFT.scala 105:12]
    inst inst_3 of ButterflyMul_3 @[Modules.scala 287:22]
    inst_3.clock <= clock
    inst_3.reset <= reset
    inst_3.io.in[0].im <= data1_3_0[0].im @[Modules.scala 288:16]
    inst_3.io.in[0].re <= data1_3_0[0].re @[Modules.scala 288:16]
    inst_3.io.in[1].im <= data1_3_0[1].im @[Modules.scala 288:16]
    inst_3.io.in[1].re <= data1_3_0[1].re @[Modules.scala 288:16]
    inst_3.io.wn[0].im <= wnList_0_3.im @[Modules.scala 289:16]
    inst_3.io.wn[0].re <= wnList_0_3.re @[Modules.scala 289:16]
    data2_3_0 <= inst_3.io.out @[FFT.scala 136:19]
    node wnCtrl_4 = bits(cnt_0, 0, 0) @[FFT.scala 131:23]
    node _wnList_T_8 = add(UInt<1>("h0"), wnCtrl_4) @[FFT.scala 135:96]
    node _wnList_T_9 = tail(_wnList_T_8, 1) @[FFT.scala 135:96]
    wire wnList_0_4 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 103:19]
    node _wnList_res_re_T_480 = asUInt(asSInt(UInt<16>("h3c00"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_60 = bits(_wnList_res_re_T_480, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_60 = bits(_wnList_res_re_T_480, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_60 = bits(_wnList_res_re_T_480, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_60 = eq(wnList_res_re_rawIn_expIn_60, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_60 = eq(wnList_res_re_rawIn_fractIn_60, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_1080 = bits(wnList_res_re_rawIn_fractIn_60, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1081 = bits(wnList_res_re_rawIn_fractIn_60, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1082 = bits(wnList_res_re_rawIn_fractIn_60, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1083 = bits(wnList_res_re_rawIn_fractIn_60, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1084 = bits(wnList_res_re_rawIn_fractIn_60, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1085 = bits(wnList_res_re_rawIn_fractIn_60, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1086 = bits(wnList_res_re_rawIn_fractIn_60, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1087 = bits(wnList_res_re_rawIn_fractIn_60, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1088 = bits(wnList_res_re_rawIn_fractIn_60, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1089 = bits(wnList_res_re_rawIn_fractIn_60, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1090 = mux(_wnList_res_re_rawIn_normDist_T_1081, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1091 = mux(_wnList_res_re_rawIn_normDist_T_1082, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1090) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1092 = mux(_wnList_res_re_rawIn_normDist_T_1083, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1091) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1093 = mux(_wnList_res_re_rawIn_normDist_T_1084, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1092) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1094 = mux(_wnList_res_re_rawIn_normDist_T_1085, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1093) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1095 = mux(_wnList_res_re_rawIn_normDist_T_1086, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1094) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1096 = mux(_wnList_res_re_rawIn_normDist_T_1087, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1095) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1097 = mux(_wnList_res_re_rawIn_normDist_T_1088, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1096) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_60 = mux(_wnList_res_re_rawIn_normDist_T_1089, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1097) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_120 = dshl(wnList_res_re_rawIn_fractIn_60, wnList_res_re_rawIn_normDist_60) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_121 = bits(_wnList_res_re_rawIn_subnormFract_T_120, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_60 = shl(_wnList_res_re_rawIn_subnormFract_T_121, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_300 = xor(wnList_res_re_rawIn_normDist_60, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_301 = mux(wnList_res_re_rawIn_isZeroExpIn_60, _wnList_res_re_rawIn_adjustedExp_T_300, wnList_res_re_rawIn_expIn_60) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_302 = mux(wnList_res_re_rawIn_isZeroExpIn_60, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_303 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_302) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_304 = add(_wnList_res_re_rawIn_adjustedExp_T_301, _wnList_res_re_rawIn_adjustedExp_T_303) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_60 = tail(_wnList_res_re_rawIn_adjustedExp_T_304, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_60 = and(wnList_res_re_rawIn_isZeroExpIn_60, wnList_res_re_rawIn_isZeroFractIn_60) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_60 = bits(wnList_res_re_rawIn_adjustedExp_60, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_60 = eq(_wnList_res_re_rawIn_isSpecial_T_60, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_60 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_60 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_120 = eq(wnList_res_re_rawIn_isZeroFractIn_60, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_121 = and(wnList_res_re_rawIn_isSpecial_60, _wnList_res_re_rawIn_out_isNaN_T_120) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_60.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_121 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_60 = and(wnList_res_re_rawIn_isSpecial_60, wnList_res_re_rawIn_isZeroFractIn_60) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_60.isInf <= _wnList_res_re_rawIn_out_isInf_T_60 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_60.isZero <= wnList_res_re_rawIn_isZero_60 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_60.sign <= wnList_res_re_rawIn_sign_60 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_120 = bits(wnList_res_re_rawIn_adjustedExp_60, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_121 = cvt(_wnList_res_re_rawIn_out_sExp_T_120) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_60.sExp <= _wnList_res_re_rawIn_out_sExp_T_121 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_180 = eq(wnList_res_re_rawIn_isZero_60, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_181 = mux(wnList_res_re_rawIn_isZeroExpIn_60, wnList_res_re_rawIn_subnormFract_60, wnList_res_re_rawIn_fractIn_60) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_60 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_180) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_182 = cat(wnList_res_re_rawIn_out_sig_hi_60, _wnList_res_re_rawIn_out_sig_T_181) @[Cat.scala 33:92]
    wnList_res_re_rawIn_60.sig <= _wnList_res_re_rawIn_out_sig_T_182 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_481 = bits(wnList_res_re_rawIn_60.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_482 = mux(wnList_res_re_rawIn_60.isZero, UInt<3>("h0"), _wnList_res_re_T_481) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_483 = mux(wnList_res_re_rawIn_60.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_484 = or(_wnList_res_re_T_482, _wnList_res_re_T_483) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_485 = bits(wnList_res_re_rawIn_60.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_486 = bits(wnList_res_re_rawIn_60.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_60 = cat(_wnList_res_re_T_485, _wnList_res_re_T_486) @[Cat.scala 33:92]
    node wnList_res_re_hi_60 = cat(wnList_res_re_rawIn_60.sign, _wnList_res_re_T_484) @[Cat.scala 33:92]
    node _wnList_res_re_T_487 = cat(wnList_res_re_hi_60, wnList_res_re_lo_60) @[Cat.scala 33:92]
    node _wnList_res_re_T_488 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 98:114]
    node wnList_res_re_rawIn_sign_61 = bits(_wnList_res_re_T_488, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_re_rawIn_expIn_61 = bits(_wnList_res_re_T_488, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_re_rawIn_fractIn_61 = bits(_wnList_res_re_T_488, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_re_rawIn_isZeroExpIn_61 = eq(wnList_res_re_rawIn_expIn_61, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_re_rawIn_isZeroFractIn_61 = eq(wnList_res_re_rawIn_fractIn_61, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_re_rawIn_normDist_T_1098 = bits(wnList_res_re_rawIn_fractIn_61, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1099 = bits(wnList_res_re_rawIn_fractIn_61, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1100 = bits(wnList_res_re_rawIn_fractIn_61, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1101 = bits(wnList_res_re_rawIn_fractIn_61, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1102 = bits(wnList_res_re_rawIn_fractIn_61, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1103 = bits(wnList_res_re_rawIn_fractIn_61, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1104 = bits(wnList_res_re_rawIn_fractIn_61, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1105 = bits(wnList_res_re_rawIn_fractIn_61, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1106 = bits(wnList_res_re_rawIn_fractIn_61, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1107 = bits(wnList_res_re_rawIn_fractIn_61, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_re_rawIn_normDist_T_1108 = mux(_wnList_res_re_rawIn_normDist_T_1099, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1109 = mux(_wnList_res_re_rawIn_normDist_T_1100, UInt<3>("h7"), _wnList_res_re_rawIn_normDist_T_1108) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1110 = mux(_wnList_res_re_rawIn_normDist_T_1101, UInt<3>("h6"), _wnList_res_re_rawIn_normDist_T_1109) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1111 = mux(_wnList_res_re_rawIn_normDist_T_1102, UInt<3>("h5"), _wnList_res_re_rawIn_normDist_T_1110) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1112 = mux(_wnList_res_re_rawIn_normDist_T_1103, UInt<3>("h4"), _wnList_res_re_rawIn_normDist_T_1111) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1113 = mux(_wnList_res_re_rawIn_normDist_T_1104, UInt<2>("h3"), _wnList_res_re_rawIn_normDist_T_1112) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1114 = mux(_wnList_res_re_rawIn_normDist_T_1105, UInt<2>("h2"), _wnList_res_re_rawIn_normDist_T_1113) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_normDist_T_1115 = mux(_wnList_res_re_rawIn_normDist_T_1106, UInt<1>("h1"), _wnList_res_re_rawIn_normDist_T_1114) @[Mux.scala 47:70]
    node wnList_res_re_rawIn_normDist_61 = mux(_wnList_res_re_rawIn_normDist_T_1107, UInt<1>("h0"), _wnList_res_re_rawIn_normDist_T_1115) @[Mux.scala 47:70]
    node _wnList_res_re_rawIn_subnormFract_T_122 = dshl(wnList_res_re_rawIn_fractIn_61, wnList_res_re_rawIn_normDist_61) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_re_rawIn_subnormFract_T_123 = bits(_wnList_res_re_rawIn_subnormFract_T_122, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_re_rawIn_subnormFract_61 = shl(_wnList_res_re_rawIn_subnormFract_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_re_rawIn_adjustedExp_T_305 = xor(wnList_res_re_rawIn_normDist_61, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_re_rawIn_adjustedExp_T_306 = mux(wnList_res_re_rawIn_isZeroExpIn_61, _wnList_res_re_rawIn_adjustedExp_T_305, wnList_res_re_rawIn_expIn_61) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_re_rawIn_adjustedExp_T_307 = mux(wnList_res_re_rawIn_isZeroExpIn_61, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_re_rawIn_adjustedExp_T_308 = or(UInt<5>("h10"), _wnList_res_re_rawIn_adjustedExp_T_307) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_re_rawIn_adjustedExp_T_309 = add(_wnList_res_re_rawIn_adjustedExp_T_306, _wnList_res_re_rawIn_adjustedExp_T_308) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_adjustedExp_61 = tail(_wnList_res_re_rawIn_adjustedExp_T_309, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_re_rawIn_isZero_61 = and(wnList_res_re_rawIn_isZeroExpIn_61, wnList_res_re_rawIn_isZeroFractIn_61) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_re_rawIn_isSpecial_T_61 = bits(wnList_res_re_rawIn_adjustedExp_61, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_re_rawIn_isSpecial_61 = eq(_wnList_res_re_rawIn_isSpecial_T_61, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_re_rawIn_61 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_re_rawIn_61 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_re_rawIn_out_isNaN_T_122 = eq(wnList_res_re_rawIn_isZeroFractIn_61, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_re_rawIn_out_isNaN_T_123 = and(wnList_res_re_rawIn_isSpecial_61, _wnList_res_re_rawIn_out_isNaN_T_122) @[rawFloatFromFN.scala 66:33]
    wnList_res_re_rawIn_61.isNaN <= _wnList_res_re_rawIn_out_isNaN_T_123 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_re_rawIn_out_isInf_T_61 = and(wnList_res_re_rawIn_isSpecial_61, wnList_res_re_rawIn_isZeroFractIn_61) @[rawFloatFromFN.scala 67:33]
    wnList_res_re_rawIn_61.isInf <= _wnList_res_re_rawIn_out_isInf_T_61 @[rawFloatFromFN.scala 67:20]
    wnList_res_re_rawIn_61.isZero <= wnList_res_re_rawIn_isZero_61 @[rawFloatFromFN.scala 68:20]
    wnList_res_re_rawIn_61.sign <= wnList_res_re_rawIn_sign_61 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_re_rawIn_out_sExp_T_122 = bits(wnList_res_re_rawIn_adjustedExp_61, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_re_rawIn_out_sExp_T_123 = cvt(_wnList_res_re_rawIn_out_sExp_T_122) @[rawFloatFromFN.scala 70:48]
    wnList_res_re_rawIn_61.sExp <= _wnList_res_re_rawIn_out_sExp_T_123 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_re_rawIn_out_sig_T_183 = eq(wnList_res_re_rawIn_isZero_61, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_re_rawIn_out_sig_T_184 = mux(wnList_res_re_rawIn_isZeroExpIn_61, wnList_res_re_rawIn_subnormFract_61, wnList_res_re_rawIn_fractIn_61) @[rawFloatFromFN.scala 72:42]
    node wnList_res_re_rawIn_out_sig_hi_61 = cat(UInt<1>("h0"), _wnList_res_re_rawIn_out_sig_T_183) @[Cat.scala 33:92]
    node _wnList_res_re_rawIn_out_sig_T_185 = cat(wnList_res_re_rawIn_out_sig_hi_61, _wnList_res_re_rawIn_out_sig_T_184) @[Cat.scala 33:92]
    wnList_res_re_rawIn_61.sig <= _wnList_res_re_rawIn_out_sig_T_185 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_re_T_489 = bits(wnList_res_re_rawIn_61.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_re_T_490 = mux(wnList_res_re_rawIn_61.isZero, UInt<3>("h0"), _wnList_res_re_T_489) @[recFNFromFN.scala 48:16]
    node _wnList_res_re_T_491 = mux(wnList_res_re_rawIn_61.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_re_T_492 = or(_wnList_res_re_T_490, _wnList_res_re_T_491) @[recFNFromFN.scala 48:79]
    node _wnList_res_re_T_493 = bits(wnList_res_re_rawIn_61.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_re_T_494 = bits(wnList_res_re_rawIn_61.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_re_lo_61 = cat(_wnList_res_re_T_493, _wnList_res_re_T_494) @[Cat.scala 33:92]
    node wnList_res_re_hi_61 = cat(wnList_res_re_rawIn_61.sign, _wnList_res_re_T_492) @[Cat.scala 33:92]
    node _wnList_res_re_T_495 = cat(wnList_res_re_hi_61, wnList_res_re_lo_61) @[Cat.scala 33:92]
    wire _wnList_res_re_WIRE_4 : UInt<17>[2] @[FFT.scala 100:12]
    _wnList_res_re_WIRE_4[0] <= _wnList_res_re_T_487 @[FFT.scala 100:12]
    _wnList_res_re_WIRE_4[1] <= _wnList_res_re_T_495 @[FFT.scala 100:12]
    wnList_0_4.re <= _wnList_res_re_WIRE_4[_wnList_T_9] @[FFT.scala 104:12]
    node _wnList_res_im_T_480 = asUInt(asSInt(UInt<16>("h0"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_60 = bits(_wnList_res_im_T_480, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_60 = bits(_wnList_res_im_T_480, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_60 = bits(_wnList_res_im_T_480, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_60 = eq(wnList_res_im_rawIn_expIn_60, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_60 = eq(wnList_res_im_rawIn_fractIn_60, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_1080 = bits(wnList_res_im_rawIn_fractIn_60, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1081 = bits(wnList_res_im_rawIn_fractIn_60, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1082 = bits(wnList_res_im_rawIn_fractIn_60, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1083 = bits(wnList_res_im_rawIn_fractIn_60, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1084 = bits(wnList_res_im_rawIn_fractIn_60, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1085 = bits(wnList_res_im_rawIn_fractIn_60, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1086 = bits(wnList_res_im_rawIn_fractIn_60, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1087 = bits(wnList_res_im_rawIn_fractIn_60, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1088 = bits(wnList_res_im_rawIn_fractIn_60, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1089 = bits(wnList_res_im_rawIn_fractIn_60, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1090 = mux(_wnList_res_im_rawIn_normDist_T_1081, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1091 = mux(_wnList_res_im_rawIn_normDist_T_1082, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1090) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1092 = mux(_wnList_res_im_rawIn_normDist_T_1083, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1091) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1093 = mux(_wnList_res_im_rawIn_normDist_T_1084, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1092) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1094 = mux(_wnList_res_im_rawIn_normDist_T_1085, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1093) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1095 = mux(_wnList_res_im_rawIn_normDist_T_1086, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1094) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1096 = mux(_wnList_res_im_rawIn_normDist_T_1087, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1095) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1097 = mux(_wnList_res_im_rawIn_normDist_T_1088, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1096) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_60 = mux(_wnList_res_im_rawIn_normDist_T_1089, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1097) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_120 = dshl(wnList_res_im_rawIn_fractIn_60, wnList_res_im_rawIn_normDist_60) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_121 = bits(_wnList_res_im_rawIn_subnormFract_T_120, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_60 = shl(_wnList_res_im_rawIn_subnormFract_T_121, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_300 = xor(wnList_res_im_rawIn_normDist_60, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_301 = mux(wnList_res_im_rawIn_isZeroExpIn_60, _wnList_res_im_rawIn_adjustedExp_T_300, wnList_res_im_rawIn_expIn_60) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_302 = mux(wnList_res_im_rawIn_isZeroExpIn_60, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_303 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_302) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_304 = add(_wnList_res_im_rawIn_adjustedExp_T_301, _wnList_res_im_rawIn_adjustedExp_T_303) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_60 = tail(_wnList_res_im_rawIn_adjustedExp_T_304, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_60 = and(wnList_res_im_rawIn_isZeroExpIn_60, wnList_res_im_rawIn_isZeroFractIn_60) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_60 = bits(wnList_res_im_rawIn_adjustedExp_60, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_60 = eq(_wnList_res_im_rawIn_isSpecial_T_60, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_60 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_60 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_120 = eq(wnList_res_im_rawIn_isZeroFractIn_60, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_121 = and(wnList_res_im_rawIn_isSpecial_60, _wnList_res_im_rawIn_out_isNaN_T_120) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_60.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_121 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_60 = and(wnList_res_im_rawIn_isSpecial_60, wnList_res_im_rawIn_isZeroFractIn_60) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_60.isInf <= _wnList_res_im_rawIn_out_isInf_T_60 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_60.isZero <= wnList_res_im_rawIn_isZero_60 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_60.sign <= wnList_res_im_rawIn_sign_60 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_120 = bits(wnList_res_im_rawIn_adjustedExp_60, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_121 = cvt(_wnList_res_im_rawIn_out_sExp_T_120) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_60.sExp <= _wnList_res_im_rawIn_out_sExp_T_121 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_180 = eq(wnList_res_im_rawIn_isZero_60, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_181 = mux(wnList_res_im_rawIn_isZeroExpIn_60, wnList_res_im_rawIn_subnormFract_60, wnList_res_im_rawIn_fractIn_60) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_60 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_180) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_182 = cat(wnList_res_im_rawIn_out_sig_hi_60, _wnList_res_im_rawIn_out_sig_T_181) @[Cat.scala 33:92]
    wnList_res_im_rawIn_60.sig <= _wnList_res_im_rawIn_out_sig_T_182 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_481 = bits(wnList_res_im_rawIn_60.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_482 = mux(wnList_res_im_rawIn_60.isZero, UInt<3>("h0"), _wnList_res_im_T_481) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_483 = mux(wnList_res_im_rawIn_60.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_484 = or(_wnList_res_im_T_482, _wnList_res_im_T_483) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_485 = bits(wnList_res_im_rawIn_60.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_486 = bits(wnList_res_im_rawIn_60.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_60 = cat(_wnList_res_im_T_485, _wnList_res_im_T_486) @[Cat.scala 33:92]
    node wnList_res_im_hi_60 = cat(wnList_res_im_rawIn_60.sign, _wnList_res_im_T_484) @[Cat.scala 33:92]
    node _wnList_res_im_T_487 = cat(wnList_res_im_hi_60, wnList_res_im_lo_60) @[Cat.scala 33:92]
    node _wnList_res_im_T_488 = asUInt(asSInt(UInt<16>("hbc00"))) @[FFT.scala 85:114]
    node wnList_res_im_rawIn_sign_61 = bits(_wnList_res_im_T_488, 15, 15) @[rawFloatFromFN.scala 46:22]
    node wnList_res_im_rawIn_expIn_61 = bits(_wnList_res_im_T_488, 14, 10) @[rawFloatFromFN.scala 47:23]
    node wnList_res_im_rawIn_fractIn_61 = bits(_wnList_res_im_T_488, 9, 0) @[rawFloatFromFN.scala 48:25]
    node wnList_res_im_rawIn_isZeroExpIn_61 = eq(wnList_res_im_rawIn_expIn_61, UInt<1>("h0")) @[rawFloatFromFN.scala 50:34]
    node wnList_res_im_rawIn_isZeroFractIn_61 = eq(wnList_res_im_rawIn_fractIn_61, UInt<1>("h0")) @[rawFloatFromFN.scala 51:38]
    node _wnList_res_im_rawIn_normDist_T_1098 = bits(wnList_res_im_rawIn_fractIn_61, 0, 0) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1099 = bits(wnList_res_im_rawIn_fractIn_61, 1, 1) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1100 = bits(wnList_res_im_rawIn_fractIn_61, 2, 2) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1101 = bits(wnList_res_im_rawIn_fractIn_61, 3, 3) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1102 = bits(wnList_res_im_rawIn_fractIn_61, 4, 4) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1103 = bits(wnList_res_im_rawIn_fractIn_61, 5, 5) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1104 = bits(wnList_res_im_rawIn_fractIn_61, 6, 6) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1105 = bits(wnList_res_im_rawIn_fractIn_61, 7, 7) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1106 = bits(wnList_res_im_rawIn_fractIn_61, 8, 8) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1107 = bits(wnList_res_im_rawIn_fractIn_61, 9, 9) @[primitives.scala 92:52]
    node _wnList_res_im_rawIn_normDist_T_1108 = mux(_wnList_res_im_rawIn_normDist_T_1099, UInt<4>("h8"), UInt<4>("h9")) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1109 = mux(_wnList_res_im_rawIn_normDist_T_1100, UInt<3>("h7"), _wnList_res_im_rawIn_normDist_T_1108) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1110 = mux(_wnList_res_im_rawIn_normDist_T_1101, UInt<3>("h6"), _wnList_res_im_rawIn_normDist_T_1109) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1111 = mux(_wnList_res_im_rawIn_normDist_T_1102, UInt<3>("h5"), _wnList_res_im_rawIn_normDist_T_1110) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1112 = mux(_wnList_res_im_rawIn_normDist_T_1103, UInt<3>("h4"), _wnList_res_im_rawIn_normDist_T_1111) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1113 = mux(_wnList_res_im_rawIn_normDist_T_1104, UInt<2>("h3"), _wnList_res_im_rawIn_normDist_T_1112) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1114 = mux(_wnList_res_im_rawIn_normDist_T_1105, UInt<2>("h2"), _wnList_res_im_rawIn_normDist_T_1113) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_normDist_T_1115 = mux(_wnList_res_im_rawIn_normDist_T_1106, UInt<1>("h1"), _wnList_res_im_rawIn_normDist_T_1114) @[Mux.scala 47:70]
    node wnList_res_im_rawIn_normDist_61 = mux(_wnList_res_im_rawIn_normDist_T_1107, UInt<1>("h0"), _wnList_res_im_rawIn_normDist_T_1115) @[Mux.scala 47:70]
    node _wnList_res_im_rawIn_subnormFract_T_122 = dshl(wnList_res_im_rawIn_fractIn_61, wnList_res_im_rawIn_normDist_61) @[rawFloatFromFN.scala 54:36]
    node _wnList_res_im_rawIn_subnormFract_T_123 = bits(_wnList_res_im_rawIn_subnormFract_T_122, 8, 0) @[rawFloatFromFN.scala 54:47]
    node wnList_res_im_rawIn_subnormFract_61 = shl(_wnList_res_im_rawIn_subnormFract_T_123, 1) @[rawFloatFromFN.scala 54:64]
    node _wnList_res_im_rawIn_adjustedExp_T_305 = xor(wnList_res_im_rawIn_normDist_61, UInt<6>("h3f")) @[rawFloatFromFN.scala 57:26]
    node _wnList_res_im_rawIn_adjustedExp_T_306 = mux(wnList_res_im_rawIn_isZeroExpIn_61, _wnList_res_im_rawIn_adjustedExp_T_305, wnList_res_im_rawIn_expIn_61) @[rawFloatFromFN.scala 56:16]
    node _wnList_res_im_rawIn_adjustedExp_T_307 = mux(wnList_res_im_rawIn_isZeroExpIn_61, UInt<2>("h2"), UInt<1>("h1")) @[rawFloatFromFN.scala 60:27]
    node _wnList_res_im_rawIn_adjustedExp_T_308 = or(UInt<5>("h10"), _wnList_res_im_rawIn_adjustedExp_T_307) @[rawFloatFromFN.scala 60:22]
    node _wnList_res_im_rawIn_adjustedExp_T_309 = add(_wnList_res_im_rawIn_adjustedExp_T_306, _wnList_res_im_rawIn_adjustedExp_T_308) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_adjustedExp_61 = tail(_wnList_res_im_rawIn_adjustedExp_T_309, 1) @[rawFloatFromFN.scala 59:15]
    node wnList_res_im_rawIn_isZero_61 = and(wnList_res_im_rawIn_isZeroExpIn_61, wnList_res_im_rawIn_isZeroFractIn_61) @[rawFloatFromFN.scala 62:34]
    node _wnList_res_im_rawIn_isSpecial_T_61 = bits(wnList_res_im_rawIn_adjustedExp_61, 5, 4) @[rawFloatFromFN.scala 63:37]
    node wnList_res_im_rawIn_isSpecial_61 = eq(_wnList_res_im_rawIn_isSpecial_T_61, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    wire wnList_res_im_rawIn_61 : { isNaN : UInt<1>, isInf : UInt<1>, isZero : UInt<1>, sign : UInt<1>, sExp : SInt<7>, sig : UInt<12>} @[rawFloatFromFN.scala 65:23]
    wnList_res_im_rawIn_61 is invalid @[rawFloatFromFN.scala 65:23]
    node _wnList_res_im_rawIn_out_isNaN_T_122 = eq(wnList_res_im_rawIn_isZeroFractIn_61, UInt<1>("h0")) @[rawFloatFromFN.scala 66:36]
    node _wnList_res_im_rawIn_out_isNaN_T_123 = and(wnList_res_im_rawIn_isSpecial_61, _wnList_res_im_rawIn_out_isNaN_T_122) @[rawFloatFromFN.scala 66:33]
    wnList_res_im_rawIn_61.isNaN <= _wnList_res_im_rawIn_out_isNaN_T_123 @[rawFloatFromFN.scala 66:20]
    node _wnList_res_im_rawIn_out_isInf_T_61 = and(wnList_res_im_rawIn_isSpecial_61, wnList_res_im_rawIn_isZeroFractIn_61) @[rawFloatFromFN.scala 67:33]
    wnList_res_im_rawIn_61.isInf <= _wnList_res_im_rawIn_out_isInf_T_61 @[rawFloatFromFN.scala 67:20]
    wnList_res_im_rawIn_61.isZero <= wnList_res_im_rawIn_isZero_61 @[rawFloatFromFN.scala 68:20]
    wnList_res_im_rawIn_61.sign <= wnList_res_im_rawIn_sign_61 @[rawFloatFromFN.scala 69:20]
    node _wnList_res_im_rawIn_out_sExp_T_122 = bits(wnList_res_im_rawIn_adjustedExp_61, 5, 0) @[rawFloatFromFN.scala 70:34]
    node _wnList_res_im_rawIn_out_sExp_T_123 = cvt(_wnList_res_im_rawIn_out_sExp_T_122) @[rawFloatFromFN.scala 70:48]
    wnList_res_im_rawIn_61.sExp <= _wnList_res_im_rawIn_out_sExp_T_123 @[rawFloatFromFN.scala 70:20]
    node _wnList_res_im_rawIn_out_sig_T_183 = eq(wnList_res_im_rawIn_isZero_61, UInt<1>("h0")) @[rawFloatFromFN.scala 72:29]
    node _wnList_res_im_rawIn_out_sig_T_184 = mux(wnList_res_im_rawIn_isZeroExpIn_61, wnList_res_im_rawIn_subnormFract_61, wnList_res_im_rawIn_fractIn_61) @[rawFloatFromFN.scala 72:42]
    node wnList_res_im_rawIn_out_sig_hi_61 = cat(UInt<1>("h0"), _wnList_res_im_rawIn_out_sig_T_183) @[Cat.scala 33:92]
    node _wnList_res_im_rawIn_out_sig_T_185 = cat(wnList_res_im_rawIn_out_sig_hi_61, _wnList_res_im_rawIn_out_sig_T_184) @[Cat.scala 33:92]
    wnList_res_im_rawIn_61.sig <= _wnList_res_im_rawIn_out_sig_T_185 @[rawFloatFromFN.scala 71:17]
    node _wnList_res_im_T_489 = bits(wnList_res_im_rawIn_61.sExp, 5, 3) @[recFNFromFN.scala 48:53]
    node _wnList_res_im_T_490 = mux(wnList_res_im_rawIn_61.isZero, UInt<3>("h0"), _wnList_res_im_T_489) @[recFNFromFN.scala 48:16]
    node _wnList_res_im_T_491 = mux(wnList_res_im_rawIn_61.isNaN, UInt<1>("h1"), UInt<1>("h0")) @[recFNFromFN.scala 49:20]
    node _wnList_res_im_T_492 = or(_wnList_res_im_T_490, _wnList_res_im_T_491) @[recFNFromFN.scala 48:79]
    node _wnList_res_im_T_493 = bits(wnList_res_im_rawIn_61.sExp, 2, 0) @[recFNFromFN.scala 50:23]
    node _wnList_res_im_T_494 = bits(wnList_res_im_rawIn_61.sig, 9, 0) @[recFNFromFN.scala 51:22]
    node wnList_res_im_lo_61 = cat(_wnList_res_im_T_493, _wnList_res_im_T_494) @[Cat.scala 33:92]
    node wnList_res_im_hi_61 = cat(wnList_res_im_rawIn_61.sign, _wnList_res_im_T_492) @[Cat.scala 33:92]
    node _wnList_res_im_T_495 = cat(wnList_res_im_hi_61, wnList_res_im_lo_61) @[Cat.scala 33:92]
    wire _wnList_res_im_WIRE_4 : UInt<17>[2] @[FFT.scala 88:12]
    _wnList_res_im_WIRE_4[0] <= _wnList_res_im_T_487 @[FFT.scala 88:12]
    _wnList_res_im_WIRE_4[1] <= _wnList_res_im_T_495 @[FFT.scala 88:12]
    wnList_0_4.im <= _wnList_res_im_WIRE_4[_wnList_T_9] @[FFT.scala 105:12]
    inst inst_4 of ButterflyMul_4 @[Modules.scala 287:22]
    inst_4.clock <= clock
    inst_4.reset <= reset
    inst_4.io.in[0].im <= data1_4_0[0].im @[Modules.scala 288:16]
    inst_4.io.in[0].re <= data1_4_0[0].re @[Modules.scala 288:16]
    inst_4.io.in[1].im <= data1_4_0[1].im @[Modules.scala 288:16]
    inst_4.io.in[1].re <= data1_4_0[1].re @[Modules.scala 288:16]
    inst_4.io.wn[0].im <= wnList_0_4.im @[Modules.scala 289:16]
    inst_4.io.wn[0].re <= wnList_0_4.re @[Modules.scala 289:16]
    data2_4_0 <= inst_4.io.out @[FFT.scala 136:19]
    inst dataotemp_inst of ButterflyAdd @[Modules.scala 213:22]
    dataotemp_inst.clock <= clock
    dataotemp_inst.reset <= reset
    dataotemp_inst.io.in[0].im <= data1_5_0[0].im @[Modules.scala 214:16]
    dataotemp_inst.io.in[0].re <= data1_5_0[0].re @[Modules.scala 214:16]
    dataotemp_inst.io.in[1].im <= data1_5_0[1].im @[Modules.scala 214:16]
    dataotemp_inst.io.in[1].re <= data1_5_0[1].re @[Modules.scala 214:16]
    datao[0] <= dataotemp_inst.io.out[0] @[FFT.scala 141:9]
    datao[1] <= dataotemp_inst.io.out[1] @[FFT.scala 141:9]
    node sel = bits(cnt_0, 4, 4) @[FFT.scala 163:31]
    inst inst_5 of Switch @[Modules.scala 311:22]
    inst_5.clock <= clock
    inst_5.reset <= reset
    inst_5.io.in[0].im <= data2_0_0[0].im @[Modules.scala 312:16]
    inst_5.io.in[0].re <= data2_0_0[0].re @[Modules.scala 312:16]
    inst_5.io.in[1].im <= data2_0_0[1].im @[Modules.scala 312:16]
    inst_5.io.in[1].re <= data2_0_0[1].re @[Modules.scala 312:16]
    inst_5.io.sel <= sel @[Modules.scala 313:17]
    data1_1_0 <= inst_5.io.out @[FFT.scala 164:54]
    node sel_1 = bits(cnt_0, 3, 3) @[FFT.scala 163:31]
    inst inst_6 of Switch_1 @[Modules.scala 311:22]
    inst_6.clock <= clock
    inst_6.reset <= reset
    inst_6.io.in[0].im <= data2_1_0[0].im @[Modules.scala 312:16]
    inst_6.io.in[0].re <= data2_1_0[0].re @[Modules.scala 312:16]
    inst_6.io.in[1].im <= data2_1_0[1].im @[Modules.scala 312:16]
    inst_6.io.in[1].re <= data2_1_0[1].re @[Modules.scala 312:16]
    inst_6.io.sel <= sel_1 @[Modules.scala 313:17]
    data1_2_0 <= inst_6.io.out @[FFT.scala 164:54]
    node sel_2 = bits(cnt_0, 2, 2) @[FFT.scala 163:31]
    inst inst_7 of Switch_2 @[Modules.scala 311:22]
    inst_7.clock <= clock
    inst_7.reset <= reset
    inst_7.io.in[0].im <= data2_2_0[0].im @[Modules.scala 312:16]
    inst_7.io.in[0].re <= data2_2_0[0].re @[Modules.scala 312:16]
    inst_7.io.in[1].im <= data2_2_0[1].im @[Modules.scala 312:16]
    inst_7.io.in[1].re <= data2_2_0[1].re @[Modules.scala 312:16]
    inst_7.io.sel <= sel_2 @[Modules.scala 313:17]
    data1_3_0 <= inst_7.io.out @[FFT.scala 164:54]
    node sel_3 = bits(cnt_0, 1, 1) @[FFT.scala 163:31]
    inst inst_8 of Switch_3 @[Modules.scala 311:22]
    inst_8.clock <= clock
    inst_8.reset <= reset
    inst_8.io.in[0].im <= data2_3_0[0].im @[Modules.scala 312:16]
    inst_8.io.in[0].re <= data2_3_0[0].re @[Modules.scala 312:16]
    inst_8.io.in[1].im <= data2_3_0[1].im @[Modules.scala 312:16]
    inst_8.io.in[1].re <= data2_3_0[1].re @[Modules.scala 312:16]
    inst_8.io.sel <= sel_3 @[Modules.scala 313:17]
    data1_4_0 <= inst_8.io.out @[FFT.scala 164:54]
    node sel_4 = bits(cnt_0, 0, 0) @[FFT.scala 163:31]
    inst inst_9 of Switch_4 @[Modules.scala 311:22]
    inst_9.clock <= clock
    inst_9.reset <= reset
    inst_9.io.in[0].im <= data2_4_0[0].im @[Modules.scala 312:16]
    inst_9.io.in[0].re <= data2_4_0[0].re @[Modules.scala 312:16]
    inst_9.io.in[1].im <= data2_4_0[1].im @[Modules.scala 312:16]
    inst_9.io.in[1].re <= data2_4_0[1].re @[Modules.scala 312:16]
    inst_9.io.sel <= sel_4 @[Modules.scala 313:17]
    data1_5_0 <= inst_9.io.out @[FFT.scala 164:54]
    wire _WIRE : { re : UInt<16>, im : UInt<16>} @[FFT.scala 170:91]
    node _T_1 = cat(io.dIn[0].re, io.dIn[0].im) @[FFT.scala 170:91]
    wire _WIRE_1 : UInt<32> @[FFT.scala 170:91]
    _WIRE_1 <= _T_1 @[FFT.scala 170:91]
    node _T_2 = bits(_WIRE_1, 15, 0) @[FFT.scala 170:91]
    _WIRE.im <= _T_2 @[FFT.scala 170:91]
    node _T_3 = bits(_WIRE_1, 31, 16) @[FFT.scala 170:91]
    _WIRE.re <= _T_3 @[FFT.scala 170:91]
    inst inst_10 of ComplexRecode @[Modules.scala 40:22]
    inst_10.clock <= clock
    inst_10.reset <= reset
    inst_10.io.in.im <= _WIRE.im @[Modules.scala 41:16]
    inst_10.io.in.re <= _WIRE.re @[Modules.scala 41:16]
    wire _WIRE_2 : { re : UInt<16>, im : UInt<16>} @[FFT.scala 170:91]
    node _T_4 = cat(io.dIn[1].re, io.dIn[1].im) @[FFT.scala 170:91]
    wire _WIRE_3 : UInt<32> @[FFT.scala 170:91]
    _WIRE_3 <= _T_4 @[FFT.scala 170:91]
    node _T_5 = bits(_WIRE_3, 15, 0) @[FFT.scala 170:91]
    _WIRE_2.im <= _T_5 @[FFT.scala 170:91]
    node _T_6 = bits(_WIRE_3, 31, 16) @[FFT.scala 170:91]
    _WIRE_2.re <= _T_6 @[FFT.scala 170:91]
    inst inst_11 of ComplexRecode_1 @[Modules.scala 40:22]
    inst_11.clock <= clock
    inst_11.reset <= reset
    inst_11.io.in.im <= _WIRE_2.im @[Modules.scala 41:16]
    inst_11.io.in.re <= _WIRE_2.re @[Modules.scala 41:16]
    data1_0_0[0] <= inst_10.io.out @[FFT.scala 170:19]
    data1_0_0[1] <= inst_11.io.out @[FFT.scala 170:19]
    io.busy <= busy @[FFT.scala 178:11]
    reg io_dout_valid_REG : UInt, clock with :
      reset => (UInt<1>("h0"), io_dout_valid_REG) @[FFT.scala 179:27]
    io_dout_valid_REG <= cnt_0 @[FFT.scala 179:27]
    node _io_dout_valid_T = eq(io_dout_valid_REG, UInt<5>("h1f")) @[FFT.scala 179:36]
    io.dout_valid <= _io_dout_valid_T @[FFT.scala 179:17]
    wire _WIRE_4 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 181:96]
    node _T_7 = cat(datao[0].re, datao[0].im) @[FFT.scala 181:96]
    wire _WIRE_5 : UInt<34> @[FFT.scala 181:96]
    _WIRE_5 <= _T_7 @[FFT.scala 181:96]
    node _T_8 = bits(_WIRE_5, 16, 0) @[FFT.scala 181:96]
    _WIRE_4.im <= _T_8 @[FFT.scala 181:96]
    node _T_9 = bits(_WIRE_5, 33, 17) @[FFT.scala 181:96]
    _WIRE_4.re <= _T_9 @[FFT.scala 181:96]
    inst inst_12 of ComplexDecode @[Modules.scala 56:22]
    inst_12.clock <= clock
    inst_12.reset <= reset
    inst_12.io.in.im <= _WIRE_4.im @[Modules.scala 57:16]
    inst_12.io.in.re <= _WIRE_4.re @[Modules.scala 57:16]
    reg REG : { re : UInt<16>, im : UInt<16>}, clock with :
      reset => (UInt<1>("h0"), REG) @[FFT.scala 181:64]
    REG <= inst_12.io.out @[FFT.scala 181:64]
    wire _WIRE_6 : { re : UInt<17>, im : UInt<17>} @[FFT.scala 181:96]
    node _T_10 = cat(datao[1].re, datao[1].im) @[FFT.scala 181:96]
    wire _WIRE_7 : UInt<34> @[FFT.scala 181:96]
    _WIRE_7 <= _T_10 @[FFT.scala 181:96]
    node _T_11 = bits(_WIRE_7, 16, 0) @[FFT.scala 181:96]
    _WIRE_6.im <= _T_11 @[FFT.scala 181:96]
    node _T_12 = bits(_WIRE_7, 33, 17) @[FFT.scala 181:96]
    _WIRE_6.re <= _T_12 @[FFT.scala 181:96]
    inst inst_13 of ComplexDecode_1 @[Modules.scala 56:22]
    inst_13.clock <= clock
    inst_13.reset <= reset
    inst_13.io.in.im <= _WIRE_6.im @[Modules.scala 57:16]
    inst_13.io.in.re <= _WIRE_6.re @[Modules.scala 57:16]
    reg REG_1 : { re : UInt<16>, im : UInt<16>}, clock with :
      reset => (UInt<1>("h0"), REG_1) @[FFT.scala 181:64]
    REG_1 <= inst_13.io.out @[FFT.scala 181:64]
    io.dOut[0] <= REG @[FFT.scala 181:13]
    io.dOut[1] <= REG_1 @[FFT.scala 181:13]

  module FFTtop :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip dIn : { re : UInt<16>, im : UInt<16>}[2], dOut : { re : UInt<16>, im : UInt<16>}[2], flip din_valid : UInt<1>, dout_valid : UInt<1>, busy : UInt<1>}

    inst fft of FFT @[Top.scala 15:19]
    fft.clock <= clock
    fft.reset <= reset
    fft.io.dIn[0].im <= io.dIn[0].im @[Top.scala 16:14]
    fft.io.dIn[0].re <= io.dIn[0].re @[Top.scala 16:14]
    fft.io.dIn[1].im <= io.dIn[1].im @[Top.scala 16:14]
    fft.io.dIn[1].re <= io.dIn[1].re @[Top.scala 16:14]
    fft.io.din_valid <= io.din_valid @[Top.scala 17:20]
    io.dOut <= fft.io.dOut @[Top.scala 27:13]
    io.dout_valid <= fft.io.dout_valid @[Top.scala 28:19]
    io.busy <= fft.io.busy @[Top.scala 29:13]

